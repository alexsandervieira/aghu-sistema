<!-- JBoss, Home of Professional Open Source Copyright 2013, Red Hat, Inc. 
	and/or its affiliates, and individual contributors by the @authors tag. See 
	the copyright.txt in the distribution for a full listing of individual contributors. 
	Licensed under the Apache License, Version 2.0 (the "License"); you may not 
	use this file except in compliance with the License. You may obtain a copy 
	of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>aghu-ear</artifactId>
	<packaging>ear</packaging>

	<parent>
		<artifactId>aghu</artifactId>
		<groupId>br.gov.mec</groupId>
		<version>7.31-STABLE</version>
	</parent>

	<name>aghu: EAR Module</name>

	<url>http://jboss.org/jbossas</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>
	
	<properties>
		<svn-info.buildDate></svn-info.buildDate>
		<svn-info.checkoutRev></svn-info.checkoutRev>
		<svn-info.jboss>/opt/jboss/</svn-info.jboss>
	</properties>

	<dependencies>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-dao</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec.aghu-core</groupId>
			<artifactId>aghu-core-commons</artifactId>
			<version>${aghu-core-commons.versao}</version>
			<type>jar</type>
			<scope>compile</scope>            
		</dependency>
		
		

		<!-- Depend on the ejb module and war so that we can package them -->
		<!-- Define the version of the WAR so that we don't need to repeat ourselves 
			in every module -->
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-web</artifactId>
			<version>${project.version}</version>
			<type>war</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-persistence</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-casca</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-casca-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-registrocolaborador</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-registrocolaborador-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-paciente</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-api-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-paciente-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-internacao</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-internacao-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-configuracao</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-configuracao-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>		
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-certificacaodigital</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>bcprov-jdk15</artifactId>
					<groupId>org.bouncycastle</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bcmail-jdk15</artifactId>
					<groupId>org.bouncycastle</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-certificacaodigital-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>


		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>${entidades.nome}</artifactId>
			<version>${entidades.versao}</version>
			<scope>compile</scope>       				
		</dependency>
		
		<dependency>
            <groupId>br.gov.mec</groupId>
            <artifactId>aghu-vo</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>                       
        </dependency>

		<!-- Novo Modulos - inicio -->
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-administracao</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		 
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-administracao-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-emergencia</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-ambulatorio</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-ambulatorio-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>		
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-bancosangue</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-blococirurgico</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-blococirurgico-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-centrocusto</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-centrocusto-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>		
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-checagemeletronica</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-comissoes</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-compras</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-controleinfeccao</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-controlepaciente</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-controlepaciente-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>

	
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-estoque</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
			<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-patrimonio</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>	
    	
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-transplante</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-exames</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>org.xhtmlrenderer.pdf</groupId>
					<artifactId>core-renderer-flyingsaucer</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-exames-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>org.xhtmlrenderer.pdf</groupId>
					<artifactId>core-renderer-flyingsaucer</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-farmacia</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-faturamento</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-indicadores</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-nutricao</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-orcamento</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-perinatologia</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-prescricaoenfermagem</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-prescricaomedica</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-prescricaomedica-service</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-procedimentoterapeutico</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-protocolos</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-sicon</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-sig</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-integracao</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		
		
		<!-- Novo Modulos - Final -->		

		<dependency>
			<groupId>org.xhtmlrenderer.pdf</groupId>
			<artifactId>core-renderer-flyingsaucer</artifactId>
			<version>1.0.0</version>
    	</dependency>
    	
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.5.0</version>
    	</dependency>    	
		
		<dependency>
		     <groupId>org.hibernate</groupId>
		     <artifactId>hibernate-search</artifactId>
		     <scope>compile</scope>
		     <exclusions>
		      <exclusion>
		         <groupId>antlr</groupId>
		         <artifactId>antlr</artifactId>
		      </exclusion>
		   </exclusions>
		 </dependency>
		 
		 <!-- Lib alterada para o AGHU conforme descrito em:
			http://redmine084.mec.gov.br/projects/aghu/wiki/Fontes_para_render_PDFs_com_HTML -->
		<dependency>
			<groupId>br.gov.mec</groupId>
			<artifactId>aghu-jasperreports-fonts</artifactId>
			<version>1.0</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>${contexto}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-ear-plugin</artifactId>
				<version>${version.ear.plugin}</version>
				<configuration>
					<filtering>true</filtering>

					<!-- Tell Maven we are using Java EE 6 -->
					<version>6</version>
					<!-- Use Java EE ear libraries as needed. Java EE ear libraries are 
						in easy way to package any libraries needed in the ear, and automatically 
						have any modules (EJB-JARs and WARs) use them -->
					<defaultLibBundleDir>lib</defaultLibBundleDir>
					<modules>
						<webModule>
							<groupId>br.gov.mec</groupId>
							<artifactId>aghu-web</artifactId>
							<bundleFileName>aghu.war</bundleFileName>
							<contextRoot>/${contexto}</contextRoot>
							<unpack>${descompactar}</unpack>
						</webModule>

					</modules>
					<fileNameMapping>no-version</fileNameMapping>
				</configuration>
			</plugin>
			<!-- The JBoss AS plugin deploys your ear to a local JBoss AS container -->
			<!-- Due to Maven's lack of intelligence with EARs we need to configure 
				the jboss-as maven plugin to skip deployment for all modules. We then enable 
				it specifically in the ear module. -->
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>1.0.2.Final</version>
				<configuration>
					<filename>${contexto}.ear</filename>
					<skip>false</skip>
					<unpack>${descompactar}</unpack>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-ear-plugin</artifactId>
						<version>${version.ear.plugin}</version>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>configuracao</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<!-- dbaghu -->
                                        <filterset id="datasource.params.dbaghu">
                                            <filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
                                            <filter token="datasource.url" value="jdbc:postgresql://10.211.99.139:5432/dbaghu" />
                                            <filter token="datasource.driver" value="PostgresqlDriver" />
                                            <filter token="datasource.user.name" value="postgres" />
                                            <filter token="datasource.password" value="" />
                                            <filter token="datasource.password.text" value="" />
                                            <filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
                                            <filter token="sql-connection-check-valid-new" value="select now()" />
                                            <filter token="valid-connection-checker" value="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker" />
                                            <filter token="hibernate.dialect.classname" value="br.gov.mec.aghu.core.persistence.dialect.PostgreSQLExtendedDialect" />
                                            <filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.PostgreSQLDelegate" />
                                            <filter token="quartz.dataSource.driver" value="org.postgresql.xa.PGXADataSource" />
                                            <filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-pg}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-pg}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
                                        </filterset>
                                        
                                        <!-- hcpastg -->
  										<filterset id="datasource.params.hcpastg">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
											<filter token="datasource.url" value="jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=devrac01-scan)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=Srn_hcpastg_001)))" />
											<filter token="datasource.driver" value="OracleDriver" />
											<filter token="datasource.user.name" value="${dbuser}" />
											<filter token="datasource.password" value="${dbpwd}" />
											<filter token="datasource.password.text" value="${dbpwd}" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select 1 from dual" />
											<filter token="valid-connection-checker" value="org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.aghu.core.persistence.dialect.Oracle10gExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.oracle.OracleDelegate" />
											<filter token="quartz.dataSource.driver" value="oracle.jdbc.OracleDriver" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-ora}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-ora}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
										
										<!-- hcpaops -->
  										<filterset id="datasource.params.hcpaops">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
                                            <filter token="datasource.jndi.emergencia" value="${datasource.jndi.emergencia}" />
											<filter token="datasource.url" value="jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=devrac01-scan)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=Srn_hcpaops_001)))" />
											<filter token="datasource.driver" value="OracleDriver" />
											<filter token="datasource.user.name" value="${dbuser}" />
											<filter token="datasource.password" value="${dbpwd}" />
											<filter token="datasource.password.text" value="${dbpwd}" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select 1 from dual" />
											<filter token="valid-connection-checker" value="org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.aghu.core.persistence.dialect.Oracle10gExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.oracle.OracleDelegate" />
											<filter token="quartz.dataSource.driver" value="oracle.jdbc.OracleDriver" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-ora}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-ora}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
   										
										<!-- hcpahm -->
  										<filterset id="datasource.params.hcpahm">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
											<filter token="datasource.url" value="jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=devrac01-scan)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=Srn_hcpahm_001)))" />
											<filter token="datasource.driver" value="OracleDriver" />
											<filter token="datasource.user.name" value="UGEN_AGHU" />
											<filter token="datasource.password" value="6b3e63546c6313e8df8592078de921bc" />
											<filter token="datasource.password.text" value="6b3e63546c6313e8df8592078de921bc" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select 1 from dual" />
											<filter token="valid-connection-checker" value="org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.aghu.core.persistence.dialect.Oracle10gExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.oracle.OracleDelegate" />
											<filter token="quartz.dataSource.driver" value="oracle.jdbc.OracleDriver" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-ora}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-ora}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
   										
   										<!-- aprd -->
  										<filterset id="datasource.params.aprd">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
											<filter token="datasource.url" value="jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=devrac01-scan)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=Srn_aprd_001)))" />
											<filter token="datasource.driver" value="OracleDriver" />
											<filter token="datasource.user.name" value="UGEN_AGHU" />
											<filter token="datasource.password" value="-55c6b1744a5e88a89a29a23dce6d664c" />
											<filter token="datasource.password.text" value="-55c6b1744a5e88a89a29a23dce6d664c" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select 1 from dual" />
											<filter token="valid-connection-checker" value="org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.aghu.core.persistence.dialect.Oracle10gExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.oracle.OracleDelegate" />
											<filter token="quartz.dataSource.driver" value="oracle.jdbc.OracleDriver" />											
                                            <filter token="sso.hostid" value="${sso.hostid}" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-ora}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-ora}" />
   										</filterset>
  										
										<!-- pgh -->
  										<filterset id="datasource.params.pgh">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
											<filter token="datasource.url" value="jdbc:postgresql://10.10.31.223:6544/pgh" />
											<filter token="datasource.driver" value="PostgresqlDriver" />
											<filter token="datasource.user.name" value="ugen_aghu" />
											<filter token="datasource.password" value="-3ac45e7dcbab3aa5207a6df87216de44" /> 
											<filter token="datasource.password.text" value="-3ac45e7dcbab3aa5207a6df87216de44" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select now()" />
											<filter token="valid-connection-checker" value="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.aghu.core.persistence.dialect.PostgreSQLExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.PostgreSQLDelegate" />
											<filter token="quartz.dataSource.driver" value="org.postgresql.xa.PGXADataSource" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-pg}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-pg}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>

										<!-- pgd -->
  										<filterset id="datasource.params.pgd">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
											<filter token="datasource.url" value="jdbc:postgresql://10.10.31.222:6544/pgd" />
											<filter token="datasource.driver" value="PostgresqlDriver" />
											<filter token="datasource.user.name" value="ugen_aghu" />
											<filter token="datasource.password" value="-55c6b1744a5e88a89a29a23dce6d664c" />
											<filter token="datasource.password.text" value="-55c6b1744a5e88a89a29a23dce6d664c" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select now()" />
											<filter token="valid-connection-checker" value="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.aghu.core.persistence.dialect.PostgreSQLExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.PostgreSQLDelegate" />
											<filter token="quartz.dataSource.driver" value="org.postgresql.xa.PGXADataSource" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-pg}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-pg}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
   										
										<!-- pg-url-string-pgd -->
  										<filterset id="datasource.params.pg-url-string-pgd">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
                                            <filter token="datasource.jndi.emergencia" value="${datasource.jndi.emergencia}" />
											<filter token="datasource.url" value="jdbc:postgresql://172.17.62.53:5432/pgd" />
											<filter token="datasource.driver" value="PostgresqlDriver" />
											<filter token="datasource.user.name" value="postgres" />
											<filter token="datasource.password" value="-4c32394434b2e399" /> 
											<filter token="datasource.password.text" value="hu8jmn3" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select now()" />
											<filter token="valid-connection-checker" value="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.ebserh.core.persistence.dialect.PostgreSQLExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.PostgreSQLDelegate" />
											<filter token="quartz.dataSource.driver" value="org.postgresql.xa.PGXADataSource" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-pg}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-pg}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
										   										   										
   										<!-- pg-url-string-hujf-63 -->
  										<filterset id="datasource.params.pg-url-string-hujf-63">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
                                            <filter token="datasource.jndi.emergencia" value="${datasource.jndi.emergencia}" />
											<filter token="datasource.url" value="jdbc:postgresql://172.17.62.46:6544/dbaghu-hujf-63" />
											<filter token="datasource.driver" value="PostgresqlDriver" />
											<filter token="datasource.user.name" value="ugen_aghu" />
											<filter token="datasource.password" value="-55c6b1744a5e88a89a29a23dce6d664c" /> 
											<filter token="datasource.password.text" value="ugen_aghu" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select now()" />
											<filter token="valid-connection-checker" value="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.ebserh.core.persistence.dialect.PostgreSQLExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.PostgreSQLDelegate" />
											<filter token="quartz.dataSource.driver" value="org.postgresql.xa.PGXADataSource" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-pg}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-pg}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
   																			
										<!-- pg-url-string-hugd-63 -->
  										<filterset id="datasource.params.pg-url-string-hugd-63">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
                                            <filter token="datasource.jndi.emergencia" value="${datasource.jndi.emergencia}" />
											<filter token="datasource.url" value="jdbc:postgresql://172.17.62.46:6544/migracao-dbaghu-hugd-63" />
											<filter token="datasource.driver" value="PostgresqlDriver" />
											<filter token="datasource.user.name" value="ugen_aghu" />
											<filter token="datasource.password" value="-55c6b1744a5e88a89a29a23dce6d664c" /> 
											<filter token="datasource.password.text" value="ugen_aghu" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select now()" />
											<filter token="valid-connection-checker" value="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.ebserh.core.persistence.dialect.PostgreSQLExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.PostgreSQLDelegate" />
											<filter token="quartz.dataSource.driver" value="org.postgresql.xa.PGXADataSource" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-pg}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-pg}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
   										
   										<!-- pg-url-string-ip-schema -->
  										<filterset id="datasource.params.pg-url-string-ip-schema">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
                                            <filter token="datasource.jndi.emergencia" value="${datasource.jndi.emergencia}" />
											<filter token="datasource.url" value="jdbc:postgresql://${datasource.ip}:6544/${datasource.schema}" />
											<filter token="datasource.driver" value="PostgresqlDriver" />
											<filter token="datasource.user.name" value="ugen_aghu" />
											<filter token="datasource.password" value="-55c6b1744a5e88a89a29a23dce6d664c" /> 
											<filter token="datasource.password.text" value="ugen_aghu" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select now()" />
											<filter token="valid-connection-checker" value="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.ebserh.core.persistence.dialect.PostgreSQLExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.PostgreSQLDelegate" />
											<filter token="quartz.dataSource.driver" value="org.postgresql.xa.PGXADataSource" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-pg}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-pg}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
										
										<filterset id="applicationParameters">
										    <filter token="tema.aghu" value="${tema}" />
										    <filter token="logout.unload" value="${logoutunload}" />
										    <filter token="sistema.cups" value="${sistemacups}" />
										    <filter token="certificado.nfe" value="${certificadonfe}" />
										    <filter token="exec.quartz" value="${executaquartz}" />
											<filter token="exec.quartz.exames" value="${executaquartzExames}" />
											<filter token="contexto" value="${contexto}" />
											<filter token="context-remote" value="${context-remote}" />
										</filterset>
										
										<copy overwrite="true" todir="${jboss.home}/modules">
											<fileset dir="${basedir}/src/main/config-outside/moduloconfiguracao" />
										</copy>										
										
										<delete>
										 	<fileset dir="${jboss.home}/modules/br/gov/mec/aghu/security/main" 
										 		includes="aghu-core-security-*.jar" />
										 </delete>
										<copy overwrite="true" todir="${jboss.home}/modules">
											<fileset dir="${basedir}/src/main/config-outside/moduloseguranca" />
										</copy>										
										
										<copy overwrite="true" todir="${jboss.home}/modules/org">
											<fileset dir="${basedir}/src/main/config-outside/modulodriverpostgresql" />
										</copy>
										
										<!-- faz downgrade de 1.52 para 1.49 devido as dependencias do aghu para esta lib,
											o wildfly adiciona o provider no start, não sendo possivel excluir o modulo no
											jboss-deployment-structure -->
										<copy overwrite="true" todir="${jboss.home}/modules/system/layers/base/">
											<fileset dir="${basedir}/src/main/config-outside/modulobouncycastle" />
										</copy>										

										<copy overwrite="true" todir="${jboss.home}/modules/">
											<fileset dir="${basedir}/src/main/config-outside/moduloc3p0" />
										</copy>	
										
										<copy overwrite="true" todir="${jboss.home}/modules/org">
											<fileset dir="${basedir}/src/main/config-outside/moduloquartz" />
										</copy>	
										
										<!-- nao eh recomendado usar filterset durante copias de jars entao tem que fazer o properties separado, 
											obrigatoriamente apos a copia do moduloquartz -->
										<copy overwrite="true" file="${basedir}/src/main/config-outside/moduloquartz/quartz/main/properties/quartz.properties"
											tofile="${jboss.home}/modules/org/quartz/main/properties/quartz.properties">
											<filterset refid="datasource.params.${dbfilter}" />
										</copy> 
										
										<copy overwrite="true" todir="${jboss.home}/modules/com">
											<fileset dir="${basedir}/src/main/config-outside/modulodriveroracle" />
										</copy>					
										
										<copy overwrite="true" todir="${jboss.home}/modules/system/layers/base/org/hibernate">
											<fileset dir="${basedir}/src/main/config-outside/hibernate-dialetos" />											
										</copy>	
										
										<copy overwrite="true" todir="${jboss.home}/modules/system/layers/base/org/hibernate/main">
											<fileset dir="${basedir}/src/main/config-outside/hibernate-properties" />
											<filterset refid="datasource.params.${dbfilter}" />											
										</copy>	
											
										<copy overwrite="true"
											file="${basedir}/src/main/config-outside/standalone-full-aghu.xml"
											tofile="${jboss.home}/standalone/configuration/standalone-full.xml" >
											 <filterset refid="datasource.params.${dbfilter}" />
										</copy>										
										
										<copy overwrite="true"
											file="${basedir}/src/main/config-outside/application-users.properties"
											tofile="${jboss.home}/standalone/configuration/application-users.properties">
										</copy>														
										
										<copy overwrite="true"
											file="${basedir}/src/main/config-outside/bandeiras/${logo.hospital}.png"
											tofile="${jboss.home}/modules/br/gov/mec/aghu/configuration/main/properties/logo-hospital.png" >
										</copy>

										<copy overwrite="true"
											file="${basedir}/src/main/config-outside/moduloconfiguracao/br/gov/mec/aghu/configuration/main/properties/app-parameters.properties"
											tofile="${jboss.home}/modules/br/gov/mec/aghu/configuration/main/properties/app-parameters.properties">
											<filterset refid="applicationParameters" />
										</copy>

																		
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		

		<profile>
			<id>datasource</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
                                        <!-- ora-url-string -->
  										<filterset id="datasource.params.ora-url-string">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
                                            <filter token="datasource.jndi.emergencia" value="${datasource.jndi.emergencia}" />
											<filter token="datasource.url" value="jdbc:oracle:thin:@serverdb:1521:EBSERHSTG" />
											<filter token="datasource.driver" value="OracleDriver" />
											<filter token="datasource.user.name" value="${dbuser}" />
											<filter token="datasource.password" value="${dbpwd}" />
											<filter token="datasource.password.text" value="${dbpwd}" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select 1 from dual" />
											<filter token="valid-connection-checker" value="org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.ebserh.core.persistence.dialect.Oracle10gExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.oracle.OracleDelegate" />
											<filter token="quartz.dataSource.driver" value="oracle.jdbc.OracleDriver" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-ora}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-ora}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
   										
										<!-- ora-url-rac -->
  										<filterset id="datasource.params.ora-url-rac">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
                                            <filter token="datasource.jndi.emergencia" value="${datasource.jndi.emergencia}" />
											<filter token="datasource.url" value="jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=aghurac-scan)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=Srn_ebserhhm_001)))" />
											<filter token="datasource.driver" value="OracleDriver" />
											<filter token="datasource.user.name" value="UGEN_AGHU" />
											<filter token="datasource.password" value="6b3e63546c6313e8df8592078de921bc" />
											<filter token="datasource.password.text" value="6b3e63546c6313e8df8592078de921bc" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select 1 from dual" />
											<filter token="valid-connection-checker" value="org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.ebserh.core.persistence.dialect.Oracle10gExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.oracle.OracleDelegate" />
											<filter token="quartz.dataSource.driver" value="oracle.jdbc.OracleDriver" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-ora}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-ora}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
   										
										<!-- pg-url-string-pgd -->
  										<filterset id="datasource.params.pg-url-string-pgd">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
                                            <filter token="datasource.jndi.emergencia" value="${datasource.jndi.emergencia}" />
											<filter token="datasource.url" value="jdbc:postgresql://172.17.62.53:5432/pgd" />
											<filter token="datasource.driver" value="PostgresqlDriver" />
											<filter token="datasource.user.name" value="postgres" />
											<filter token="datasource.password" value="-4c32394434b2e399" /> 
											<filter token="datasource.password.text" value="hu8jmn3" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select now()" />
											<filter token="valid-connection-checker" value="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.ebserh.core.persistence.dialect.PostgreSQLExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.PostgreSQLDelegate" />
											<filter token="quartz.dataSource.driver" value="org.postgresql.xa.PGXADataSource" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-pg}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-pg}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
										   										   										
   										<!-- pg-url-string-hujf-63 -->
  										<filterset id="datasource.params.pg-url-string-hujf-63">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
                                            <filter token="datasource.jndi.emergencia" value="${datasource.jndi.emergencia}" />
											<filter token="datasource.url" value="jdbc:postgresql://172.17.62.46:6544/dbaghu-hujf-63" />
											<filter token="datasource.driver" value="PostgresqlDriver" />
											<filter token="datasource.user.name" value="ugen_aghu" />
											<filter token="datasource.password" value="-55c6b1744a5e88a89a29a23dce6d664c" /> 
											<filter token="datasource.password.text" value="ugen_aghu" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select now()" />
											<filter token="valid-connection-checker" value="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.ebserh.core.persistence.dialect.PostgreSQLExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.PostgreSQLDelegate" />
											<filter token="quartz.dataSource.driver" value="org.postgresql.xa.PGXADataSource" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-pg}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-pg}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
   										   										
   										<!-- pg-url-string-hugd-63 -->
  										<filterset id="datasource.params.pg-url-string-hugd-63">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
                                            <filter token="datasource.jndi.emergencia" value="${datasource.jndi.emergencia}" />
											<filter token="datasource.url" value="jdbc:postgresql://172.17.62.46:6544/migracao-dbaghu-hugd-63" />
											<filter token="datasource.driver" value="PostgresqlDriver" />
											<filter token="datasource.user.name" value="ugen_aghu" />
											<filter token="datasource.password" value="-55c6b1744a5e88a89a29a23dce6d664c" /> 
											<filter token="datasource.password.text" value="ugen_aghu" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select now()" />
											<filter token="valid-connection-checker" value="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.ebserh.core.persistence.dialect.PostgreSQLExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.PostgreSQLDelegate" />
											<filter token="quartz.dataSource.driver" value="org.postgresql.xa.PGXADataSource" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-pg}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-pg}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
   										
   										<!-- pg-url-string-ip-schema -->
  										<filterset id="datasource.params.pg-url-string-ip-schema">
											<filter token="datasource.jndi.name" value="${datasource.jndi.name}" />
                                            <filter token="datasource.jndi.emergencia" value="${datasource.jndi.emergencia}" />
											<filter token="datasource.url" value="jdbc:postgresql://${datasource.ip}:6544/${datasource.schema}" />
											<filter token="datasource.driver" value="PostgresqlDriver" />
											<filter token="datasource.user.name" value="ugen_aghu" />
											<filter token="datasource.password" value="-55c6b1744a5e88a89a29a23dce6d664c" /> 
											<filter token="datasource.password.text" value="ugen_aghu" />
											<filter token="datasource.policy.name" value="EncryptAghuDBPassword" />
											<filter token="sql-connection-check-valid-new" value="select now()" />
											<filter token="valid-connection-checker" value="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker" />
											<filter token="hibernate.dialect.classname" value="br.gov.mec.ebserh.core.persistence.dialect.PostgreSQLExtendedDialect" />
											<filter token="quartz.jobStore.driver.delegate.class" value="org.quartz.impl.jdbcjobstore.PostgreSQLDelegate" />
											<filter token="quartz.dataSource.driver" value="org.postgresql.xa.PGXADataSource" />
											<filter token="login-module.class" value="${login-module.class}" />
                                            <filter token="login-module.validar-autenticacao-negocial" value="${login-module.validar-autenticacao-negocial-pg}" />
                                            <filter token="login-module.verificar-vinculo-servidor" value="${login-module.verificar-vinculo-servidor-pg}" />
                                            <filter token="sso.hostid" value="${sso.hostid}" />
   										</filterset>
																				
										<copy overwrite="true" file="${basedir}/src/main/config-outside/moduloquartz/quartz/main/properties/quartz.properties"
											tofile="${jboss.home}/modules/org/quartz/main/properties/quartz.properties">
											<filterset refid="datasource.params.${dbfilter}" />
										</copy> 
																				
										<copy overwrite="true" todir="${jboss.home}/modules/system/layers/base/org/hibernate/main">
											<fileset dir="${basedir}/src/main/config-outside/hibernate-properties" />
											<filterset refid="datasource.params.${dbfilter}" />											
										</copy>	
											
										<copy overwrite="true"
											file="${basedir}/src/main/config-outside/standalone-full-aghu.xml"
											tofile="${jboss.home}/standalone/configuration/standalone-full.xml" >
											 <filterset refid="datasource.params.${dbfilter}" />
										</copy>										
										
										
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>logohospital</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<copy overwrite="true"
											file="${basedir}/src/main/config-outside/bandeiras/${logo.hospital}.png"
											tofile="${jboss.home}/modules/br/gov/mec/aghu/configuration/main/properties/logo-hospital.png" >
										</copy>
										
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>svninfo</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>ant</groupId>
								<artifactId>ant-nodeps</artifactId>
								<version>1.6.5</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<fileset id="svn" dir="${basedir}/lib/svn">
											<include name="*.jar" />
										</fileset>
										
										<path id="svn.classpath">
											<fileset refid="svn" />
										</path>
										
										<!-- Configura a task para operações no Subversion -->
										<typedef resource="org/tigris/subversion/svnant/svnantlib.xml"
											classpathref="svn.classpath" />
										
										<echo>Autenticando no SVN com ${redmine.user}...</echo>
										
										<svnSetting
									        javahl="false" svnkit="false"
									        username="${redmine.user}" password="${redmine.pass}"
									        failonerror="false" dateFormatter="dd/MM/yyyy HH:MM"  
									        id="svn.settings">
									    </svnSetting>
									    
									    <svn refid="svn.settings" >  
									    	<info target="${basedir}/../" propPrefix="svn.info" />
									    </svn>
									    
										<tstamp>
										   <format property="now" pattern="dd/MM/yyyy HH:mm"/>
										</tstamp>
										
										<!-- Gera arquivo no WAR para uso da aplicacao -->
										<mkdir dir="${basedir}/../aghu-web/target/classes/"/>
										<propertyfile
											file="${basedir}/../aghu-web/target/classes/messages-svninfo.properties"
											comment="Informacoes do Subversion para este build - war">
											
											<entry key="svn_path" operation="=" value="${svn.info.path}" />
											<entry key="svn_url" operation="=" value="${svn.info.url}" />
											<entry key="svn_repouuid" operation="="
												value="${svn.info.repouuid}" />
											<entry key="svn_rev" operation="=" value="${svn.info.rev}" />
											<entry key="svn_nodekind" operation="="
												value="${svn.info.nodekind}" />
											<entry key="svn_schedule" operation="="
												value="${svn.info.schedule}" />
											<entry key="svn_author" operation="=" value="${svn.info.author}" />
											<entry key="svn_lastRev" operation="=" value="${svn.info.lastRev}" />
											<entry key="svn_checkoutRev" operation="=" value="${svn.info.lastRev}" />
											<entry key="svn_buildDate" operation="=" value="${now}" />
											<entry key="svn_lastDate" operation="=" value="${svn.info.lastDate}" />											 
										</propertyfile>
										
										<!-- Gera arquivo no EAR para uso do Jenkins -->
										<mkdir dir="${basedir}/target/${contexto}/"/>
										<copy overwrite="true" file="${basedir}/../aghu-web/target/classes/messages-svninfo.properties"
											tofile="${basedir}/target/${contexto}/messages-svninfo.properties">
										</copy> 
										
										<copy overwrite="true" file="${basedir}/../aghu-web/src/main/resources/bundle/aghu/messages_aghu.properties"
											tofile="${basedir}/target/${contexto}/messages_aghu.properties">
										</copy> 
										
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


	</profiles>
	
	
</project>
