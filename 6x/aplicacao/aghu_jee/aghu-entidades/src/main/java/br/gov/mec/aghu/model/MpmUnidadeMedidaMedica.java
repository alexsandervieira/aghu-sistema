package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;


import org.hibernate.annotations.Proxy;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MpmUnidadeMedidaMedicaConverter generated by hbm2java
 */

@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@SequenceGenerator(name="mpmUmmSq1", sequenceName="AGH.MPM_UMM_SQ1", allocationSize = 1)
@Proxy(lazy=false)
@Table(name = "MPM_UNIDADE_MEDIDA_MEDICAS", schema = "AGH")
public class MpmUnidadeMedidaMedica extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1100130017589717104L;
	private Integer seq;
	private RapServidores servidor;
	private String descricao;
	private Date criadoEm;
	
	private DominioSimNao indPrescricaoDose;
	private DominioSimNao indMonitHemodinamica;
	private DominioSimNao indVolumeNpt;
	private DominioSimNao indUsoNutricao;
	private DominioSimNao indConcentracao;
	private DominioSimNao indUsoDialise;
	private Boolean indConcentracaoAlvo;

	private DominioSituacao indSituacao;
	private Set<MpmTipoModoUsoProcedimento> mpmTipoModUsoProcedimentoses = new HashSet<MpmTipoModoUsoProcedimento>(0);
	private Set<AfaFormaDosagem> formasDosagens = new HashSet<AfaFormaDosagem>(0);
	

	public MpmUnidadeMedidaMedica() {
	}

	public MpmUnidadeMedidaMedica(Integer seq,RapServidores servidor,
			 String descricao, Date criadoEm,
			 DominioSimNao indPrescricaoDose, DominioSimNao indMonitHemodinamica,
			 DominioSimNao indVolumeNpt, DominioSimNao indUsoNutricao, DominioSimNao indConcentracao,
			DominioSituacao indSituacao, DominioSimNao indUsoDialise, Boolean indConcentracaoAlvo) {
		this.seq = seq;
		this.servidor = servidor;
		this.descricao = descricao;
		this.criadoEm = criadoEm;
		this.indPrescricaoDose = indPrescricaoDose;
		this.indMonitHemodinamica = indMonitHemodinamica;
		this.indVolumeNpt = indVolumeNpt;
		this.indUsoNutricao = indUsoNutricao;
		this.indConcentracao = indConcentracao;
		this.indSituacao = indSituacao;
		this.indUsoDialise = indUsoDialise;
		this.indConcentracaoAlvo = indConcentracaoAlvo;
	}

	

	public MpmUnidadeMedidaMedica(Integer seq, RapServidores servidor,
			String descricao, Date criadoEm, DominioSimNao indPrescricaoDose,
			DominioSimNao indMonitHemodinamica, DominioSimNao indVolumeNpt,
			DominioSimNao indUsoNutricao, DominioSimNao indConcentracao, DominioSituacao indSituacao,
			DominioSimNao indUsoDialise, Boolean indConcentracaoAlvo,
			Set<MpmTipoModoUsoProcedimento> mpmTipoModUsoProcedimentoses) {
		super();
		this.seq = seq;
		this.servidor = servidor;
		this.descricao = descricao;
		this.criadoEm = criadoEm;
		this.indPrescricaoDose = indPrescricaoDose;
		this.indMonitHemodinamica = indMonitHemodinamica;
		this.indVolumeNpt = indVolumeNpt;
		this.indUsoNutricao = indUsoNutricao;
		this.indConcentracao = indConcentracao;
		this.indSituacao = indSituacao;
		this.indUsoDialise = indUsoDialise;
		this.indConcentracaoAlvo = indConcentracaoAlvo;
		this.mpmTipoModUsoProcedimentoses = mpmTipoModUsoProcedimentoses;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mpmUmmSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 5, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 30)
	@Length(max = 30)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_PRESCRICAO_DOSE", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndPrescricaoDose() {
		return this.indPrescricaoDose;
	}

	public void setIndPrescricaoDose(DominioSimNao indPrescricaoDose) {
		this.indPrescricaoDose = indPrescricaoDose;
	}

	@Column(name = "IND_MONIT_HEMODINAMICA", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndMonitHemodinamica() {
		return this.indMonitHemodinamica;
	}

	public void setIndMonitHemodinamica(DominioSimNao indMonitHemodinamica) {
		this.indMonitHemodinamica = indMonitHemodinamica;
	}

	@Column(name = "IND_VOLUME_NPT", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndVolumeNpt() {
		return this.indVolumeNpt;
	}

	public void setIndVolumeNpt(DominioSimNao indVolumeNpt) {
		this.indVolumeNpt = indVolumeNpt;
	}

	@Column(name = "IND_USO_NUTRICAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndUsoNutricao() {
		return this.indUsoNutricao;
	}

	public void setIndUsoNutricao(DominioSimNao indUsoNutricao) {
		this.indUsoNutricao = indUsoNutricao;
	}

	@Column(name = "IND_CONCENTRACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndConcentracao() {
		return this.indConcentracao;
	}

	public void setIndConcentracao(DominioSimNao indConcentracao) {
		this.indConcentracao = indConcentracao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "IND_USO_DIALISE", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndUsoDialise() {
		return this.indUsoDialise;
	}

	public void setIndUsoDialise(DominioSimNao indUsoDialise) {
		this.indUsoDialise = indUsoDialise;
	}

    @Column(name = "IND_CONCENTRACAO_ALVO", nullable = false)
    @org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndConcentracaoAlvo() {
		return this.indConcentracaoAlvo;
	}

	public void setIndConcentracaoAlvo(Boolean indConcentracaoAlvo) {
		this.indConcentracaoAlvo = indConcentracaoAlvo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidadeMedidaMedica")
	public Set<MpmTipoModoUsoProcedimento> getMpmTipoModUsoProcedimentoses() {
		return this.mpmTipoModUsoProcedimentoses;
	}

	public void setMpmTipoModUsoProcedimentoses(
			Set<MpmTipoModoUsoProcedimento> mpmTipoModUsoProcedimentoses) {
		this.mpmTipoModUsoProcedimentoses = mpmTipoModUsoProcedimentoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidadeMedidaMedicas")
	public Set<AfaFormaDosagem> getFormasDosagens() {
		return formasDosagens;
	}

	public void setFormasDosagens(Set<AfaFormaDosagem> formasDosagens) {
		this.formasDosagens = formasDosagens;
	}


	/**
	 * FIELDS
	 */
	public enum Fields {
		SEQ("seq"),
		SERVIDOR("servidor"),
		DESCRICAO("descricao"),
		FORMAS_DOSAGENS("formasDosagens"),
		FORMAS_DOSAGENS_SEQ("formasDosagens.seq"),
		COD_MEDICAMENTO("formasDosagens.afaMedicamentos.matCodigo"),
		CRIADO_EM("criadoEm"),
		IND_PRESCRICAO_DOSE("indPrescricaoDose"),
		IND_MONIT_HEMODINAMICA("indMonitHemodinamica"),
		IND_VOLUME_NPT("indVolumeNpt"),
		IND_USO_NUTRICAO("indUsoNutricao"),
		IND_CONCETRACAO("indConcentracao"),
		IND_SITUACAO("indSituacao"),
		IND_USO_DIALISE("indUsoDialise"),
		IND_CONCENTRACAO_ALVO("indConcentracaoAlvo"),
		MPM_TIPO_MOD_USO_PROCEDIMENTOS("mpmTipoModUsoProcedimentoses");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}


	@Transient
	public boolean isIndAuxPrescricaoDose() {
		return indPrescricaoDose != null ? indPrescricaoDose.isSim() : false; 
	}

	public void setIndAuxPrescricaoDose(boolean indAuxPrescricaoDose) {
		this.indPrescricaoDose = DominioSimNao.getInstance(indAuxPrescricaoDose);
	}

	@Transient
	public boolean isIndAuxMonitHemodinamica() {
		return indMonitHemodinamica != null ? indMonitHemodinamica.isSim() : false; 
	}

	public void setIndAuxMonitHemodinamica(boolean indAuxMonitHemodinamica) {
		this.indMonitHemodinamica = DominioSimNao.getInstance(indAuxMonitHemodinamica);
	}

	@Transient
	public boolean isIndAuxVolumeNpt() {
		return indVolumeNpt != null ? indVolumeNpt.isSim() : false;
	}

	public void setIndAuxVolumeNpt(boolean indAuxVolumeNpt) {
		this.indVolumeNpt = DominioSimNao.getInstance(indAuxVolumeNpt);
	}

	@Transient
	public boolean isIndAuxUsoNutricao() {
		return indUsoNutricao != null ? indUsoNutricao.isSim() : false;
	}

	public void setIndAuxUsoNutricao(boolean indAuxUsoNutricao) {
		this.indUsoNutricao = DominioSimNao.getInstance(indAuxUsoNutricao);
	}

	@Transient
	public boolean isIndAuxConcentracao() {
		return indConcentracao !=null ? indConcentracao.isSim() : false;
	}

	public void setIndAuxConcentracao(boolean indAuxConcentracao) {
		this.indConcentracao = DominioSimNao.getInstance(indAuxConcentracao);
	}

	@Transient
	public boolean isIndAuxUsoDialise() {
		return indUsoDialise != null ? indUsoDialise.isSim() : false;
	}

	public void setIndAuxUsoDialise(boolean indAuxUsoDialise) {
		this.indUsoDialise = DominioSimNao.getInstance(indAuxUsoDialise);
	}

	@Override
	public String toString() {
		
		return this.descricao;
	}
}