package br.gov.mec.aghu.model;

// Generated 21/09/2010 19:23:57 by Hibernate Tools 3.2.5.Beta

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.AssociationOverride;
import javax.persistence.AssociationOverrides;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;



import org.apache.commons.lang3.StringUtils;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioResponsavelColeta;
import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.dominio.DominioSituacaoColeta;
import br.gov.mec.aghu.dominio.DominioSituacaoItemPrescricao;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;

/**
 * AbsSolicitacoesHemoterapicas generated by hbm2java
 */
@Entity
@Table(name = "ABS_SOLICITACOES_HEMOTERAPICAS", schema = "AGH")

@AssociationOverrides({
	@AssociationOverride(name = "servidorValidaMovimentacao", joinColumns = {
			@JoinColumn(name = "SER_MATRICULA_DESATIVA_VALIDA"),
			@JoinColumn(name = "SER_VIN_CODIGO_DESATIVA_VALIDA") }),
	@AssociationOverride(name = "servidorMovimentado", joinColumns = {
			@JoinColumn(name = "SER_MATRICULA_E_DESATIVADA"),
			@JoinColumn(name = "SER_VIN_CODIGO_E_DESATIVADA") })
})
@AttributeOverrides( {
		@AttributeOverride(name = "dthrValida", column = @Column(name = "DTHR_INC_VALIDA")),
		@AttributeOverride(name = "dthrValidaMovimentacao", column = @Column(name = "DTHR_ALT_VALIDA")),
		@AttributeOverride(name = "dthrFim", column = @Column(name = "DTHR_DESATIVACAO"))})
public class AbsSolicitacoesHemoterapicas extends ItemPrescricaoMedica<AbsSolicitacoesHemoterapicasId>  implements Cloneable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1504733801827130179L;
	private AbsSolicitacoesHemoterapicasId id;
	private AbsSolicitacoesHemoterapicas solicitacaoHemoterapica;
	private Date dthrSolicitacao;
	private Boolean indPacTransplantado;
	private Boolean indColetarAmostra;
	private Boolean indTransfAnteriores;
	private String justificativa;
	private DominioSituacao indSituacao;
	private RapServidores servidor;
	private String observacao;
	private Boolean indUrgente;
	private DominioResponsavelColeta indResponsavelColeta;
	private DominioSituacaoColeta indSituacaoColeta;
	private Date dthrSitEmColeta;
	private Date dthrCancelamentoColeta;
	private AbsMotivosCancelaColetas motivoCancelaColeta;//mccSeq;
	private RapServidores servidorCancelaColeta;	
	private DominioSituacaoItemPrescricao indSituacaoItem;
//	private MptPrescricaoPaciente ptePrescricaoPaciente;	
	private Boolean indAltAndamento;
	private Short ordemImpressao;
	private AelItemSolicitacaoExames itemSolicitacaoExame;
	
	private Integer version;
	
	private Integer ordem;
	private List<AbsItensSolHemoterapicas> itensSolHemoterapicas = new ArrayList<AbsItensSolHemoterapicas>(0);
	private Set<AbsSolicitacoesHemoterapicas> solicitacaoHemoterapicas = new HashSet<AbsSolicitacoesHemoterapicas>(0);

	private enum SolicitacaoHemoterapicaExceptionCode implements BusinessExceptionCode {
		OBSERVACAO_HEMO_INVALIDA, JUSTIFICATIVA_HEMO_INVALIDA
	}

	
	public AbsSolicitacoesHemoterapicas() {
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "atdSeq", column = @Column(name = "ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 8, scale = 0)) })
	public AbsSolicitacoesHemoterapicasId getId() {
		return this.id;
	}

	public void setId(AbsSolicitacoesHemoterapicasId id) {
		this.id = id;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SHE_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "SHE_SEQ", referencedColumnName = "SEQ") })
	public AbsSolicitacoesHemoterapicas getSolicitacaoHemoterapica() {
		return this.solicitacaoHemoterapica;
	}

	public void setSolicitacaoHemoterapica(
			AbsSolicitacoesHemoterapicas absSolicitacoesHemoterapicas) {
		this.solicitacaoHemoterapica = absSolicitacoesHemoterapicas;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_SOLICITACAO", nullable = false, length = 7)
	public Date getDthrSolicitacao() {
		return this.dthrSolicitacao;
	}

	public void setDthrSolicitacao(Date dthrSolicitacao) {
		this.dthrSolicitacao = dthrSolicitacao;
	}

	@Column(name = "IND_PAC_TRANSPLANTADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndPacTransplantado() {
		return this.indPacTransplantado;
	}

	public void setIndPacTransplantado(Boolean indPacTransplantado) {
		this.indPacTransplantado = indPacTransplantado;
	}

	@Column(name = "IND_COLETAR_AMOSTRA", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndColetarAmostra() {
		return this.indColetarAmostra;
	}

	public void setIndColetarAmostra(Boolean indColetarAmostra) {
		this.indColetarAmostra = indColetarAmostra;
	}

	@Column(name = "IND_TRANSF_ANTERIORES", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndTransfAnteriores() {
		return this.indTransfAnteriores;
	}

	public void setIndTransfAnteriores(Boolean indTransfAnteriores) {
		this.indTransfAnteriores = indTransfAnteriores;
	}

	@Column(name = "JUSTIFICATIVA", length = 2000)
	@Length(max = 2000)
	public String getJustificativa() {
		return this.justificativa;
	}

	public void setJustificativa(String justificativa) {
		this.justificativa = justificativa;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "OBSERVACAO", length = 60)
	@Length(max = 60)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}
	
	@Column(name = "IND_URGENTE", length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndUrgente() {
		return this.indUrgente;
	}

	public void setIndUrgente(Boolean indUrgente) {
		this.indUrgente = indUrgente;
	}

	@Column(name = "IND_RESPONSAVEL_COLETA", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioResponsavelColeta getIndResponsavelColeta() {
		return this.indResponsavelColeta;
	}

	public void setIndResponsavelColeta(DominioResponsavelColeta indResponsavelColeta) {
		this.indResponsavelColeta = indResponsavelColeta;
	}

	@Column(name = "IND_SITUACAO_COLETA", length = 1)
	@Enumerated(EnumType.STRING)	
	public DominioSituacaoColeta getIndSituacaoColeta() {
		return this.indSituacaoColeta;
	}

	public void setIndSituacaoColeta(DominioSituacaoColeta indSituacaoColeta) {
		this.indSituacaoColeta = indSituacaoColeta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_SIT_EM_COLETA", length = 7)
	public Date getDthrSitEmColeta() {
		return this.dthrSitEmColeta;
	}

	public void setDthrSitEmColeta(Date dthrSitEmColeta) {
		this.dthrSitEmColeta = dthrSitEmColeta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_CANCELAMENTO_COLETA", length = 7)
	public Date getDthrCancelamentoColeta() {
		return this.dthrCancelamentoColeta;
	}

	public void setDthrCancelamentoColeta(Date dthrCancelamentoColeta) {
		this.dthrCancelamentoColeta = dthrCancelamentoColeta;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MCC_SEQ", nullable = true, insertable=true, updatable=true)
	public AbsMotivosCancelaColetas getMotivoCancelaColeta() {
		return this.motivoCancelaColeta;
	}

	public void setMotivoCancelaColeta(AbsMotivosCancelaColetas mccSeq) {
		this.motivoCancelaColeta = mccSeq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_CANCELA_COLETA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_CANCELA_COLETA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorCancelaColeta() {
		return this.servidorCancelaColeta;
	}

	public void setServidorCancelaColeta(RapServidores servidorCancelaColeta) {
		this.servidorCancelaColeta = servidorCancelaColeta;
	}

	@Column(name = "IND_SITUACAO_ITEM", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoItemPrescricao getIndSituacaoItem() {
		return this.indSituacaoItem;
	}

	public void setIndSituacaoItem(DominioSituacaoItemPrescricao indSituacaoItem) {
		this.indSituacaoItem = indSituacaoItem;
	}
	
	/*
	 * TODO:REVISAR MAPEAMENTO DE MptPrescricaoPaciente.java
	 * trecho comentado pois a entidade MptPrescricaoPaciente está com problemas de mapeamento,
	 * impactando no método obterOriginal() da AbsSolicitacoesHemoterapicasDAO.
	 * Vou verificado com o Fred e os campos PTE_ATE_SEQ E PTE_SEQ não são persistidos em ABS_SOLICITACOES_HEMOTERAPICAS
	 * comentado para resolver o defeito #50226
	 */
//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumns( {
//			@JoinColumn(name = "PTE_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
//			@JoinColumn(name = "PTE_SEQ", referencedColumnName = "SEQ") })
//	//@Cascade( {org.hibernate.annotations.CascadeType.MERGE})
//	public MptPrescricaoPaciente getPtePrescricaoPacientes() {
//		return this.ptePrescricaoPaciente;
//	}
//
//	public void setPtePrescricaoPacientes(MptPrescricaoPaciente ptePrescricaoPaciente) {
//		this.ptePrescricaoPaciente = ptePrescricaoPaciente;
//	}
	
	@Column(name = "IND_ALT_ANDAMENTO", length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndAltAndamento() {
		return this.indAltAndamento;
	}

	public void setIndAltAndamento(Boolean indAltAndamento) {
		this.indAltAndamento = indAltAndamento;
	}

	@Column(name = "ORDEM_IMPRESSAO", precision = 4, scale = 0)
	public Short getOrdemImpressao() {
		return this.ordemImpressao;
	}

	public void setOrdemImpressao(Short ordemImpressao) {
		this.ordemImpressao = ordemImpressao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "ISE_SOE_SEQ", referencedColumnName = "SOE_SEQ"),
			@JoinColumn(name = "ISE_SEQP", referencedColumnName = "SEQP") })
	//@Cascade( {org.hibernate.annotations.CascadeType.MERGE})
	public AelItemSolicitacaoExames getItemSolicitacaoExame() {
		return this.itemSolicitacaoExame;
	}

	public void setItemSolicitacaoExame(AelItemSolicitacaoExames itemSolicitacaoExame) {
		this.itemSolicitacaoExame = itemSolicitacaoExame;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitacaoHemoterapica")
	public List<AbsItensSolHemoterapicas> getItensSolHemoterapicas() {
		return this.itensSolHemoterapicas;
	}

	public void setItensSolHemoterapicas(List<AbsItensSolHemoterapicas> absItensSolHemoterapicases) {
		this.itensSolHemoterapicas = absItensSolHemoterapicases;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitacaoHemoterapica")
	public Set<AbsSolicitacoesHemoterapicas> getSolicitacaoHemoterapicas() {
		return this.solicitacaoHemoterapicas;
	}

	public void setSolicitacaoHemoterapicas(Set<AbsSolicitacoesHemoterapicas> absSolicitacoesHemoterapicases) {
		this.solicitacaoHemoterapicas = absSolicitacoesHemoterapicases;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	
	@Column(name = "ORDEM", nullable = false)
	public Integer getOrdem() {
		return this.ordem;
	}
	public void setOrdem(Integer ordem) {
		this.ordem = ordem;
	}


	/* (non-Javadoc)
	 * @see br.gov.mec.aghu.model.interfaces.PrescricaoMedicaDescricao#getDescricaoFormatada()
	 */
	@Override
	@Transient
	public String getDescricaoFormatada() {
		StringBuilder descricao = new StringBuilder(70);
		
		for (AbsItensSolHemoterapicas aishe : this.getItensSolHemoterapicas()) {
			descricao.append(aishe.getDescricaoFormatada());
		}
		
		if (this.indUrgente != null && this.indUrgente.booleanValue()) {
			descricao.append(" Urgente; ");
		}
		
		if (this.indPacTransplantado.booleanValue()) {
			descricao.append(" Paciente Transplantado; ");
		}
		
		if (this.indTransfAnteriores.booleanValue()) {
			descricao.append(" Transfusões nos últimos 3 dias; ");
		}
		
		if (this.observacao != null) {
			descricao.append(this.getObservacao()).append(';');
		}
		
		return descricao.toString().trim();
	}
	
	@PrePersist
	@PreUpdate
	public void validar() {
		if(!StringUtils.isEmpty(this.getObservacao()) && this.getObservacao().length() > 60) {
			throw new BaseRuntimeException(SolicitacaoHemoterapicaExceptionCode.OBSERVACAO_HEMO_INVALIDA);
		}
		if(!StringUtils.isEmpty(this.getJustificativa()) && this.getJustificativa().length() > 2000) {
			throw new BaseRuntimeException(SolicitacaoHemoterapicaExceptionCode.JUSTIFICATIVA_HEMO_INVALIDA);
		}
	}
	
	public enum Fields {
		ID("id"), 
		ATD_SEQ("id.atdSeq"), 
		SEQ("id.seq"), 
		SERVIDOR("servidor"), 
		DTHR_FIM("dthrFim"),
		DT_HR_CRIADO_EM("criadoEm"),
		DT_HR_SOLICITACAO("dthrSolicitacao"),
		DTHR_VALIDA("dthrValida"),
		PRESCRICAOMEDICA("prescricaoMedica"), 
		PME_ATD_SEQ("prescricaoMedica.id.atdSeq"),
		IND_PENDENTE("indPendente"),
		JUSTIFICATIVA("justificativa"),
		PME_SEQ("prescricaoMedica.id.seq"),
		CRIADO_EM("criadoEm"), 
		ALTERADO_EM("alteradoEm"),
		MOTIVO_CANC_COLETA_SEQ("motivoCancelaColeta.seq"),
		SERVIDOR_CANC_COLETA_MAT("servidorCancelaColeta.id.matricula"),
		SERVIDOR_CANC_COLETA_VIN("servidorCancelaColeta.id.vinCodigo"),
		IND_PAC_TRANSPLANTADO("indPacTransplantado"),
		IND_COLTERA_AMOSTRA("indColetarAmostra"),
		IND_TRANSF_ANTERIORES("indTransfAnteriores"),
		IND_SITUACAO("indSituacao"),
		OBSERVACAO("observacao"),
		IND_URGENTE("indUrgente"),
		IND_RESP_COLETA("indResponsavelColeta"),
		IND_SIT_COLETA("indSituacaoColeta"),
		DTHR_SIT_COLETA("dthrSitEmColeta"),
		DTHR_CANC_COLETA("dthrCancelamentoColeta"),
		IND_SIT_ITEM("indSituacaoItem"),
		IND_ALT_ANDAMENTO("indAltAndamento"),		
		PRESCRICAO_MEDICA_ID("prescricaoMedica.id"),
		SERVIDOR_VALIDACAO("servidorValidacao"),
		SOLICITACAO_HEMOTERAPICA("solicitacaoHemoterapica"),
		SOLICITACAO_HEMOTERAPICA_SEQ("solicitacaoHemoterapica.id.seq"),
		SOLICITACAO_HEMOTERAPICA_ATD_SEQ("solicitacaoHemoterapica.id.atdSeq"),
		ITENS_SOLICITACOES_HEMOTERAPICAS("itensSolHemoterapicas"), ORDEM("ordem");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@Override
	@Transient
	public ItemPrescricaoMedica getAnterior() {
		return this.getSolicitacaoHemoterapica();
	}

	@Override
	public Object clone() throws CloneNotSupportedException{
		return super.clone();
	}

	@Override
	@Transient
	public boolean possuiFilhos() {
		return solicitacaoHemoterapicas.size() > 0;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (!super.equals(obj)) {
			return false;
		}
		if (!(obj instanceof AbsSolicitacoesHemoterapicas)) {
			return false;
		}
		AbsSolicitacoesHemoterapicas other = (AbsSolicitacoesHemoterapicas) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

}