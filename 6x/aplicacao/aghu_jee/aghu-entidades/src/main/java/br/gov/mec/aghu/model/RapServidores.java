package br.gov.mec.aghu.model;

// Generated 24/09/2009 17:21:40 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacaoVinculo;
import br.gov.mec.aghu.dominio.DominioTipoRemuneracao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * RapServidores generated by hbm2java
 * 
 * Cadastro de vínculos que a pessoa física pode ter com o Hospital. Ex.:
 * contratados, residente, estagiário,....
 */
@Entity
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
@Table(name = "RAP_SERVIDORES", schema = "AGH")
public class RapServidores extends BaseEntityId<RapServidoresId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8724723951171392089L;

	/**
	 * Chave primária do base de dados.
	 */
	private RapServidoresId id;

	/**
	 * Servidor que alterou esta ocorrencia.
	 */
	private RapServidores servidor;

	/**
	 * Pessoa física referente ao servidor.
	 */
	private RapPessoasFisicas pessoaFisica;
	
	/**
	 * Vinculo do servidor
	 */
	private RapVinculos vinculo;

	/**
	 * Centro de custo de lotação.
	 */
	private FccCentroCustos centroCustoLotacao;

	/**
	 * Cargo do servidor.
	 */
	private RapOcupacaoCargo ocupacaoCargo;

	/**
	 * Data de início do vínculo do servidor.
	 */
	private Date dtInicioVinculo;

	/**
	 * Código do horário de trabalho.
	 */
	private RapHorariosTrabalho horarioTrabalho;

	/**
	 * Código do centro de custo de atuação.
	 */
	private FccCentroCustos centroCustoAtuacao;

	/**
	 * Data final do vínculo de trabalho.
	 */
	private Date dtFimVinculo;

	/**
	 * Nome do usuário no sistema informatizado
	 */
	private String usuario;

	/**
	 * Endereço eletrônico do servidor na rede no HCPA
	 */
	private String email;

	/**
	 * Grupo Funcional do servidor.
	 */
	private RapGrupoFuncional grupoFuncional;

	/**
	 * Situação do servidor quanto ao término do contrato de trabalho.
	 */
	private DominioSituacaoVinculo indSituacao;

	/**
	 * Data e hora que foi alterada esta ocorrência de servidor.
	 */
	private Date alteradoEm;

	/**
	 * Número do ramal do servidor.
	 */
	private RapRamalTelefonico ramalTelefonico;

	/**
	 * Tipo de remuneração do servidor.
	 */
	private DominioTipoRemuneracao tipoRemuneracao;

	/**
	 * Carga Horária do servidor. Se tipo remuneração = M (mensalista) então
	 * carga horária é mensal.
	 */
	private Short cargaHoraria;

	/**
	 * Horário padrão do servidor.
	 */
	private String horarioPadrao;

	/**
	 * Código único que identifica o servidor no sistema STARH
	 */
	private Integer codStarh;

	private Integer version;
	
	private String labelProfissional;
	private Integer ocaCodigo;
	
	/**
	 * Código do ccusto ao qual o servidor se reporta para fins de gestão do
	 * desempenho.
	 */
	private FccCentroCustos centroCustoDesempenho;

	private Set<RapServidores> rapServidoreses = new HashSet<RapServidores>(0);

	private Set<AipPacientes> aipPacientesesForAipPacSerFk1 = new HashSet<AipPacientes>(0);
	private Set<AipPacientes> aipPacientesesForAipPacSerFk2 = new HashSet<AipPacientes>(0);
	private Set<RapPessoasFisicas> rapPessoasFisicas = new HashSet<RapPessoasFisicas>(0);
	private Set<AipPacientesDadosCns> aipPacientesDadosCnsesForAipPdsSerFk1 = new HashSet<AipPacientesDadosCns>(0);
	private Set<AipPacientesDadosCns> aipPacientesDadosCnsesForAipPdsSerFk2 = new HashSet<AipPacientesDadosCns>(0);
	private Set<AipAlturaPacientes> aipAlturaPacienteses = new HashSet<AipAlturaPacientes>(0);
	private Set<AghProfEspecialidades> aghProfEspecialidades = new HashSet<AghProfEspecialidades>(0);

	private Set<AghEquipes> equipes = new HashSet<AghEquipes>(0);

	private Set<AghAtendimentos> atendimentos = new HashSet<AghAtendimentos>(0);

	private Set<FatCaractItemProcHosp> caracteristicasItemProcHosp = new HashSet<FatCaractItemProcHosp>(0);
	private Set<FatCaractItemProcHosp> caracteristicaItemProcHospAlterado = new HashSet<FatCaractItemProcHosp>(0);
	private Set<MpmPostoSaude> mpmPostoSaudeses = new HashSet<MpmPostoSaude>(0);
	private Set<MamAreaAtuacaoNumero> mamAreaAtuNroses = new HashSet<MamAreaAtuacaoNumero>(0);
	private Set<MamAreaAtuacaoNumeroPosto> mamAreaAtuNroPostoses = new HashSet<MamAreaAtuacaoNumeroPosto>(0);
	private Set<MamAreaAtuacao> mamAreaAtuacoeses = new HashSet<MamAreaAtuacao>(0);
	
	private Set<CseUsuario> cseUsuario = new HashSet<CseUsuario>(0);
	
	private Set<ScoCaracteristicaUsuarioCentroCusto> caracUsuariosCentroCustos = new HashSet<ScoCaracteristicaUsuarioCentroCusto>(0);
	
	private Set<MbcProfAtuaUnidCirgs> profAtuaUnidCirgs = new HashSet<MbcProfAtuaUnidCirgs>(0);

	private Integer cctCodigo;

	private Set<PtmAreaTecAvaliacao> areasTecAvaliacaoCC = new HashSet<PtmAreaTecAvaliacao>(0);
	private Set<PtmAreaTecAvaliacao> areasTecAvaliacao = new HashSet<PtmAreaTecAvaliacao>(0);
	private Set<PtmServAreaTecAvaliacao> servidoresAreaTecAvaliacao = new HashSet<PtmServAreaTecAvaliacao>(0);
	private Set<PtmTecnicoItemRecebimento> tecnicosItemRecebimento = new HashSet<PtmTecnicoItemRecebimento>(0);

	public RapServidores() {
	}

	public RapServidores(RapServidoresId id) {
		this.id = id;
	}

	public RapServidores(RapServidoresId id, RapPessoasFisicas rapPessoaFisica,
			Date dtInicioVinculo) {
		this.id = id;
		this.pessoaFisica = rapPessoaFisica;
		this.dtInicioVinculo = dtInicioVinculo;
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public RapServidores(RapServidoresId id, RapServidores rapServidores,
			RapPessoasFisicas rapPessoaFisica, FccCentroCustos cctCodigo,
			RapOcupacaoCargo ocupacaoCargo, Date dtInicioVinculo,
			RapHorariosTrabalho htrCodigo, FccCentroCustos cctCodigoAtua,
			Date dtFimVinculo, String usuario, String email,
			RapGrupoFuncional grfCodigo, DominioSituacaoVinculo indSituacao,
			Date alteradoEm, RapRamalTelefonico ramNroRamal,
			DominioTipoRemuneracao tipoRemuneracao, Short cargaHoraria,
			String horarioPadrao, Integer codStarh,
			FccCentroCustos cctCodigoDesempenho,
			Set<RapServidores> rapServidoreses,
			Set<AipPacientes> aipPacientesesForAipPacSerFk1,
			Set<AipPacientes> aipPacientesesForAipPacSerFk2,
			Set<RapPessoasFisicas> rapPessoasFisicas,
			Set<AipPacientesDadosCns> aipPacientesDadosCnsesForAipPdsSerFk1,
			Set<AipPacientesDadosCns> aipPacientesDadosCnsesForAipPdsSerFk2,
			Set<AipAlturaPacientes> aipAlturaPacienteses,
			Set<AghProfEspecialidades> aghProfEspecialidades,
			Set<AghEquipes> equipes) {
		this.id = id;
		this.servidor = rapServidores;
		this.pessoaFisica = rapPessoaFisica;
		this.centroCustoLotacao = cctCodigo;
		this.ocupacaoCargo = ocupacaoCargo;
		this.dtInicioVinculo = dtInicioVinculo;
		this.horarioTrabalho = htrCodigo;
		this.centroCustoAtuacao = cctCodigoAtua;
		this.dtFimVinculo = dtFimVinculo;
		this.usuario = usuario;
		this.email = email;
		this.grupoFuncional = grfCodigo;
		this.indSituacao = indSituacao;
		this.alteradoEm = alteradoEm;
		this.ramalTelefonico = ramNroRamal;
		this.tipoRemuneracao = tipoRemuneracao;
		this.cargaHoraria = cargaHoraria;
		this.horarioPadrao = horarioPadrao;
		this.codStarh = codStarh;
		this.centroCustoDesempenho = cctCodigoDesempenho;
		this.rapServidoreses = rapServidoreses;

		this.aipPacientesesForAipPacSerFk1 = aipPacientesesForAipPacSerFk1;
		this.aipPacientesesForAipPacSerFk2 = aipPacientesesForAipPacSerFk2;
		this.rapPessoasFisicas = rapPessoasFisicas;
		this.aipPacientesDadosCnsesForAipPdsSerFk1 = aipPacientesDadosCnsesForAipPdsSerFk1;
		this.aipPacientesDadosCnsesForAipPdsSerFk2 = aipPacientesDadosCnsesForAipPdsSerFk2;
		this.aipAlturaPacienteses = aipAlturaPacienteses;
		this.aghProfEspecialidades = aghProfEspecialidades;
		this.equipes = equipes;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "matricula", column = @Column(name = "MATRICULA", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "vinCodigo", column = @Column(name = "VIN_CODIGO", nullable = false, precision = 3, scale = 0)) })
	public RapServidoresId getId() {
		return this.id;
	}

	public void setId(RapServidoresId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores rapServidores) {
		this.servidor = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_CODIGO", nullable = false)
	public RapPessoasFisicas getPessoaFisica() {
		return pessoaFisica;
	}

	public void setPessoaFisica(RapPessoasFisicas rapPessoaFisica) {
		this.pessoaFisica = rapPessoaFisica;
	}

	/**
	 * @return the centroCustoLotacao
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CCT_CODIGO")
	public FccCentroCustos getCentroCustoLotacao() {
		return centroCustoLotacao;
	}

	/**
	 * @param centroCustoLotacao
	 *            the centroCustoLotacao to set
	 */
	public void setCentroCustoLotacao(FccCentroCustos centroCustoLotacao) {
		this.centroCustoLotacao = centroCustoLotacao;
	}

	/**
	 * @return the ocupacaoCargo
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "OCA_CAR_CODIGO", referencedColumnName = "CAR_CODIGO"),
			@JoinColumn(name = "OCA_CODIGO", referencedColumnName = "CODIGO") })
	public RapOcupacaoCargo getOcupacaoCargo() {
		return ocupacaoCargo;
	}

	/**
	 * @param ocupacaoCargo
	 *            the ocupacaoCargo to set
	 */
	public void setOcupacaoCargo(RapOcupacaoCargo ocupacaoCargo) {
		this.ocupacaoCargo = ocupacaoCargo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO_VINCULO", nullable = false)
	public Date getDtInicioVinculo() {
		return this.dtInicioVinculo;
	}

	public void setDtInicioVinculo(Date dtInicioVinculo) {
		this.dtInicioVinculo = dtInicioVinculo;
	}

	/**
	 * @return the horarioTrabalho
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "HTR_CODIGO")
	public RapHorariosTrabalho getHorarioTrabalho() {
		return horarioTrabalho;
	}

	/**
	 * @param horarioTrabalho
	 *            the horarioTrabalho to set
	 */
	public void setHorarioTrabalho(RapHorariosTrabalho horarioTrabalho) {
		this.horarioTrabalho = horarioTrabalho;
	}

	/**
	 * @return the centroCustoAtuacao
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CCT_CODIGO_ATUA")
	public FccCentroCustos getCentroCustoAtuacao() {
		return centroCustoAtuacao;
	}

	/**
	 * @param centroCustoAtuacao
	 *            the centroCustoAtuacao to set
	 */
	public void setCentroCustoAtuacao(FccCentroCustos centroCustoAtuacao) {
		this.centroCustoAtuacao = centroCustoAtuacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM_VINCULO")
	public Date getDtFimVinculo() { 
		return this.dtFimVinculo;
	}

	public void setDtFimVinculo(Date dtFimVinculo) {
		this.dtFimVinculo = dtFimVinculo;
	}

	@Column(name = "USUARIO", length = 30)
	@Length(max = 30)
	public String getUsuario() {
		return this.usuario;
	}

	public void setUsuario(String usuario) {
		this.usuario = usuario;
	}

	@Column(name = "EMAIL", length = 45)
	@Length(max = 45)
	@Email
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	/**
	 * @return the grupoFuncional
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GRF_CODIGO")
	public RapGrupoFuncional getGrupoFuncional() {
		return grupoFuncional;
	}

	/**
	 * @param grupoFuncional
	 *            the grupoFuncional to set
	 */
	public void setGrupoFuncional(RapGrupoFuncional grupoFuncional) {
		this.grupoFuncional = grupoFuncional;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoVinculo getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacaoVinculo indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM")
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	/**
	 * @return the ramalTelefonico
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RAM_NRO_RAMAL")
	public RapRamalTelefonico getRamalTelefonico() {
		return ramalTelefonico;
	}

	/**
	 * @param ramalTelefonico
	 *            the ramalTelefonico to set
	 */
	public void setRamalTelefonico(RapRamalTelefonico ramalTelefonico) {
		this.ramalTelefonico = ramalTelefonico;
	}

	@Column(name = "TIPO_REMUNERACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioTipoRemuneracao getTipoRemuneracao() {
		return this.tipoRemuneracao;
	}

	public void setTipoRemuneracao(DominioTipoRemuneracao tipoRemuneracao) {
		this.tipoRemuneracao = tipoRemuneracao;
	}

	@Column(name = "CARGA_HORARIA", precision = 3, scale = 0)
	public Short getCargaHoraria() {
		return this.cargaHoraria;
	}

	public void setCargaHoraria(Short cargaHoraria) {
		this.cargaHoraria = cargaHoraria;
	}

	@Column(name = "HORARIO_PADRAO", length = 50)
	@Length(max = 50)
	public String getHorarioPadrao() {
		return this.horarioPadrao;
	}

	public void setHorarioPadrao(String horarioPadrao) {
		this.horarioPadrao = horarioPadrao;
	}

	@Column(name = "COD_STARH", unique = true, precision = 8, scale = 0)
	public Integer getCodStarh() {
		return this.codStarh;
	}

	public void setCodStarh(Integer codStarh) {
		this.codStarh = codStarh;
	}

	/**
	 * @return the centroCustoDesempenho
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CCT_CODIGO_DESEMPENHO")
	public FccCentroCustos getCentroCustoDesempenho() {
		return centroCustoDesempenho;
	}

	/**
	 * @param centroCustoDesempenho
	 *            the centroCustoDesempenho to set
	 */
	public void setCentroCustoDesempenho(FccCentroCustos centroCustoDesempenho) {
		this.centroCustoDesempenho = centroCustoDesempenho;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidor")
	public Set<RapServidores> getRapServidoreses() {
		return this.rapServidoreses;
	}

	public void setRapServidoreses(Set<RapServidores> rapServidoreses) {
		this.rapServidoreses = rapServidoreses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapServidoresCadastro")
	public Set<AipPacientes> getAipPacientesesForAipPacSerFk1() {
		return this.aipPacientesesForAipPacSerFk1;
	}

	public void setAipPacientesesForAipPacSerFk1(
			Set<AipPacientes> aipPacientesesForAipPacSerFk1) {
		this.aipPacientesesForAipPacSerFk1 = aipPacientesesForAipPacSerFk1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapServidoresRecadastro")
	public Set<AipPacientes> getAipPacientesesForAipPacSerFk2() {
		return this.aipPacientesesForAipPacSerFk2;
	}

	public void setAipPacientesesForAipPacSerFk2(
			Set<AipPacientes> aipPacientesesForAipPacSerFk2) {
		this.aipPacientesesForAipPacSerFk2 = aipPacientesesForAipPacSerFk2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapServidores")
	public Set<RapPessoasFisicas> getRapPessoasFisicas() {
		return rapPessoasFisicas;
	}

	public void setRapPessoasFisicas(Set<RapPessoasFisicas> rapPessoasFisicas) {
		this.rapPessoasFisicas = rapPessoasFisicas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapServidor")
	public Set<AipPacientesDadosCns> getAipPacientesDadosCnsesForAipPdsSerFk1() {
		return this.aipPacientesDadosCnsesForAipPdsSerFk1;
	}

	public void setAipPacientesDadosCnsesForAipPdsSerFk1(
			Set<AipPacientesDadosCns> aipPacientesDadosCnsesForAipPdsSerFk1) {
		this.aipPacientesDadosCnsesForAipPdsSerFk1 = aipPacientesDadosCnsesForAipPdsSerFk1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapServidorAlterado")
	public Set<AipPacientesDadosCns> getAipPacientesDadosCnsesForAipPdsSerFk2() {
		return this.aipPacientesDadosCnsesForAipPdsSerFk2;
	}

	public void setAipPacientesDadosCnsesForAipPdsSerFk2(
			Set<AipPacientesDadosCns> aipPacientesDadosCnsesForAipPdsSerFk2) {
		this.aipPacientesDadosCnsesForAipPdsSerFk2 = aipPacientesDadosCnsesForAipPdsSerFk2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapServidor")
	public Set<AipAlturaPacientes> getAipAlturaPacienteses() {
		return this.aipAlturaPacienteses;
	}

	public void setAipAlturaPacienteses(
			Set<AipAlturaPacientes> aipAlturaPacienteses) {
		this.aipAlturaPacienteses = aipAlturaPacienteses;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumns( { @JoinColumn(name = "SER_MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO") })
	public Set<AghProfEspecialidades> getAghProfEspecialidades() {
		return this.aghProfEspecialidades;
	}

	public void setAghProfEspecialidades(
			Set<AghProfEspecialidades> aghProfEspecialidades) {
		this.aghProfEspecialidades = aghProfEspecialidades;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "AGH_PROFISSIONAIS_EQUIPE", schema = "AGH", joinColumns = {
			@JoinColumn(name = "SER_MATRICULA", nullable = false, updatable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "EQP_SEQ", nullable = false, updatable = false) })
	// @Cascade({ org.hibernate.annotations.CascadeType.DELETE_ORPHAN,
	// org.hibernate.annotations.CascadeType.PERSIST })
	public Set<AghEquipes> getEquipes() {
		return equipes;
	}

	public void setEquipes(Set<AghEquipes> equipes) {
		this.equipes = equipes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidor")
	// @JoinColumns( {	@JoinColumn(name = "SER_MATRICULA"), @JoinColumn(name = "SER_VIN_CODIGO") })
	public Set<AghAtendimentos> getAtendimentos() {
		return atendimentos;
	}

	public void setAtendimentos(Set<AghAtendimentos> atendimentos) {
		this.atendimentos = atendimentos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VIN_CODIGO", nullable = false, insertable = false, updatable = false)
	public RapVinculos getVinculo() {
		return this.vinculo;
	}

	public void setVinculo(RapVinculos rapVinculos) {
		this.vinculo = rapVinculos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidorAlterado")
	public Set<FatCaractItemProcHosp> getCaracteristicaItemProcHospAlterado() {
		return this.caracteristicaItemProcHospAlterado;
	}

	public void setCaracteristicaItemProcHospAlterado(
			Set<FatCaractItemProcHosp> caracteristicaItemProcHospAlterado) {
		this.caracteristicaItemProcHospAlterado = caracteristicaItemProcHospAlterado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidor")
	public Set<FatCaractItemProcHosp> getCaracteristicasItemProcHosp() {
		return this.caracteristicasItemProcHosp;
	}

	public void setCaracteristicasItemProcHosp(
			Set<FatCaractItemProcHosp> caracteristicasItemProcHosp) {
		this.caracteristicasItemProcHosp = caracteristicasItemProcHosp;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidor")
	public Set<MpmPostoSaude> getMpmPostoSaudeses() {
		return this.mpmPostoSaudeses;
	}

	public void setMpmPostoSaudeses(Set<MpmPostoSaude> mpmPostoSaudeses) {
		this.mpmPostoSaudeses = mpmPostoSaudeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidor")
	public Set<MamAreaAtuacaoNumero> getMamAreaAtuNroses() {
		return this.mamAreaAtuNroses;
	}

	public void setMamAreaAtuNroses(Set<MamAreaAtuacaoNumero> mamAreaAtuNroses) {
		this.mamAreaAtuNroses = mamAreaAtuNroses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidor")
	public Set<MamAreaAtuacaoNumeroPosto> getMamAreaAtuNroPostoses() {
		return this.mamAreaAtuNroPostoses;
	}

	public void setMamAreaAtuNroPostoses(
			Set<MamAreaAtuacaoNumeroPosto> mamAreaAtuNroPostoses) {
		this.mamAreaAtuNroPostoses = mamAreaAtuNroPostoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidor")
	public Set<MamAreaAtuacao> getMamAreaAtuacoeses() {
		return this.mamAreaAtuacoeses;
	}

	public void setMamAreaAtuacoeses(Set<MamAreaAtuacao> mamAreaAtuacoeses) {
		this.mamAreaAtuacoeses = mamAreaAtuacoeses;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidor")
	public Set<ScoCaracteristicaUsuarioCentroCusto> getCaracUsuariosCentroCustos() {
		return caracUsuariosCentroCustos;
	}

	public void setCaracUsuariosCentroCustos(
			Set<ScoCaracteristicaUsuarioCentroCusto> caracUsuariosCentroCustos) {
		this.caracUsuariosCentroCustos = caracUsuariosCentroCustos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapServidores")
	public Set<MbcProfAtuaUnidCirgs> getProfAtuaUnidCirgs() {
		return profAtuaUnidCirgs;
	}

	public void setProfAtuaUnidCirgs(Set<MbcProfAtuaUnidCirgs> profAtuaUnidCirgs) {
		this.profAtuaUnidCirgs = profAtuaUnidCirgs;
	}
	
	@Column(name = "CCT_CODIGO", insertable=false, updatable=false)
	public Integer getCctCodigo() {
		return cctCodigo;
	}

	public void setCctCodigo(Integer cctCodigo) {
		this.cctCodigo = cctCodigo;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidorCC")
	public Set<PtmAreaTecAvaliacao> getAreasTecAvaliacaoCC() {
		return areasTecAvaliacaoCC;
	}

	public void setAreasTecAvaliacaoCC(Set<PtmAreaTecAvaliacao> areasTecAvaliacaoCC) {
		this.areasTecAvaliacaoCC = areasTecAvaliacaoCC;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidor")
	public Set<PtmAreaTecAvaliacao> getAreasTecAvaliacao() {
		return areasTecAvaliacao;
	}

	public void setAreasTecAvaliacao(Set<PtmAreaTecAvaliacao> areasTecAvaliacao) {
		this.areasTecAvaliacao = areasTecAvaliacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidor")
	public Set<PtmServAreaTecAvaliacao> getServidoresAreaTecAvaliacao() {
		return servidoresAreaTecAvaliacao;
	}

	public void setServidoresAreaTecAvaliacao(Set<PtmServAreaTecAvaliacao> servidoresAreaTecAvaliacao) {
		this.servidoresAreaTecAvaliacao = servidoresAreaTecAvaliacao;
	}
	@Column(name = "OCA_CODIGO", insertable = false, updatable = false)
	public Integer getOcaCodigo() {
		return ocaCodigo;
	}
	
	public void setOcaCodigo(Integer ocaCodigo) {
		this.ocaCodigo = ocaCodigo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servidorTecnico")
	public Set<PtmTecnicoItemRecebimento> getTecnicosItemRecebimento() {
		return tecnicosItemRecebimento;
	}

	public void setTecnicosItemRecebimento(Set<PtmTecnicoItemRecebimento> tecnicosItemRecebimento) {
		this.tecnicosItemRecebimento = tecnicosItemRecebimento;
	}

	public enum Fields {
		MATRICULA("id.matricula"), CODIGO_VINCULO("id.vinCodigo"),VIN_CODIGO("id.vinCodigo"), VINCULO(
				"vinculo"), PESSOA_FISICA("pessoaFisica"), PES_CODIGO("pessoaFisica.codigo"),CENTRO_CUSTO_LOTACAO(
				"centroCustoLotacao"), EQUIPES("equipes"), CENTRO_CUSTO_ATUACAO(
				"centroCustoAtuacao"), DATA_INICIO_VINCULO("dtInicioVinculo"), DATA_FIM_VINCULO(
				"dtFimVinculo"), CODIGO_CENTRO_CUSTO_ATUACAO(
				"centroCustoAtuacao.codigo"), CODIGO_CENTRO_CUSTO_LOTACAO(
				"centroCustoLotacao.codigo"), SERVIDOR("servidor"), IND_SITUACAO(
				"indSituacao"), ESPECIALIDADE("aghProfEspecialidades"), NOME_PESSOA_FISICA(
				"pessoaFisica.nome"), RAMAL_TELEFONICO("ramalTelefonico"), CODIGO_PESSOA_FISICA(
				"pessoaFisica.codigo"), USUARIO("usuario"), TIPO_REMINERACAO(
				"tipoRemuneracao"), OCUPACAO_CARGO("ocupacaoCargo"), CODIGO_OCUPACAO("ocupacaoCargo.id.codigo"), CODIGO_CARGO(
				"ocupacaoCargo.id.cargoCodigo"), ID("id"),
				ATENDIMENTOS("atendimentos"), NRO_RAMAL("ramalTelefonico.numeroRamal"),
				CODSTARH("codStarh"), PROF_ATUA_UNID_CIRGS("profAtuaUnidCirgs"),
				GRUPO_FUNCIONAL("grupoFuncional"), CENTRO_CUSTO_DESEMPENHO("centroCustoDesempenho"),
				OCA_CODIGO("ocaCodigo"), DESCRICAO_VINCULO("vinculo.descricao"),
				NOME_CC_LOTACAO("centroCustoLotacao.nome"), NOME_CC_ATUACAO("centroCustoLotacao.nome"),
				NOME_VINCULO("vinculo.descricao"), NOME_CARGO("ocupacaoCargo.descricao"), CCT_CODIGO("cctCodigo"),
				CSE_USUARIO("cseUsuario"), SERVIDORES_AREA_TEC_AVALIACAO("servidoresAreaTecAvaliacao"),
				AREAS_TECNICAS_AVALIACAO_CC("areasTecAvaliacaoCC"), AREAS_TECNICAS_AVALIACAO("areasTecAvaliacao"),
				TECNICOS_ITEM_RECEBIMENTO("tecnicosItemRecebimento"), SER_MATRICULA_ALTERACAO("id.matricula"), SER_VIN_CODIGO_ALTERACAO("id.vinCodigo");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	public String toString() {
		return new ToStringBuilder(this).append("RapServidorId", getId())
				.toString();
	}
	
	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof RapServidores)) {
			return false;
		}
		RapServidores other = (RapServidores) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}

	@Transient 
	public String getSituacaoServidorFormat(){
		if(this.getIndSituacao() != null && (this.getIndSituacao().equals(DominioSituacaoVinculo.A) || this.getIndSituacao().equals(DominioSituacaoVinculo.P))){
			if(this.getDtFimVinculo() != null && this.getDtFimVinculo().before(new Date())){
				return DominioSituacaoVinculo.I.getDescricao();
			}else{
				return this.getIndSituacao().equals(DominioSituacaoVinculo.A) ? DominioSituacaoVinculo.A.getDescricao(): DominioSituacaoVinculo.P.getDescricao();
			}
		}
		return DominioSituacaoVinculo.I.getDescricao();
	}
	@Transient
	public String getMatriculaVinculo() {
		return this.id.getVinCodigo() + "  " + this.id.getMatricula();
	}
	
	@Transient
	public String getVinculoMatricula() {
		return this.id.getMatricula() + "  " + this.id.getVinCodigo();
	}
	
	@Transient
	public String getMatriculaVinculoNome() {
		return this.id.getVinCodigo() + "  " + this.id.getMatricula() + " - " + this.getPessoaFisica().getNome();
	}
	
	@Transient
	public String getCodigoVinculoNomeServidor() {
		return this.id.getVinCodigo() + " - " + this.getPessoaFisica().getNome();
	}
	
	@Transient
	public String getMatriculaNomeServidor() {
		return this.id.getMatricula() + " - " + this.getPessoaFisica().getNome();
	}

	@Transient
	public String getLabelProfissional() {
		if(id !=  null){
			labelProfissional = id.getMatricula() + "-" + pessoaFisica.getNome(); 
		}
		return labelProfissional;
	}

	@Transient
	public void setLabelProfissional(String labelProfissional) {
		this.labelProfissional = labelProfissional;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapServidores")
	public Set<CseUsuario> getCseUsuario() {
		return cseUsuario;
	}

	public void setCseUsuario(Set<CseUsuario> cseUsuario) {
		this.cseUsuario = cseUsuario;
	}
}