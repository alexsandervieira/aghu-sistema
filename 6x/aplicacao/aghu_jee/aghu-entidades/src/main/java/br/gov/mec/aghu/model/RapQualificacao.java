package br.gov.mec.aghu.model;

// Generated 19/03/2010 19:25:58 by Hibernate Tools 3.2.5.Beta

import java.util.Calendar;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;
import br.gov.mec.aghu.dominio.DominioSituacaoQualificacao;

/**
 * RapQualificacoes generated by hbm2java
 */
@Entity
@Table(name = "RAP_QUALIFICACOES", schema = "AGH")

public class RapQualificacao extends BaseEntityId<RapQualificacoesId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4487716447002348510L;

	private RapQualificacoesId id;

	private RapTipoQualificacao tipoQualificacao;

	private Date dtInicio;

	private RapInstituicaoQualificadora instituicaoQualificadora;

	private RapTipoAtuacao tipoAtuacao;

	private Date dtFim;

	private DominioSituacaoQualificacao situacao;

	private String semestre;

	private Date dtAtualizacao;

	private String nroRegConselho;

	private RapServidores servidor;

	private Boolean intermedioHcpa;

	private Short cargaHoraria;

	private Boolean indCarga;

	private Integer version;

	private RapPessoasFisicas pessoaFisica;

	public RapQualificacao() {
	}

	public RapQualificacao(RapQualificacoesId id) {
		this.id = id;
	}

	public RapQualificacao(RapQualificacoesId id,
			RapTipoQualificacao rapTiposQualificacao,
			RapInstituicaoQualificadora iqlCodigo, RapTipoAtuacao tatCodigo,
			DominioSituacaoQualificacao situacao, Date dtAtualizacao) {
		this.id = id;
		this.tipoQualificacao = rapTiposQualificacao;
		this.instituicaoQualificadora = iqlCodigo;
		this.tipoAtuacao = tatCodigo;
		this.situacao = situacao;
		this.dtAtualizacao = dtAtualizacao;
	}

	public RapQualificacao(RapQualificacoesId id,
			RapTipoQualificacao rapTiposQualificacao, Date dtInicio,
			RapInstituicaoQualificadora iqlCodigo, RapTipoAtuacao tatCodigo,
			Date dtFim, DominioSituacaoQualificacao situacao, String semestre,
			Date dtAtualizacao, String nroRegConselho, Boolean intermedioHcpa,
			Short cargaHoraria, Boolean indCarga) {
		this.id = id;
		this.tipoQualificacao = rapTiposQualificacao;
		this.dtInicio = dtInicio;
		this.instituicaoQualificadora = iqlCodigo;
		this.tipoAtuacao = tatCodigo;
		this.dtFim = dtFim;
		this.situacao = situacao;
		this.semestre = semestre;
		this.dtAtualizacao = dtAtualizacao;
		this.nroRegConselho = nroRegConselho;

		this.intermedioHcpa = intermedioHcpa;
		this.cargaHoraria = cargaHoraria;
		this.indCarga = indCarga;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "pesCodigo", column = @Column(name = "PES_CODIGO", nullable = false, precision = 9, scale = 0)),
			@AttributeOverride(name = "sequencia", column = @Column(name = "SEQUENCIA", nullable = false, precision = 3, scale = 0)) })
	public RapQualificacoesId getId() {
		return this.id;
	}

	public void setId(RapQualificacoesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TQL_CODIGO", nullable = false)
	public RapTipoQualificacao getTipoQualificacao() {
		return this.tipoQualificacao;
	}

	public void setTipoQualificacao(RapTipoQualificacao rapTiposQualificacao) {
		this.tipoQualificacao = rapTiposQualificacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO", length = 7)
	public Date getDtInicio() {
		return this.dtInicio;
	}

	public void setDtInicio(Date dtInicio) {
		this.dtInicio = dtInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM", length = 7)
	public Date getDtFim() {
		return this.dtFim;
	}

	public void setDtFim(Date dtFim) {
		this.dtFim = dtFim;
	}

	@Column(name = "SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoQualificacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacaoQualificacao situacao) {
		this.situacao = situacao;
	}

	@Column(name = "SEMESTRE", length = 2)
	@Length(max = 2)
	public String getSemestre() {
		return this.semestre;
	}

	public void setSemestre(String semestre) {
		this.semestre = semestre;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_ATUALIZACAO", nullable = false, length = 7)
	public Date getDtAtualizacao() {
		return this.dtAtualizacao;
	}

	public void setDtAtualizacao(Date dtAtualizacao) {
		this.dtAtualizacao = dtAtualizacao;
	}

	@Column(name = "NRO_REG_CONSELHO", length = 9)
	@Length(max = 9)
	public String getNroRegConselho() {
		return this.nroRegConselho;
	}

	public void setNroRegConselho(String nroRegConselho) {
		this.nroRegConselho = nroRegConselho;
	}

	@Column(name = "INTERMEDIO_HCPA", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIntermedioHcpa() {
		return this.intermedioHcpa;
	}

	public void setIntermedioHcpa(Boolean intermedioHcpa) {
		this.intermedioHcpa = intermedioHcpa;
	}

	@Column(name = "CARGA_HORARIA", precision = 4, scale = 0)
	public Short getCargaHoraria() {
		return this.cargaHoraria;
	}

	public void setCargaHoraria(Short cargaHoraria) {
		this.cargaHoraria = cargaHoraria;
	}

	@Column(name = "IND_CARGA", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndCarga() {
		return this.indCarga;
	}

	public void setIndCarga(Boolean indCarga) {
		this.indCarga = indCarga;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IQL_CODIGO", nullable = false)
	public RapInstituicaoQualificadora getInstituicaoQualificadora() {
		return this.instituicaoQualificadora;
	}

	public void setInstituicaoQualificadora(
			RapInstituicaoQualificadora intituicaoQualificadora) {
		this.instituicaoQualificadora = intituicaoQualificadora;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TAT_CODIGO", nullable = false)
	public RapTipoAtuacao getTipoAtuacao() {
		return this.tipoAtuacao;
	}

	public void setTipoAtuacao(RapTipoAtuacao tipoAtuacao) {
		this.tipoAtuacao = tipoAtuacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_CODIGO", referencedColumnName = "CODIGO", insertable = false, updatable = false)
	public RapPessoasFisicas getPessoaFisica() {
		return pessoaFisica;
	}

	public void setPessoaFisica(RapPessoasFisicas pessoaFisica) {
		this.pessoaFisica = pessoaFisica;
	}

	@Transient
	public Integer getAnoInicio() {
		if (this.dtInicio == null) {
			return null;
		}

		Calendar calendar = Calendar.getInstance();
		calendar.setTime(this.dtInicio);

		return calendar.get(Calendar.YEAR);

	}

	public void setAnoInicio(Integer anoInicio) {
		if (anoInicio != null) {
			Calendar calendar = Calendar.getInstance();
			calendar.set(anoInicio, 0, 1, 0, 0, 0);
			this.setDtInicio(calendar.getTime());
			return;
		}
		this.setDtInicio(null);
	}

	@Transient
	public Integer getAnoFim() {
		if (this.dtFim == null) {
			return null;
		}

		Calendar calendar = Calendar.getInstance();
		calendar.setTime(this.dtFim);

		return calendar.get(Calendar.YEAR);
	}

	public void setAnoFim(Integer anoFim) {
		if (anoFim != null) {
			Calendar calendar = Calendar.getInstance();
			calendar.set(anoFim, 0, 1, 0, 0, 0);
			this.setDtFim(calendar.getTime());
			return;
		}
		this.setDtFim(null);
	}
	
	public void asJournal(RapQualificacaoJn jn) {
		jn.setPesCodigo(this.getId().getPessoaFisica().getCodigo());
		jn.setSequencia(this.getId().getSequencia());
		jn.setDtInicio(this.getDtInicio());
		jn.setIqlCodigo(this.getInstituicaoQualificadora().getCodigo());
		jn.setTqlCodigo(this.getTipoQualificacao().getCodigo());
		jn.setTatCodigo(this.getTipoAtuacao().getCodigo());
		jn.setDtFim(this.getDtFim());
		jn.setSituacao(this.getSituacao());
		jn.setSemestre(this.getSemestre());
		jn.setDtAtualizacao(this.getDtAtualizacao());
		jn.setNroRegConselho(this.getNroRegConselho());
	}

	@Override
	public int hashCode() {
		return new HashCodeBuilder().append(this.id).toHashCode();
	}

	@Override
	public boolean equals(Object other) {
		if (!(other instanceof RapQualificacao)) {
			return false;
		}
		RapQualificacao castOther = (RapQualificacao) other;
		return new EqualsBuilder().append(this.id, castOther.getId())
				.isEquals();
	}

	public enum Fields {
		NRO_REGISTRO_CONSELHO("nroRegConselho"), //
		TIPO_QUALIFICACAO("tipoQualificacao"), //
		TIPO_QUALIFICACAO_CODIGO("tipoQualificacao.codigo"), //
		TIPO_QUALIFICACAO_TIPO("tipoQualificacao.tipoQualificacao"), //
		PESSOA("id.pessoaFisica"), //
		PESSOA_CODIGO("id.pessoaFisica.codigo"), //
		CODIGO("id.sequencia"), //
		INSTITUICAO_QUALIFICADORA("instituicaoQualificadora"), //
		SERVIDOR_VINCULO("servidor.id.vinCodigo"), //
		SERVIDOR_MATRICULA("servidor.id.matricula"), //
		CONSELHO_PROFISSIONAL("tipoQualificacao.conselhoProfissional"), //
		CCC_NIVEL_CURSO("tipoQualificacao.cccNivelCurso"), //
		CSC_NIVEL_CURSO("tipoQualificacao.cscNivelCurso"), //
		SEQUENCIA("id.sequencia"), //
		TIPO_ATUACAO("tipoAtuacao"), //
		TIPO_ATUACAO_DISCENTE("tipoAtuacao.indDiscente"), //
		DATA_FIM("dtFim"), //
		DATA_INICIO("dtInicio"), //
		PESSOA_FISICA_ALIAS("pessoaFisica"), //
		PESSOA_CODIGO_ALIAS("pessoaFisica.codigo"), //
		PESSOA_NOME_ALIAS("pessoaFisica.nome"), //
		TIPO_QUALIFICACAO_ALIAS("tipoQualificacao"), //
		SERVIDOR("servidor"),
		SITUACAO("situacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

}
