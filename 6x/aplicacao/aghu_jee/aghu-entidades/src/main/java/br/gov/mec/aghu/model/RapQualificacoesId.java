package br.gov.mec.aghu.model;

// Generated 19/03/2010 19:25:58 by Hibernate Tools 3.2.5.Beta

import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;

import br.gov.mec.aghu.core.persistence.EntityCompositeId;

/**
 * RapQualificacoesId generated by hbm2java
 */
@Embeddable

public class RapQualificacoesId implements EntityCompositeId {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1257184172440713785L;
	private RapPessoasFisicas pessoaFisica;
	private Short sequencia;

	public RapQualificacoesId() {
	}

	public RapQualificacoesId(RapPessoasFisicas pessoaFisica, Short sequencia) {
		this.pessoaFisica = pessoaFisica;
		this.sequencia = sequencia;
	}

	/**
	 * Construtor apenas com a parte da chave composta que deve ser informada na
	 * inclusão.<br>
	 * A sequencia será gerada no processo de inclusão.
	 * 
	 * @param pessoaFisica
	 */
	public RapQualificacoesId(RapPessoasFisicas pessoaFisica) {
		this.pessoaFisica = pessoaFisica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_CODIGO", referencedColumnName = "CODIGO")
	public RapPessoasFisicas getPessoaFisica() {
		return this.pessoaFisica;
	}

	public void setPessoaFisica(RapPessoasFisicas pessoaFisica) {
		this.pessoaFisica = pessoaFisica;
	}

	@Column(name = "SEQUENCIA", nullable = false, precision = 3, scale = 0)
	public Short getSequencia() {
		return this.sequencia;
	}

	public void setSequencia(Short sequencia) {
		this.sequencia = sequencia;
	}

	@Override
	public int hashCode() {
		return new HashCodeBuilder()
				.append(this.sequencia).toHashCode();
	}

	@Override
	public boolean equals(Object other) {
		if (!(other instanceof RapQualificacoesId)) {
			return false;
		}
		RapQualificacoesId castOther = (RapQualificacoesId) other;
		return new EqualsBuilder()
				.append(this.pessoaFisica, castOther.getPessoaFisica())
				.append(this.sequencia, castOther.getSequencia()).isEquals();
	}

}
