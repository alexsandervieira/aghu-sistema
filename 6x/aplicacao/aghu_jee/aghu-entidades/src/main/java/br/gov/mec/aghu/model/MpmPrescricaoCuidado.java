package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioIndPendenteItemPrescricao;

/**
 * MpmPrescricaoCuidado generated by hbm2java
 */

@Entity
@Table(name = "MPM_PRESCRICAO_CUIDADOS", schema = "AGH")
public class MpmPrescricaoCuidado extends ItemPrescricaoMedica<MpmPrescricaoCuidadoId> implements Cloneable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -165219939275137025L;
	private MpmPrescricaoCuidadoId id;
	private MpmPrescricaoCuidado mpmPrescricaoCuidados;
	private MpmTipoFrequenciaAprazamento mpmTipoFreqAprazamentos;
	private MpmCuidadoUsual mpmCuidadoUsuais;
	private RapServidores servidor;
	private Boolean indItemRecomendadoAlta;
	private Date dthrInicio;
	private Integer frequencia;
	private String descricao;
	private Boolean indItemRecTransferencia;
	private Set<MpmPrescricaoCuidado> mpmPrescricaoCuidadoses = new HashSet<MpmPrescricaoCuidado>(
			0);
	private Integer version;
	private Integer pcuAtdSeqPrcrAnt;
	private Long pcuSeqPrcrAnt;
	private Integer ordem;
	public MpmPrescricaoCuidado() {
	}

	public MpmPrescricaoCuidado(MpmPrescricaoCuidadoId id,
			MpmTipoFrequenciaAprazamento mpmTipoFreqAprazamentos,
			MpmCuidadoUsual mpmCuidadoUsual, RapServidores servidor,
			DominioIndPendenteItemPrescricao indPendente,
			Boolean indItemRecomendadoAlta, Date dthrInicio, Date criadoEm,
			Boolean indItemRecTransferencia) {
		this.id = id;
		this.mpmTipoFreqAprazamentos = mpmTipoFreqAprazamentos;
		this.mpmCuidadoUsuais = mpmCuidadoUsual;
		this.servidor = servidor;
		this.indPendente = indPendente;
		this.indItemRecomendadoAlta = indItemRecomendadoAlta;
		this.dthrInicio = dthrInicio;
		this.criadoEm = criadoEm;
		this.indItemRecTransferencia = indItemRecTransferencia;
	}

	public MpmPrescricaoCuidado(MpmPrescricaoCuidadoId id,
			MpmPrescricaoMedica mpmPrescricaoMedicas,
			MpmPrescricaoCuidado mpmPrescricaoCuidados,
			MpmTipoFrequenciaAprazamento mpmTipoFreqAprazamentos,
			MpmCuidadoUsual mpmCuidadoUsual, RapServidores servidor,
			RapServidores servidorMovimentado,
			DominioIndPendenteItemPrescricao indPendente,
			Boolean indItemRecomendadoAlta, Date dthrInicio, Date criadoEm,
			Date dthrFim, Integer frequencia, String descricao,
			Date alteradoEm, RapServidores servidorValidacao,
			RapServidores servidorValidaMovimerntacao,
			Boolean indItemRecTransferencia,
			Set<MpmPrescricaoCuidado> mpmPrescricaoCuidadoses) {
		super();
		this.id = id;
		this.prescricaoMedica = mpmPrescricaoMedicas;
		this.mpmPrescricaoCuidados = mpmPrescricaoCuidados;
		this.mpmTipoFreqAprazamentos = mpmTipoFreqAprazamentos;
		this.mpmCuidadoUsuais = mpmCuidadoUsual;
		this.servidor = servidor;
		this.servidorMovimentado = servidorMovimentado;
		this.indPendente = indPendente;
		this.indItemRecomendadoAlta = indItemRecomendadoAlta;
		this.dthrInicio = dthrInicio;
		this.criadoEm = criadoEm;
		this.dthrFim = dthrFim;
		this.frequencia = frequencia;
		this.descricao = descricao;
		this.alteradoEm = alteradoEm;
		this.servidorValidacao = servidor;
		this.servidorValidaMovimentacao = servidorValidaMovimerntacao;
		this.indItemRecTransferencia = indItemRecTransferencia;
		this.mpmPrescricaoCuidadoses = mpmPrescricaoCuidadoses;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "atdSeq", column = @Column(name = "ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 14, scale = 0)) })
	public MpmPrescricaoCuidadoId getId() {
		return this.id;
	}

	public void setId(MpmPrescricaoCuidadoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "PCU_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PCU_SEQ", referencedColumnName = "SEQ") })
	public MpmPrescricaoCuidado getMpmPrescricaoCuidados() {
		return this.mpmPrescricaoCuidados;
	}

	public void setMpmPrescricaoCuidados(
			MpmPrescricaoCuidado mpmPrescricaoCuidados) {
		this.mpmPrescricaoCuidados = mpmPrescricaoCuidados;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TFQ_SEQ", nullable = false)
	public MpmTipoFrequenciaAprazamento getMpmTipoFreqAprazamentos() {
		return this.mpmTipoFreqAprazamentos;
	}

	public void setMpmTipoFreqAprazamentos(
			MpmTipoFrequenciaAprazamento mpmTipoFreqAprazamentos) {
		this.mpmTipoFreqAprazamentos = mpmTipoFreqAprazamentos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CDU_SEQ", nullable = false)
	public MpmCuidadoUsual getMpmCuidadoUsuais() {
		return this.mpmCuidadoUsuais;
	}

	public void setMpmCuidadoUsuais(MpmCuidadoUsual mpmCuidadoUsual) {
		this.mpmCuidadoUsuais = mpmCuidadoUsual;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "IND_ITEM_RECOMENDADO_ALTA", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndItemRecomendadoAlta() {
		return this.indItemRecomendadoAlta;
	}

	public void setIndItemRecomendadoAlta(Boolean indItemRecomendadoAlta) {
		this.indItemRecomendadoAlta = indItemRecomendadoAlta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INICIO", nullable = false, length = 7)
	public Date getDthrInicio() {
		return this.dthrInicio;
	}

	public void setDthrInicio(Date dthrInicio) {
		this.dthrInicio = dthrInicio;
	}

	@Column(name = "FREQUENCIA", precision = 5, scale = 0)
	public Integer getFrequencia() {
		return this.frequencia;
	}

	public void setFrequencia(Integer frequencia) {
		this.frequencia = frequencia;
	}

	@Column(name = "DESCRICAO", length = 240)
	@Length(max = 240)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_ITEM_REC_TRANSFERENCIA", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndItemRecTransferencia() {
		return indItemRecTransferencia;
	}

	public void setIndItemRecTransferencia(Boolean indItemRecTransferencia) {
		this.indItemRecTransferencia = indItemRecTransferencia;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpmPrescricaoCuidados")
	public Set<MpmPrescricaoCuidado> getMpmPrescricaoCuidadoses() {
		return this.mpmPrescricaoCuidadoses;
	}

	public void setMpmPrescricaoCuidadoses(
			Set<MpmPrescricaoCuidado> mpmPrescricaoCuidadoses) {
		this.mpmPrescricaoCuidadoses = mpmPrescricaoCuidadoses;
	}
	
	@Column(name = "ORDEM", nullable = false)
	public Integer getOrdem() {
		return this.ordem;
	}
	public void setOrdem(Integer ordemRelatorio) {
		this.ordem = ordemRelatorio;
	}

	public enum Fields {
		ID("id"), PRESCRICAO_MEDICA("prescricaoMedica"), PRESCRICAO_MEDICA_ID(
				"prescricaoMedica.id"), PME_SEQ(
				"prescricaoMedica.id.seq"), DTHR_INICIO("dthrInicio"), DTHR_FIM(
				"dthrFim"), PENDENTE("indPendente"), CRIADO_EM("criadoEm"), ALTERADO_EM(
				"alteradoEm"), ATD_SEQ("id.atdSeq"), SEQ("id.seq"), CDU(
				"mpmCuidadoUsuais"), IND_ITEM_RECOMENDADO_ALTA("indItemRecomendadoAlta"),
				MPM_PRESCRICAO_CUIDADOS("mpmPrescricaoCuidados"),
				MPM_PRESCRICAO_CUIDADOS_SEQ("mpmPrescricaoCuidados.id.seq"),
				MPM_PRESCRICAO_CUIDADOS_ATD_SEQ("mpmPrescricaoCuidados.id.atdSeq"),
				SERVIDOR_VALIDACAO("servidorValidacao"), MPM_TIPO_FREQ_APRAZAMENTO("mpmTipoFreqAprazamentos"),ORDEM("ordem");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@Override
	@Transient
	public String getDescricaoFormatada() {
		String descricaoFormatada = "";
		String descricaoTipoFreqAprazamentos = null;
		StringBuffer sintaxeCuidado = new StringBuffer();

		// For√ßa carregamento de campo lazy ao acessar o getter
		MpmTipoFrequenciaAprazamento mpmTipoFreqAprazamentos = this
				.getMpmTipoFreqAprazamentos();
		if (mpmTipoFreqAprazamentos.getSintaxe() != null
				&& this.getFrequencia() != null) {
			descricaoTipoFreqAprazamentos = StringUtils.replace(
					mpmTipoFreqAprazamentos.getSintaxe(), "#", this
							.getFrequencia().toString());
		} else {
			descricaoTipoFreqAprazamentos = mpmTipoFreqAprazamentos
					.getDescricao();
		}

		if (this.getMpmCuidadoUsuais().getIndOutros()) {
			sintaxeCuidado.append(StringUtils.defaultString(this.getDescricao()));
		} else {
			sintaxeCuidado.append(this.getMpmCuidadoUsuais().getDescricao());
			if (StringUtils.isNotBlank(this.getDescricao())) {
				sintaxeCuidado.append(" - ").append(this.getDescricao());
			}
		}

		descricaoFormatada = sintaxeCuidado.append(", ")
				.append(descricaoTipoFreqAprazamentos).append(';').toString();

		return descricaoFormatada.trim();
	}

	@Override
	@Transient
	public ItemPrescricaoMedica getAnterior() {
		return this.getMpmPrescricaoCuidados();
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	
	@Column(name = "PCU_ATD_SEQ_PRCR_ANT", length = 9)
	public Integer getPcuAtdSeqPrcrAnt() {
		return pcuAtdSeqPrcrAnt;
	}

	public void setPcuAtdSeqPrcrAnt(Integer pcuAtdSeqPrcrAnt) {
		this.pcuAtdSeqPrcrAnt = pcuAtdSeqPrcrAnt;
	}
	
	@Column(name = "PCU_SEQ_PRCR_ANT", length = 14)
	public Long getPcuSeqPrcrAnt() {
		return pcuSeqPrcrAnt;
	}

	public void setPcuSeqPrcrAnt(Long pcuSeqPrcrAnt) {
		this.pcuSeqPrcrAnt = pcuSeqPrcrAnt;
	}

	@Override
	@Transient
	public boolean possuiFilhos() {
		return mpmPrescricaoCuidadoses.size() > 0;
	}
	
	@Override
	public Object clone() throws CloneNotSupportedException{
		return super.clone();
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpmPrescricaoCuidado)) {
			return false;
		}
		MpmPrescricaoCuidado other = (MpmPrescricaoCuidado) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}
