package br.gov.mec.aghu.model;

// Generated 08/02/2010 17:25:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;
import br.gov.mec.aghu.dominio.DominioSituacaoSolicitacaoInternacao;

/**
 * AinSolicitacoesInternacao generated by hbm2java
 */
@Entity
@SequenceGenerator(name="ainSinSq1", sequenceName="AGH.AIN_SIN_SQ1", allocationSize = 1)
@Table(name = "AIN_SOLICITACOES_INTERNACAO", schema = "AGH")
@SuppressWarnings({"PMD.CyclomaticComplexity"})
public class AinSolicitacoesInternacao extends BaseEntitySeq<Integer> implements java.io.Serializable {
	private static final long serialVersionUID = 1787487183637703820L;
	
	private Integer seq;
	private Date criadoEm;
	private DominioSituacaoSolicitacaoInternacao indSitSolicInternacao;
	private AipPacientes paciente;

	private AghEspecialidades especialidade;
	private RapServidores servidor;
	private RapServidores servidorDigitador;
	private FatConvenioSaudePlano convenio;
	private Date dthrAtendimentoSolicitacao;
	private Date dtPrevInternacao;
	private AinLeitos leito;
	private AinAcomodacoes acomodacao;
	private AinQuartos quarto;
	private AghUnidadesFuncionais unidadeFuncional;
	private String observacao;
	private FatItensProcedHospitalar procedimento;
	private String motivoNegacaoInternacao;
	private Boolean indNegativaInternacao;
	private Date negadoEm;
	private AghCid cid;
	private Short tempoPrevisto;
	
	private Integer version;

	public AinSolicitacoesInternacao() {
	}

	public AinSolicitacoesInternacao(Integer seq, Date criadoEm,
			DominioSituacaoSolicitacaoInternacao indSitSolicInternacao, AghEspecialidades especialidade, RapServidores servidor, RapServidores servidorDigitado) {
		this.seq = seq;
		this.criadoEm = criadoEm;
		this.indSitSolicInternacao = indSitSolicInternacao;
		this.especialidade = especialidade;
		this.servidor = servidor;
		this.servidorDigitador = servidorDigitado;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "ainSinSq1")
	@Column(name = "SEQ", nullable = false, precision = 8, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO")
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "NEGADO_EM", nullable = true, length = 7)
	public Date getNegadoEm() {
		return this.negadoEm;
	}

	public void setNegadoEm(Date negadoEm) {
		this.negadoEm = negadoEm;
	}
	
	@Column(name = "IND_SIT_SOLIC_INTERNACAO", nullable = false,length=1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoSolicitacaoInternacao getIndSitSolicInternacao() {
		return this.indSitSolicInternacao;
	}

	public void setIndSitSolicInternacao(DominioSituacaoSolicitacaoInternacao indSitSolicInternacao) {
		this.indSitSolicInternacao = indSitSolicInternacao;
	}

	@Column(name = "IND_NEGATIVA_INTERNACAO", nullable = false,length=1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndNegativaInternacao() {
		return this.indNegativaInternacao;
	}

	public void setIndNegativaInternacao(Boolean indNegativaInternacao) {
		this.indNegativaInternacao = indNegativaInternacao;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="ESP_SEQ",referencedColumnName="SEQ")
	public AghEspecialidades getEspecialidade() {
		return this.especialidade;
	}

	public void setEspecialidade(AghEspecialidades especialidade) {
		this.especialidade = especialidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_DIGITADA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_DIGITADA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorDigitador() {
		return this.servidorDigitador;
	}

	public void setServidorDigitador(RapServidores servidor) {
		this.servidorDigitador = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "CSP_SEQ", referencedColumnName = "SEQ", nullable = false),
			@JoinColumn(name = "CSP_CNV_CODIGO", referencedColumnName = "CNV_CODIGO", nullable = false) })
	public FatConvenioSaudePlano getConvenio() {
		return this.convenio;
	}

	public void setConvenio(FatConvenioSaudePlano conv) {
		this.convenio = conv;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_ATENDIMENTO_SOLICITACAO", length = 7)
	public Date getDthrAtendimentoSolicitacao() {
		return this.dthrAtendimentoSolicitacao;
	}

	public void setDthrAtendimentoSolicitacao(Date dthrAtendimentoSolicitacao) {
		this.dthrAtendimentoSolicitacao = dthrAtendimentoSolicitacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_PREV_INTERNACAO", length = 7)
	public Date getDtPrevInternacao() {
		return this.dtPrevInternacao;
	}

	public void setDtPrevInternacao(Date dtPrevInternacao) {
		this.dtPrevInternacao = dtPrevInternacao;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LTO_LTO_ID")
	public AinLeitos getLeito() {
		return this.leito;
	}

	public void setLeito(AinLeitos leito) {
		this.leito = leito;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ACM_SEQ")
	public AinAcomodacoes getAcomodacao() {
		return this.acomodacao;
	}

	public void setAcomodacao(AinAcomodacoes acomodacao) {
		this.acomodacao = acomodacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QRT_NUMERO")
	public AinQuartos getQuarto() {
		return this.quarto;
	}

	public void setQuarto(AinQuartos quarto) {
		this.quarto = quarto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ")
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return this.unidadeFuncional;
	}

	public void setUnidadeFuncional(AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

	@Column(name = "OBSERVACAO", length = 240)
	@Length(max = 240,message="Observação deve ter no máximo 240 caracteres.")
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "IPH_SEQ", referencedColumnName = "SEQ",nullable=true),
			@JoinColumn(name = "IPH_PHO_SEQ", referencedColumnName = "PHO_SEQ",nullable=true) })
	public FatItensProcedHospitalar getProcedimento() {
		return this.procedimento;
	}

	public void setProcedimento(FatItensProcedHospitalar prc) {
		this.procedimento = prc;
	}
	
	@Column(name = "MOTIVO_NEGACAO", length = 500)
	@Length(max = 500,message="Observação deve ter no máximo 500 caracteres.")
	public String getMotivoNegacaoInternacao() {
		return this.motivoNegacaoInternacao;
	}

	public void setMotivoNegacaoInternacao(String motivoNegacaoInternacao) {
		this.motivoNegacaoInternacao = motivoNegacaoInternacao;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( @JoinColumn(name = "CID_SEQ", referencedColumnName = "SEQ") )
	public AghCid getCid() {
		return cid;
	}

	public void setCid(AghCid cid) {
		this.cid = cid;
	}

	@Column(name = "TEMPO_PREVISTO")
	public Short getTempoPrevisto() {
		return this.tempoPrevisto;
	}

	public void setTempoPrevisto(Short tempoPrevisto) {
		this.tempoPrevisto = tempoPrevisto;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}	
	
	@PrePersist
	@PreUpdate
	@SuppressWarnings({"unused", "PMD.NPathComplexity"})
	private void validarSolicitacoesInternacao() {
		
		if(!((this.getIndSitSolicInternacao().equals(DominioSituacaoSolicitacaoInternacao.P)||this.getIndSitSolicInternacao().equals(DominioSituacaoSolicitacaoInternacao.L)
				&& this.getLeito() == null && this.getQuarto() == null && this.getUnidadeFuncional() == null)||
				((this.getIndSitSolicInternacao().equals(DominioSituacaoSolicitacaoInternacao.A) || this.getIndSitSolicInternacao().equals(DominioSituacaoSolicitacaoInternacao.E))
				&&(this.getLeito()!=null || this.getQuarto()!=null || this.getUnidadeFuncional()!=null))
				||(this.getIndSitSolicInternacao().equals(DominioSituacaoSolicitacaoInternacao.C)))){
			throw new BaseRuntimeException();
		}
	
		
		if(!(this.getQuarto()!=null && this.getLeito() == null && this.getUnidadeFuncional() == null)&&
		!(this.getQuarto()==null && this.getLeito() != null && this.getUnidadeFuncional() == null) &&
		!(this.getQuarto()==null && this.getLeito() == null && this.getUnidadeFuncional() != null) &&
		!(this.getQuarto()==null && this.getLeito() == null && this.getUnidadeFuncional() == null)){
			throw new BaseRuntimeException();
		}
		if (!(this.getPaciente()==null && this.getObservacao()!=null)
				&& !(this.getPaciente()!=null)){
			throw new BaseRuntimeException();
		}
		if((!(this.getLeito()!=null || this.getQuarto()!=null || this.getUnidadeFuncional()!=null)&&
				this.getPaciente()!=null)
				&&
				(!(this.getLeito()==null && this.getQuarto()==null && this.getUnidadeFuncional()==null) && 
						this.getPaciente()!=null)
				&&
				(!(this.getLeito()==null && this.getQuarto()==null && this.getUnidadeFuncional()==null) &&
						this.getPaciente()==null))
				{
					throw new BaseRuntimeException();
				}
	}
	
	public enum Fields {
		COD_PACIENTE("paciente.codigo"),SOLICITACAO_ITERNACAO("indSitSolicInternacao"), DATA_PREVISTA_INTERNACAO("dtPrevInternacao"), 
		CRIADO_EM("criadoEm"),CODIGO_VINCULO("servidor.id.vinCodigo"), MATRICULA("servidor.id.matricula"),ESPECIALIDADE_SEQ("especialidade.seq"), 
		CODIGO_CONVENIO("convenio.id.cnvCodigo"), CONVENIO_SAUDE_PLANO_SEQ("convenio.id.seq"),SERVIDOR("servidor"),QUARTO("quarto"),
		SEQUENCE("seq"), LEITO("leito"), NOME_PACIENTE("paciente.nome"), PRONTUARIO("paciente.prontuario"), ESPECIALIDADE_SIGLA("especialidade.sigla"), UNIDADE_FUNCIONAL("unidadeFuncional"),
		PROCEDIMENTO("procedimento"), PACIENTE("paciente"), ESPECIALIDADE("especialidade"), SEQ("seq"), ACOMODACAO("acomodacao"), CONVENIO("convenio"), SERVIDOR_DIGITADOR("servidorDigitador"),
		NEGACAO_INTERNACAO("indNegativaInternacao"),NEGADO_EM("negadoEm");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AinSolicitacoesInternacao other = (AinSolicitacoesInternacao) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}
	
}
