package br.gov.mec.aghu.model;

// Generated 16/12/2009 16:08:27 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.hibernate.annotations.Parameter;

import br.gov.mec.aghu.core.dominio.DominioDiaSemana;
import br.gov.mec.aghu.core.persistence.BaseEntityNumero;
import br.gov.mec.aghu.dominio.DominioFuncionario;
import br.gov.mec.aghu.dominio.DominioGrupoAtendimentoAmbulatorio;
import br.gov.mec.aghu.dominio.DominioOrigemConsulta;
import br.gov.mec.aghu.prescricaomedica.vo.ConsultaComplementoVO;

/**
 * AacConsultas generated by hbm2java
 */

@Entity
@SequenceGenerator(name="aacConSq1", sequenceName="AGH.AAC_CON_SQ1", allocationSize = 1)
@Table(name = "AAC_CONSULTAS", schema = "AGH")
@org.hibernate.annotations.Cache(usage=org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
public class AacConsultas extends BaseEntityNumero<Integer> implements java.io.Serializable, Cloneable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -626161117761403838L;
	private Integer numero;
	private AacConsultas consulta;
	private AacGradeAgendamenConsultas gradeAgendamenConsulta;
	private Date dtConsulta;
	private Date criadoEm;
	private VAacConvenioPlano convenioPlano;
	private FatConvenioSaudePlano convenioSaudePlano;
	private RapServidores servidor;
	private String tpsTipo;
	private AacSituacaoConsultas indSituacaoConsulta;
	private RapServidores servidorConsultado;
	private RapServidores servidorAlterado;
	private RapServidores servidorMarcacao;
	private Date alteradoEm;
	private AghAtendimentos atendimento;
	private String justificativa;
	private AacRetornos retorno;
	private Integer retSeq;
	private AacMotivos motivo;
	private String indPendenciaFat;
	private DominioFuncionario indFuncionario;
	private Date dthrInicio;
	private Date dthrFim;
	private String indImpressaoBa;
	private String nomeMicro;
	private Long codCentral;
	private Long codCentralSol;
	private AacCondicaoAtendimento condicaoAtendimento;
	private AacTipoAgendamento tipoAgendamento;
	private AacPagador pagador;
	private Date dthrMarcacao;
	private Boolean excedeProgramacao;
	private AacSituacaoConsultas situacaoConsulta;
	private String postoSaude;
	private RapServidores servidorAtendido;
	private DominioGrupoAtendimentoAmbulatorio grupoAtendAmb;
	private AelProjetoPesquisas projetoPesquisa;
	private Set<AacConsultas> consultas = new HashSet<AacConsultas>(0);
	private Set<AghAtendimentos> atendimentos = new HashSet<AghAtendimentos>(0);
	private AacFormaAgendamento formaAgendamento;
	private DominioDiaSemana diaSemana;
	
	private Set<AacConsultaProcedHospitalar> procedimentosHospitalares;
	private Boolean chegou;
	private Boolean atender;
	private Boolean reaberto;
	private Set<MamAnamneses> anamneses;
	private Set<MamNotaAdicionalAnamneses> notasAdicionaisAnamneses;
	private Set<MamEvolucoes> evolucoes;
	private Set<MamNotaAdicionalEvolucoes> notasAdicionaisEvolucoes;
	private Set<MamReceituarios> receituarios;
	private Set<MamInterconsultas> interconsultas;
	private Set<MamTrgEncInterno> trgEncInternos;
	private Set<MamMotivoAtendimento> motivosAtendimento;
	private Set<MamReceituarioCuidado> receituarioCuidados;
	private DominioOrigemConsulta origem;
	private Integer version;
	private FatConvenioSaude fatConvenioSaude;
	private Short caaSeq;
	private Short tagSeq;
	private Short pgdSeq;
	private Integer pjqSeq;
	private Set<MamSolicitacaoRetorno> mamSolicitacaoRetorno;
	private Integer serVinMatriculaConsultado;
	private Short serVinCodigoConsutlado;
	private Set<FatProcedAmbRealizado> procedAmbRealizado;
	private Set<MamControles> controles;
	private Set<MamProcedimentoRealizado> procedimentosRealizados;
	
	private VRapPessoaServidor pessoaServidor;
	
	
	//Objeto transient criado para edição de grades
	private ConsultaComplementoVO complemento;

	private AipPacientes paciente;
	
	//Objeto transient
	private StatusCertificaoDigital statusCertificacaoDigital;
	
	private String stcSituacao;
	
	private Integer grdSeq;
	
	public AacConsultas() {
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aacConSq1")
	@Column(name = "NUMERO", nullable = false, precision = 8, scale = 0)
	public Integer getNumero() {
		return this.numero;
	}

	public void setNumero(Integer numero) {
		this.numero = numero;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_NUMERO")
	public AacConsultas getConsulta() {
		return this.consulta;
	}

	public void setConsulta(AacConsultas consulta) {
		this.consulta = consulta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GRD_SEQ", nullable = false)
	public AacGradeAgendamenConsultas getGradeAgendamenConsulta() {
		return this.gradeAgendamenConsulta;
	}

	public void setGradeAgendamenConsulta(AacGradeAgendamenConsultas gradeAgendamenConsulta) {
		this.gradeAgendamenConsulta = gradeAgendamenConsulta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RET_SEQ")
	public AacRetornos getRetorno() {
		return this.retorno;
	}

	public void setRetorno(AacRetornos retorno) {
		this.retorno = retorno;
	}

	// TemporalType alterado para timeStamp pois esse atributo é utilizado
	// para uma comparacao de datas levando em conta a hora.
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_CONSULTA", nullable = false, length = 7)
	public Date getDtConsulta() {
		return this.dtConsulta;
	}

	public void setDtConsulta(Date dtConsulta) {
		this.dtConsulta = dtConsulta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "TPS_TIPO", length = 2)
	public String getTpsTipo() {
		return this.tpsTipo;
	}

	public void setTpsTipo(String tpsTipo) {
		this.tpsTipo = tpsTipo;
	}

	@Deprecated
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IND_SIT_CONSULTA", nullable = false)
	public AacSituacaoConsultas getIndSituacaoConsulta() {
		return this.indSituacaoConsulta;
	}

	public void setIndSituacaoConsulta(AacSituacaoConsultas indSituacaoConsulta) {
		this.indSituacaoConsulta = indSituacaoConsulta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_CONSULTADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_CONSULTADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorConsultado() {
		return this.servidorConsultado;
	}

	public void setServidorConsultado(RapServidores servidorConsultado) {
		this.servidorConsultado = servidorConsultado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorAlterado() {
		return this.servidorAlterado;
	}

	public void setServidorAlterado(RapServidores servidorAlterado) {
		this.servidorAlterado = servidorAlterado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "JUSTIFICATIVA", length = 120)
	public String getJustificativa() {
		return this.justificativa;
	}

	public void setJustificativa(String justificativa) {
		this.justificativa = justificativa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MTO_SEQ")
	public AacMotivos getMotivo() {
		return this.motivo;
	}

	public void setMotivo(AacMotivos motivo) {
		this.motivo = motivo;
	}

	@Column(name = "IND_PENDENCIA_FAT", length = 1)
	public String getIndPendenciaFat() {
		return this.indPendenciaFat;
	}

	public void setIndPendenciaFat(String indPendenciaFat) {
		this.indPendenciaFat = indPendenciaFat;
	}

	@Column(name = "IND_FUNCIONARIO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioFuncionario getIndFuncionario() {
		return this.indFuncionario;
	}

	public void setIndFuncionario(DominioFuncionario indFuncionario) {
		this.indFuncionario = indFuncionario;
	}

	// TemporalType alterado para timeStamp pois esse atributo é utilizado
	// para uma comparacao de datas levando em conta a hora.
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INICIO", length = 7)
	public Date getDthrInicio() {
		return this.dthrInicio;
	}

	public void setDthrInicio(Date dthrInicio) {
		this.dthrInicio = dthrInicio;
	}

	// TemporalType alterado para timeStamp pois esse atributo é utilizado
	// para uma comparacao de datas levando em conta a hora.
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_FIM", length = 7)
	public Date getDthrFim() {
		return this.dthrFim;
	}

	public void setDthrFim(Date dthrFim) {
		this.dthrFim = dthrFim;
	}

	@Column(name = "IND_IMPRESSAO_BA", length = 1)
	public String getIndImpressaoBa() {
		return this.indImpressaoBa;
	}

	public void setIndImpressaoBa(String indImpressaoBa) {
		this.indImpressaoBa = indImpressaoBa;
	}

	@Column(name = "NOME_MICRO", length = 30)
	public String getNomeMicro() {
		return this.nomeMicro;
	}

	public void setNomeMicro(String nomeMicro) {
		this.nomeMicro = nomeMicro;
	}

	@Column(name = "COD_CENTRAL", precision = 12, scale = 0)
	public Long getCodCentral() {
		return this.codCentral;
	}

	public void setCodCentral(Long codCentral) {
		this.codCentral = codCentral;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FAG_CAA_SEQ")
	public AacCondicaoAtendimento getCondicaoAtendimento() {
		return this.condicaoAtendimento;
	}
	
	public void setCondicaoAtendimento(AacCondicaoAtendimento condicaoAtendimento) {
		this.condicaoAtendimento = condicaoAtendimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FAG_TAG_SEQ")
	public AacTipoAgendamento getTipoAgendamento() {
		return this.tipoAgendamento;
	}

	public void setTipoAgendamento(AacTipoAgendamento tipoAgendamento) {
		this.tipoAgendamento = tipoAgendamento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_MARCACAO", length = 7)
	public Date getDthrMarcacao() {
		return this.dthrMarcacao;
	}

	public void setDthrMarcacao(Date dthrMarcacao) {
		this.dthrMarcacao = dthrMarcacao;
	}

	@Column(name = "IND_EXCEDE_PROGRAMACAO", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getExcedeProgramacao() {
		return this.excedeProgramacao;
	}
	
	public void setExcedeProgramacao(Boolean excedeProgramacao) {
		this.excedeProgramacao = excedeProgramacao;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STC_SITUACAO")
	public AacSituacaoConsultas getSituacaoConsulta() {
		return this.situacaoConsulta;
	}

	public void setSituacaoConsulta(AacSituacaoConsultas situacaoConsulta) {
		this.situacaoConsulta = situacaoConsulta;
	}

	@Column(name = "POSTO_SAUDE", length = 50)
	public String getPostoSaude() {
		return this.postoSaude;
	}

	public void setPostoSaude(String postoSaude) {
		this.postoSaude = postoSaude;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ATENDIDO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ATENDIDO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorAtendido() {
		return this.servidorAtendido;
	}

	public void setServidorAtendido(RapServidores servidorAtendido) {
		this.servidorAtendido = servidorAtendido;
	}

	@Column(name = "GRUPO_ATEND_AMB", length = 20)
	@org.hibernate.annotations.Type(parameters = { @Parameter(name = "enumClassName", value = "br.gov.mec.aghu.dominio.DominioGrupoAtendimentoAmbulatorio") }, type = "br.gov.mec.aghu.core.model.jpa.DominioStringUserType")
	public DominioGrupoAtendimentoAmbulatorio getGrupoAtendAmb() {
		return this.grupoAtendAmb;
	}

	public void setGrupoAtendAmb(DominioGrupoAtendimentoAmbulatorio grupoAtendAmb) {
		this.grupoAtendAmb = grupoAtendAmb;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PJQ_SEQ", referencedColumnName = "SEQ")
	public AelProjetoPesquisas getProjetoPesquisa() {
		return this.projetoPesquisa;
	}

	public void setProjetoPesquisa(AelProjetoPesquisas projetoPesquisa) {
		this.projetoPesquisa = projetoPesquisa;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consultas")
	public Set<AacConsultas> getConsultas() {
		return this.consultas;
	}

	public void setConsultas(Set<AacConsultas> consultas) {
		this.consultas = consultas;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_MARCACAO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MARCACAO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorMarcacao() {
		return this.servidorMarcacao;
	}
	
	public void setServidorMarcacao(RapServidores servidorMarcacao) {
		this.servidorMarcacao = servidorMarcacao;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO")
	public AipPacientes getPaciente() {
		return this.paciente;
	}
	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ")
	public AghAtendimentos getAtendimento() {
		return atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consulta")
	public Set<AghAtendimentos> getAtendimentos() {
		return atendimentos;
	}

	public void setAtendimentos(Set<AghAtendimentos> atendimentos) {
		this.atendimentos = atendimentos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "FAG_CAA_SEQ", referencedColumnName = "CAA_SEQ", insertable = false, updatable = false),
			@JoinColumn(name = "FAG_TAG_SEQ", referencedColumnName = "TAG_SEQ", insertable = false, updatable = false),
			@JoinColumn(name = "FAG_PGD_SEQ", referencedColumnName = "PGD_SEQ", insertable = false, updatable = false) })
	public AacFormaAgendamento getFormaAgendamento() {
		return formaAgendamento;
	}

	public void setFormaAgendamento(AacFormaAgendamento formaAgendamento) {
		this.formaAgendamento = formaAgendamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FAG_PGD_SEQ")
	public AacPagador getPagador() {
		return pagador;
	}

	public void setPagador(AacPagador pagador) {
		this.pagador = pagador;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "CSP_SEQ", referencedColumnName = "SEQ"),
			@JoinColumn(name = "CSP_CNV_CODIGO", referencedColumnName = "CNV_CODIGO") })
	public FatConvenioSaudePlano getConvenioSaudePlano() {
		return convenioSaudePlano;
	}

	public void setConvenioSaudePlano(FatConvenioSaudePlano convenioSaudePlano) {
		this.convenioSaudePlano = convenioSaudePlano;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "CSP_SEQ", referencedColumnName = "PLANO", insertable=false, updatable=false),
	@JoinColumn(name = "CSP_CNV_CODIGO", referencedColumnName = "CNV_CODIGO", insertable=false, updatable=false) })
	public VAacConvenioPlano getConvenioPlano() {
		return convenioPlano;
	}

	public void setConvenioPlano(VAacConvenioPlano convenioPlano) {
		this.convenioPlano = convenioPlano;
	}

	@OneToMany(mappedBy="conNumero", fetch = FetchType.LAZY)
	public Set<MamSolicitacaoRetorno> getMamSolicitacaoRetorno() {
		return mamSolicitacaoRetorno;
	}

	public void setMamSolicitacaoRetorno(Set<MamSolicitacaoRetorno> mamSolicitacaoRetorno) {
		this.mamSolicitacaoRetorno = mamSolicitacaoRetorno;
	}
	@Transient
	public VRapPessoaServidor getPessoaServidor() {
		return pessoaServidor;
	}
	
	public void setPessoaServidor(VRapPessoaServidor pessoaServidor) {
		this.pessoaServidor = pessoaServidor;
	}

	public enum Fields {

		PACIENTE("paciente"), 
		DATA_CONSULTA("dtConsulta"), 
		PAC_CODIGO("paciente.codigo"),
		PAC_PRONTUARIO("paciente.prontuario"), 
		FAG_CAA_SEQ("condicaoAtendimento.seq"),
		FAG_TAG_SEQ("tipoAgendamento.seq"), 
		FAG_PGD_SEQ("pagador.seq"), 
		NUMERO("numero"), 
		V_RAP_SERVIDOR("pessoaServidor"), 
		RETORNO("retorno"), 
		RETORNO_SEQ("retorno.seq"), 
		ATENDIMENTO("atendimento"), 
		ATD_SEQ("atendimento.seq"), 
		GRADE_AGENDA_CONSULTA("gradeAgendamenConsulta"), 
		SEQ_GRADE_AGENDA_CONSULTA("gradeAgendamenConsulta.seq"), 
		DTHR_INICIO("dthrInicio"), 
		DTHR_FIM("dthrFim"), 
		SITUACAO_CONSULTA("situacaoConsulta"), 
		IND_SIT_CONSULTA("indSituacaoConsulta"), 
		CONSULTA("consulta"), 
		COD_CENTRAL("codCentral"),
		COD_CENTRAL_SOL("codCentralSol"),
		CAA_SEQ("caaSeq"),
		TAG_SEQ("tagSeq"),
		PGD_SEQ("pgdSeq"),
		CON_NUMERO("consulta.numero"), 
		CONDICAO_ATENDIMENTO("condicaoAtendimento"), 
		IND_EXCEDE_PROGRAMACAO("excedeProgramacao"),
		CONVENIO_SAUDE_PLANO("convenioSaudePlano"), 
		PROJETO_PESQUISA("projetoPesquisa"), 
		FORMA_AGENDAMENTO_ID("formaAgendamento.id"), 
		FORMA_AGENDAMENTO("formaAgendamento"), 
		SERVIDOR_CONSULTADO_MATRICULA("servidorConsultado.id.matricula"), 
		SERVIDOR_CONSULTADO_VIN_CODIGO("servidorConsultado.id.vinCodigo"), 
		IND_FUNCIONARIO("indFuncionario"),
		DIA_SEMANA("diaSemana"), 
		GRUPO_ATEND_AMB("grupoAtendAmb"), 
		CONTROLE("controles"), 
		SERVIDOR_CONSULTADO("servidorConsultado"), 
		CRIADO_EM("criadoEm"), 
		ALTERADO_EM("alteradoEm"), 
		GRD_SEQ("gradeAgendamenConsulta.seq"), 
		SERVIDOR_MARCACAO("servidorMarcacao"), 
		SERVIDOR_MARCACAO_MATRICULA("servidorMarcacao.id.matricula"), 
		SERVIDOR_MARCACAO_VIN_CODIGO("servidorMarcacao.id.vinCodigo"), 
		CSP_CNV_CODIGO("convenioSaudePlano.id.cnvCodigo"), 
		SITUACAO_CONSULTA_SIT("situacaoConsulta.situacao"), 
		ORIGEM("origem"), 
		FAT_CONVENIO_SAUDE("fatConvenioSaude"), 
		ATENDIMENTOS("atendimentos"),
		ANAMNESES("anamneses"), 
		EVOLUCOES("evolucoes"),
		MOTIVO("motivo"),
		GRADE_AGENDA_CONSULTA_ESPECIALIDADE("gradeAgendamenConsulta.especialidade"),
		SERVIDOR_ATENDIDO("servidorAtendido"),
		PAGADOR("pagador"), 
		SERVIDOR_ALTERADO("servidorAlterado"), 
		TIPO_AGENDAMENTO("tipoAgendamento"),
		SERVIDOR("servidor"),
		SERVIDOR_PESSOA_FISICA("servidor.pessoaFisica"),
		TRG_ENC_INTERNO("trgEncInternos"),
		PJQ_SEQ("pjqSeq"),
		CONVENIO_SAUDE_PLANO_CV("convenioSaudePlano.convenioSaude"),
		MAM_TRG_ENC_INTERNOS("trgEncInternos"),
		MAM_SOLICITACAO_RETORNO("mamSolicitacaoRetorno"),
		SER_MATRICULA_CONSULTADO("serVinMatriculaConsultado"),
		SER_VINCULO_CONSULTADO("serVinCodigoConsutlado"),
		STCSITUACAO("stcSituacao"),
		RETSEQ("retSeq"),
		GRDSEQ("grdSeq"),
		PROCEDIMENTO_AMB_REALIZADOS("procedAmbRealizado"),
		PROCEDIMENTOS_HOSPITALARES("procedimentosHospitalares"),
		PROCEDIMENTOS_REALIZADOS("procedimentosRealizados"),
		CSP_SEQ("convenioSaudePlano.id.seq"),
		TPS_TIPO("tpsTipo"),
		GRADE_AGENDA_CONSULTA_UNF_SALA("gradeAgendamenConsulta.siglaUnfSala"),
		GRADE_AGENDA_CONSULTA_EQUIPE("gradeAgendamenConsulta.equipe"),
		GRADE_AGENDA_CONSULTA_PROF_ESPECIALIDADE("gradeAgendamenConsulta.profEspecialidade"), 
		GRADE_AGENDA_CONSULTA_PROF_ESPECIALIDADE_SERVIDOR("gradeAgendamenConsulta.profEspecialidade.rapServidor"),
		GRADE_AGENDA_CONSULTA_PROF_ESPECIALIDADE_SERVIDOR_PESSOA_FISICA("gradeAgendamenConsulta.profEspecialidade.rapServidor.pessoaFisica");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((numero == null) ? 0 : numero.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AacConsultas other = (AacConsultas) obj;
		if (numero == null) {
			if (other.numero != null) {
				return false;
			}
		} else if (!numero.equals(other.numero)) {
			return false;
		}
		return true;
	}

	@Override
	public Object clone() throws CloneNotSupportedException {
		return super.clone();
	}

	@Column(name = "DIA_SEMANA")
	@org.hibernate.annotations.Type(parameters = { @Parameter(name = "enumClassName", value = "br.gov.mec.aghu.core.dominio.DominioDiaSemana") }, type = "br.gov.mec.aghu.core.model.jpa.DominioUserType")
	public DominioDiaSemana getDiaSemana() {
		return this.diaSemana;
	}

	public void setDiaSemana(DominioDiaSemana diaSemana) {
		this.diaSemana = diaSemana;
	}

	@Transient
	public ConsultaComplementoVO getComplemento() {
		if (complemento == null) {
			complemento = new ConsultaComplementoVO();
		}
		return complemento;
	}

	public void setComplemento(ConsultaComplementoVO complemento) {
		this.complemento = complemento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consulta")
	public Set<MamControles> getControles() {
		return controles;
	}
	
	public void setControles(Set<MamControles> setControles) {
		this.controles = setControles;
	}	

	@Transient
	public MamControles getControle() {
		return (getControles() != null && !getControles().isEmpty()) ? getControles().iterator().next() : null;
	}
	
	@Transient
	public void setControle(MamControles controle) {
		if (controles == null) {
			this.controles = new HashSet<MamControles>();
		} else {
			this.controles.clear();
		}
		
		this.controles.add(controle);
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consulta")
	public Set<MamProcedimentoRealizado> getProcedimentosRealizados() {
		return procedimentosRealizados;
	}

	public void setProcedimentosRealizados(Set<MamProcedimentoRealizado> procedimentosRealizados) {
		this.procedimentosRealizados = procedimentosRealizados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consultas")
	public Set<AacConsultaProcedHospitalar> getProcedimentosHospitalares() {
		return procedimentosHospitalares;
	}

	public void setProcedimentosHospitalares(Set<AacConsultaProcedHospitalar> procedimentosHospitalares) {
		this.procedimentosHospitalares = procedimentosHospitalares;
	}

	@Transient
	public Boolean getChegou() {
		if (chegou==null){
			if (getControle()==null || getControle().getSituacaoAtendimento() == null || getControle().getSituacaoAtendimento().getAgendado()){
				chegou=false;
			}else{
				chegou=true;
			}
		}
		return chegou;
	}

	public void setChegou(Boolean chegou) {
		this.chegou = chegou;
	}

	@Transient
	public Boolean getAtender() {
		if (atender==null){
			if (getControle() != null && getControle().getSituacaoAtendimento() != null
					&& getControle().getSituacaoAtendimento().getPacAtend()) {
				atender=true;
			}else{
				atender=false;
			}
		}
		return atender;
	}
	
	public void setAtender(Boolean atender) {
		this.atender = atender;
	}

	@Transient
	public Boolean getReaberto() {
		return reaberto;
	}

	public void setReaberto(Boolean reaberto) {
		this.reaberto = false;
	}
	
	public void setReceituarios(Set<MamReceituarios> receituarios) {
		this.receituarios = receituarios;
	}
	
	@OneToMany(mappedBy = "consulta")
	public Set<MamReceituarios> getReceituarios() {
		return receituarios;
	}
	
	public void setInterconsultas(Set<MamInterconsultas> interconsultas) {
		this.interconsultas = interconsultas;
	}
	
	@OneToMany(mappedBy = "consulta")
	public Set<MamInterconsultas> getInterconsultas() {
		return interconsultas;
	}	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consulta")	
	public Set<MamNotaAdicionalAnamneses> getNotasAdicionaisAnamneses() {
		return notasAdicionaisAnamneses;
	}

	public void setNotasAdicionaisAnamneses(
			Set<MamNotaAdicionalAnamneses> notasAdicionaisAnamneses) {
		this.notasAdicionaisAnamneses = notasAdicionaisAnamneses;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consulta")	
	public Set<MamNotaAdicionalEvolucoes> getNotasAdicionaisEvolucoes() {
		return notasAdicionaisEvolucoes;
	}

	public void setNotasAdicionaisEvolucoes(Set<MamNotaAdicionalEvolucoes> notasAdicionaisEvolucoes) {
		this.notasAdicionaisEvolucoes = notasAdicionaisEvolucoes;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consulta")
	public Set<MamTrgEncInterno> getTrgEncInternos() {
		return trgEncInternos;
	}

	public void setTrgEncInternos(Set<MamTrgEncInterno> trgEncInternos) {
		this.trgEncInternos = trgEncInternos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consulta")	
	public Set<MamMotivoAtendimento> getMotivosAtendimento() {
		return motivosAtendimento;
	}

	public void setMotivosAtendimento(Set<MamMotivoAtendimento> motivosAtendimento) {
		this.motivosAtendimento = motivosAtendimento;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consulta")	
	public Set<MamReceituarioCuidado> getReceituarioCuidados() {
		return receituarioCuidados;
	}

	public void setReceituarioCuidados(Set<MamReceituarioCuidado> receituarioCuidados) {
		this.receituarioCuidados = receituarioCuidados;
	}

	@OneToMany(mappedBy="consulta")
	public Set<MamAnamneses> getAnamneses() {
		return anamneses;
	}

	public void setAnamneses(Set<MamAnamneses> anamneses) {
		this.anamneses = anamneses;
	}

	@OneToMany(mappedBy="consulta")	
	public Set<MamEvolucoes> getEvolucoes() {
		return evolucoes;
	}

	public void setEvolucoes(Set<MamEvolucoes> evolucoes) {
		this.evolucoes = evolucoes;
	}
	
	@Column(name = "IND_ORIGEM", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioOrigemConsulta getOrigem() {
		return this.origem;
	}

	public void setOrigem(DominioOrigemConsulta origem) {
		this.origem = origem;
	}	
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}
	public void setVersion(Integer version) {
		this.version = version;
	}
	public void setStatusCertificacaoDigital(StatusCertificaoDigital statusCertificacaoDigital) {
		this.statusCertificacaoDigital = statusCertificacaoDigital;
	}
	@Transient
	public StatusCertificaoDigital getStatusCertificacaoDigital() {
		return statusCertificacaoDigital;
	}
	@Transient
	public Integer getOrdemIconeCertificacaoDigital() {
		Integer retorno = 2;
		if (this.getStatusCertificacaoDigital() == null) {
			return retorno;
		} else {
			if (StatusCertificaoDigital.PENDENTE.equals(this
					.getStatusCertificacaoDigital())) {
				retorno = 1;
			}
		}

		return retorno;
	}
	public enum StatusCertificaoDigital {
		PENDENTE, ASSINADO
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CSP_CNV_CODIGO", insertable=false, updatable=false, referencedColumnName="CODIGO")
	public FatConvenioSaude getFatConvenioSaude() {
		return fatConvenioSaude;
	}
	public void setFatConvenioSaude(FatConvenioSaude fatConvenioSaude) {
		this.fatConvenioSaude = fatConvenioSaude;
	}
	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarConsulta(){
		this.indSituacaoConsulta = this.situacaoConsulta;
	}
	@Column(name = "RET_SEQ", insertable=false, updatable=false)
	public Integer getRetSeq() {
		return retSeq;
	}
	public void setRetSeq(Integer retSeq) {
		this.retSeq = retSeq;
	}
	@Column(name = "FAG_CAA_SEQ", insertable=false, updatable=false)
	public Short getCaaSeq() {
		return caaSeq;
	}
	public void setCaaSeq(Short caaSeq) {
		this.caaSeq = caaSeq;
	}
	@Column(name = "FAG_TAG_SEQ", insertable=false, updatable=false)
	public Short getTagSeq() {
		return tagSeq;
	}
	public void setTagSeq(Short tagSeq) {
		this.tagSeq = tagSeq;
	}
	@Column(name = "FAG_PGD_SEQ", insertable=false, updatable=false)
	public Short getPgdSeq() {
		return pgdSeq;
	}
	public void setPgdSeq(Short pgdSeq) {
		this.pgdSeq = pgdSeq;
	}
	@Column(name="PJQ_SEQ",insertable=false,updatable=false)
	public Integer getPjqSeq() {
		return pjqSeq;
	}
	public void setPjqSeq(Integer pjqSeq) {
		this.pjqSeq = pjqSeq;
	}
	@Column(name = "SER_MATRICULA_CONSULTADO", insertable=false, updatable=false)
	public Integer getSerVinMatriculaConsultado() {
		return serVinMatriculaConsultado;
	}
	public void setSerVinMatriculaConsultado(Integer serVinMatriculaConsultado) {
		this.serVinMatriculaConsultado = serVinMatriculaConsultado;
	}
	@Column(name = "SER_VIN_CODIGO_CONSULTADO", insertable=false, updatable=false)
	public Short getSerVinCodigoConsutlado() {
		return serVinCodigoConsutlado;
	}
	public void setSerVinCodigoConsutlado(Short serVinCodigoConsutlado) {
		this.serVinCodigoConsutlado = serVinCodigoConsutlado;
	}
	@Column(name = "STC_SITUACAO", insertable=false, updatable=false)
	public String getStcSituacao() {
		return stcSituacao;
	}
	public void setStcSituacao(String stcSituacao) {
		this.stcSituacao = stcSituacao;
	}
	@Column(name = "GRD_SEQ", insertable=false, updatable=false)
	public Integer getGrdSeq() {
		return grdSeq;
	}
	public void setGrdSeq(Integer grdSeq) {
		this.grdSeq = grdSeq;
	}
	@OneToMany(mappedBy="consulta", fetch = FetchType.LAZY)
	public Set<FatProcedAmbRealizado> getProcedAmbRealizado() {
		return procedAmbRealizado;
	}
	public void setProcedAmbRealizado(Set<FatProcedAmbRealizado> procedAmbRealizado) {
		this.procedAmbRealizado = procedAmbRealizado;
	}
	@Column(name = "COD_CENTRAL_SOL", precision = 12, scale = 0)
	public Long getCodCentralSol() {
		return this.codCentralSol;
	}
	public void setCodCentralSol(Long codCentralSol) {
		this.codCentralSol = codCentralSol;
	}
}