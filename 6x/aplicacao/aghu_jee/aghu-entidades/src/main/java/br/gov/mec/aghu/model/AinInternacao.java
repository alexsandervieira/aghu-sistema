package br.gov.mec.aghu.model;

// Generated 20/01/2010 14:05:33 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.hibernate.annotations.Cascade;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;
import br.gov.mec.aghu.core.utils.DateUtil;
import br.gov.mec.aghu.dominio.DominioLocalPaciente;
import br.gov.mec.aghu.dominio.DominioSimNao;

/**
 * AinInternacoes generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"
	, "PMD.ExcessiveClassLength", "PMD.CyclomaticComplexity"})
@Entity
@Table(name = "AIN_INTERNACOES", schema = "AGH")

public class AinInternacao extends BaseEntitySeq<Integer> implements java.io.Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 9012509096092347760L;
	/**
	 * 
	 */
	private Integer seq;
	/**
	 * 
	 */
	private AipPacientes paciente;
	/**
	 * 
	 */
	private AghEspecialidades especialidade;
	/**
	 * 
	 */
	private RapServidores servidorDigita;
	/**
	 * 
	 */
	private RapServidores servidorProfessor;
	/**
	 * 
	 */
	private Date dthrInternacao;
	/**
	 * 
	 */
	private Boolean envProntUnidInt;
	/**
	 * chave estrangeira p/ tabela AIN_TIPOS_CARATER_INTERNACAO. pojo não
	 * gerado.
	 */
	private AinTiposCaraterInternacao tipoCaracterInternacao;
	/**
	 * 
	 */
	private FatConvenioSaude convenioSaude;
	/**
	 * 
	 */
	//private Byte cspSeq;
	private FatConvenioSaudePlano convenioSaudePlano;
	/**
	 *  
	 */
	private AghOrigemEventos origemEvento;
	/**
	 * 
	 */
	private Boolean indSaidaPac;
	/**
	 * 
	 */
	private Boolean indDifClasse;
	/**
	 * 
	 */
	private Boolean indPacienteInternado;
	/**
	 * 
	 */
	private DominioLocalPaciente indLocalPaciente;
	/**
	 * 
	 */
	private AinLeitos leito;
	/**
	 * 
	 */
	private AinQuartos quarto;
	/**
	 * 
	 */
	private AghUnidadesFuncionais unidadesFuncionais;
	/**
	 * chave estrangeira p/ tabela AIN_TIPOS_ALTA_MEDICA. pojo não gerado.
	 */
	private AinTiposAltaMedica tipoAltaMedica;
	/**
	 * 
	 */
	private AinAtendimentosUrgencia atendimentoUrgencia;
	/**
	 * 
	 */
	private Date dtPrevAlta;
	/**
	 * 
	 */
	private Date dthrAltaMedica;
	/**
	 * 
	 */
	private Date dtSaidaPaciente;
	/**
	 * Chave estrangeira para a tabela AGH_INSTITUICOES_HOSPITALARES. pojo não
	 * criado.
	 */
	private AghInstituicoesHospitalares instituicaoHospitalar;
	/**
	 * Chave estrangeira para a tabela AGH_INSTITUICOES_HOSPITALARES. pojo não
	 * criado.
	 */
	private AghInstituicoesHospitalares instituicaoHospitalarTransferencia;
	/**
	 * 
	 */
	private String justificativaAltDel;
	/**
	 * 
	 */
	private Date dthrPrimeiroEvento;
	/**
	 * 
	 */
	private Date dthrUltimoEvento;
	/**
	 * 
	 */
	private Integer iphSeq;
	/**
	 * 
	 */
	private Short iphPhoSeq;
	/**
	 * 
	 */
	private DominioSimNao indAltaManual;
	/**
	 * 
	 */
	private String prontuarioLegal;
	/**
	 * 
	 */
	private Integer docObito;
	/**
	 * chave estrangeira para tabela AEL_PROJETOS_PESQUISA. pojo não foi gerado.
	 */
	private AelProjetoPesquisas projetoPesquisa;
	/**
	 * 
	 */
	private String indConsMarcada;
	/**
	 * chave estrangeira para a tabela AIN_OBSERVACOES_PAC_ALTA. pojo não foi
	 * gerado.
	 */
	private AinObservacoesPacAlta observacaoPacienteAlta;

	private Set<AinObservacoesCenso> observacoesCenso = new HashSet<AinObservacoesCenso>(0);

	private Date dataHoraAvisoSamis;

	private Date dataHoraProntuarioBuscado;

	private Integer pacCodigo;

	private AghAtendimentos atendimento;

	private List<AinDiariasAutorizadas> diariasAutorizadas;

	private List<AinResponsaveisPaciente> responsaveisPaciente;

	//private List<AinResponsaveisPaciente> responsaveisPacienteExcluidos;
	
	private List<AinMovimentosInternacao> movimentosInternacao;
	
	private List<AinAcompanhantesInternacao> acompanhantesInternacao;
	
	private Set<AinCidsInternacao> cidsInternacao = new HashSet<AinCidsInternacao>(0);
	
	private Set<FatContasInternacao> fatContasInternacao = new HashSet<FatContasInternacao>(0);	
	
	private Set<AinDocsInternacao> docsInternacao = new HashSet<AinDocsInternacao>(0);

	private Set<AinExtratoLeitos> extratosLeitos = new HashSet<AinExtratoLeitos>(0);
	
	private Set<AinSolicTransfPacientes> soliciTransfPacientes = new HashSet<AinSolicTransfPacientes>(0);
	
	private Set<AinObservacoesPacInternado> observacoesPacInternados = new HashSet<AinObservacoesPacInternado>(0);
	
	private FatItensProcedHospitalar itemProcedimentoHospitalar;
	
	private Integer version;
	
	private Integer medicoExterno;

	public AinInternacao() {
	}
	
	public AinInternacao(Integer seq) {
		this.seq = seq;
	}

	private enum InternacaoExceptionCode implements BusinessExceptionCode {
		AIN_INT_CK12, AIN_INT_CK15, AIN_INT_CK16, AIN_INT_CK17, AIN_INT_CK3, AIN_INT_CK4, AIN_INT_CK5, AIN_INT_CK6, AIN_INT_CK7, AIN_INT_CK8,
		ERRO_INTERNACAO_ALTA
	}

	public AinInternacao(Integer seq, AipPacientes pacCodigo,
			AghEspecialidades espSeq, Date dthrInternacao,
			Boolean envProntUnidInt,
			AinTiposCaraterInternacao tipoCaracterInternacao,
			FatConvenioSaude convenioSaude, FatConvenioSaudePlano convenioSaudePlano, AghOrigemEventos oevSeq,
			Boolean indSaidaPac, Boolean indDifClasse,
			Boolean indPacienteInternado,
			DominioLocalPaciente indLocalPaciente,
			RapServidores servidorDigita, RapServidores servidorProfessor) {
		this.seq = seq;
		this.paciente = pacCodigo;
		this.especialidade = espSeq;
		this.servidorDigita = servidorDigita;
		this.servidorProfessor = servidorProfessor;
		this.dthrInternacao = dthrInternacao;
		this.envProntUnidInt = envProntUnidInt;
		this.tipoCaracterInternacao = tipoCaracterInternacao;
		this.convenioSaude = convenioSaude;
		this.convenioSaudePlano = convenioSaudePlano;
		this.origemEvento = oevSeq;
		this.indSaidaPac = indSaidaPac;
		this.indDifClasse = indDifClasse;
		this.indPacienteInternado = indPacienteInternado;
		this.indLocalPaciente = indLocalPaciente;
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public AinInternacao(Integer seq, AipPacientes pacCodigo,
			AghEspecialidades espSeq, Date dthrInternacao,
			Boolean envProntUnidInt,
			AinTiposCaraterInternacao tipoCaracterInternacao,
			FatConvenioSaudePlano convenioSaudePlano, AghOrigemEventos oevSeq,
			Boolean indSaidaPac, Boolean indDifClasse,
			Boolean indPacienteInternado,
			DominioLocalPaciente indLocalPaciente, AinLeitos ltoLtoId,
			AinQuartos qrtNumero, AghUnidadesFuncionais unfSeq,
			AinTiposAltaMedica tipoAltaMedica,
			AinAtendimentosUrgencia atendimentoUrgencia, Date dtPrevAlta,
			Date dthrAltaMedica, Date dtSaidaPaciente,
			AghInstituicoesHospitalares instituicaoHospitalar,
			AghInstituicoesHospitalares instituicaoHospitalarTransferencia,
			String justificativaAltDel, Date dthrPrimeiroEvento,
			Date dthrUltimoEvento, Integer iphSeq, Short iphPhoSeq,
			DominioSimNao indAltaManual, String prontuarioLegal,
			Integer docObito, AelProjetoPesquisas projetoPesquisa,
			String indConsMarcada,
			AinObservacoesPacAlta observacaoPacienteAlta,
			RapServidores servidorDigita, RapServidores servidorProfessor,
			Set<FatContasInternacao> fatContasInternacao) {
		this.seq = seq;
		this.paciente = pacCodigo;
		this.especialidade = espSeq;
		this.servidorDigita = servidorDigita;
		this.servidorProfessor = servidorProfessor;
		this.dthrInternacao = dthrInternacao;
		this.envProntUnidInt = envProntUnidInt;
		this.tipoCaracterInternacao = tipoCaracterInternacao;
		this.convenioSaudePlano = convenioSaudePlano;
		this.origemEvento = oevSeq;
		this.indSaidaPac = indSaidaPac;
		this.indDifClasse = indDifClasse;
		this.indPacienteInternado = indPacienteInternado;
		this.indLocalPaciente = indLocalPaciente;
		this.leito = ltoLtoId;
		this.quarto = qrtNumero;
		this.unidadesFuncionais = unfSeq;
		this.tipoAltaMedica = tipoAltaMedica;
		this.atendimentoUrgencia = atendimentoUrgencia;
		this.dtPrevAlta = dtPrevAlta;
		this.dthrAltaMedica = dthrAltaMedica;
		this.dtSaidaPaciente = dtSaidaPaciente;
		this.instituicaoHospitalar = instituicaoHospitalar;
		this.instituicaoHospitalarTransferencia = instituicaoHospitalarTransferencia;
		this.justificativaAltDel = justificativaAltDel;
		this.dthrPrimeiroEvento = dthrPrimeiroEvento;
		this.dthrUltimoEvento = dthrUltimoEvento;
		this.iphSeq = iphSeq;
		this.iphPhoSeq = iphPhoSeq;
		this.indAltaManual = indAltaManual;
		this.prontuarioLegal = prontuarioLegal;
		this.docObito = docObito;
		this.projetoPesquisa = projetoPesquisa;
		this.indConsMarcada = indConsMarcada;
		this.observacaoPacienteAlta = observacaoPacienteAlta;
		//this.responsaveisPaciente = responsaveisPaciente;
		this.fatContasInternacao = fatContasInternacao;
	}

	@Id
	@Column(name = "SEQ", nullable = false, precision = 8, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", referencedColumnName="CODIGO", nullable = false)
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESP_SEQ", referencedColumnName="SEQ", nullable = false)
	public AghEspecialidades getEspecialidade() {
		return this.especialidade;
	}

	public void setEspecialidade(AghEspecialidades especialidade) {
		this.especialidade = especialidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_DIGITA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_DIGITA", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorDigita() {
		return this.servidorDigita;
	}

	public void setServidorDigita(RapServidores serMatriculaDigita) {
		this.servidorDigita = serMatriculaDigita;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_PROFESSOR", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_PROFESSOR", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorProfessor() {
		return this.servidorProfessor;
	}

	public void setServidorProfessor(RapServidores serMatriculaProfessor) {
		this.servidorProfessor = serMatriculaProfessor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INTERNACAO", nullable = false)
	public Date getDthrInternacao() {
		return this.dthrInternacao;
	}

	public void setDthrInternacao(Date dthrInternacao) {
		this.dthrInternacao = dthrInternacao;
	}

	@Column(name = "ENV_PRONT_UNID_INT", nullable = false, length=1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getEnvProntUnidInt() {
		return this.envProntUnidInt;
	}

	public void setEnvProntUnidInt(Boolean envProntUnidInt) {
		this.envProntUnidInt = envProntUnidInt;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TCI_SEQ", nullable = false)
	public AinTiposCaraterInternacao getTipoCaracterInternacao() {
		return this.tipoCaracterInternacao;
	}

	public void setTipoCaracterInternacao(
			AinTiposCaraterInternacao tipoCaracterInternacao) {
		this.tipoCaracterInternacao = tipoCaracterInternacao;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CSP_CNV_CODIGO", nullable = false, insertable = false, updatable = false)
	@Cascade({
		org.hibernate.annotations.CascadeType.REFRESH
	})
	public FatConvenioSaude getConvenioSaude() {
		return this.convenioSaude;
	}

	public void setConvenioSaude(FatConvenioSaude convenioSaude) {
		this.convenioSaude = convenioSaude;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "CSP_SEQ", referencedColumnName = "SEQ", nullable = false),
			@JoinColumn(name = "CSP_CNV_CODIGO", referencedColumnName = "CNV_CODIGO", nullable = false) })
	public FatConvenioSaudePlano getConvenioSaudePlano() {
		return this.convenioSaudePlano;
	}

	public void setConvenioSaudePlano(FatConvenioSaudePlano convenioSaudePlano) {
		this.convenioSaudePlano = convenioSaudePlano;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OEV_SEQ", nullable = false)
	public AghOrigemEventos getOrigemEvento() {
		return this.origemEvento;
	}

	public void setOrigemEvento(AghOrigemEventos origemEvento) {
		this.origemEvento = origemEvento;
	}

	@Column(name = "IND_SAIDA_PAC", nullable = false, length=1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndSaidaPac() {
		return this.indSaidaPac;
	}

	public void setIndSaidaPac(Boolean indSaidaPac) {
		this.indSaidaPac = indSaidaPac;
	}
	
	@Column(name = "IND_DIF_CLASSE", nullable = false, length=1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")	
	public Boolean getIndDifClasse() {
		return this.indDifClasse;
	}

	public void setIndDifClasse(Boolean indDifClasse) {
		this.indDifClasse = indDifClasse;
	}

	@Column(name = "IND_PACIENTE_INTERNADO", nullable = false, length=1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndPacienteInternado() {
		return this.indPacienteInternado;
	}

	public void setIndPacienteInternado(Boolean indPacienteInternado) {
		this.indPacienteInternado = indPacienteInternado;
	}

	@Column(name = "IND_LOCAL_PACIENTE", nullable = false,length=1)
	@Enumerated(EnumType.STRING)
	public DominioLocalPaciente getIndLocalPaciente() {
		return this.indLocalPaciente;
	}

	public void setIndLocalPaciente(DominioLocalPaciente indLocalPaciente) {
		this.indLocalPaciente = indLocalPaciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LTO_LTO_ID")
	public AinLeitos getLeito() {
		return this.leito;
	}

	public void setLeito(AinLeitos ltoLtoId) {
		this.leito = ltoLtoId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QRT_NUMERO")
	public AinQuartos getQuarto() {
		return this.quarto;
	}

	public void setQuarto(AinQuartos quarto) {
		this.quarto = quarto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ")
	public AghUnidadesFuncionais getUnidadesFuncionais() {
		return this.unidadesFuncionais;
	}

	public void setUnidadesFuncionais(AghUnidadesFuncionais unfSeq) {
		this.unidadesFuncionais = unfSeq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TAM_CODIGO")
	public AinTiposAltaMedica getTipoAltaMedica() {
		return this.tipoAltaMedica;
	}

	public void setTipoAltaMedica(AinTiposAltaMedica tipoAltaMedica) {
		this.tipoAltaMedica = tipoAltaMedica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATU_SEQ")
	public AinAtendimentosUrgencia getAtendimentoUrgencia() {
		return this.atendimentoUrgencia;
	}

	public void setAtendimentoUrgencia(
			AinAtendimentosUrgencia atendimentoUrgencia) {
		this.atendimentoUrgencia = atendimentoUrgencia;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_PREV_ALTA", length = 7)
	public Date getDtPrevAlta() {
		return this.dtPrevAlta;
	}

	public void setDtPrevAlta(Date dtPrevAlta) {
		this.dtPrevAlta = dtPrevAlta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_ALTA_MEDICA", length = 7)
	public Date getDthrAltaMedica() {
		return this.dthrAltaMedica;
	}

	public void setDthrAltaMedica(Date dthrAltaMedica) {
		this.dthrAltaMedica = dthrAltaMedica;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_SAIDA_PACIENTE", length = 7)
	public Date getDtSaidaPaciente() {
		return this.dtSaidaPaciente;
	}

	public void setDtSaidaPaciente(Date dtSaidaPaciente) {
		this.dtSaidaPaciente = dtSaidaPaciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IHO_SEQ_ORIGEM")
	public AghInstituicoesHospitalares getInstituicaoHospitalar() {
		return this.instituicaoHospitalar;
	}

	public void setInstituicaoHospitalar(
			AghInstituicoesHospitalares instituicaoHospitalar) {
		this.instituicaoHospitalar = instituicaoHospitalar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IHO_SEQ_TRANSFERENCIA")
	public AghInstituicoesHospitalares getInstituicaoHospitalarTransferencia() {
		return this.instituicaoHospitalarTransferencia;
	}

	public void setInstituicaoHospitalarTransferencia(
			AghInstituicoesHospitalares instituicaoHospitalarTransferencia) {
		this.instituicaoHospitalarTransferencia = instituicaoHospitalarTransferencia;
	}

	@Column(name = "JUSTIFICATIVA_ALT_DEL", length = 240)
	@Length(max = 240)
	public String getJustificativaAltDel() {
		return this.justificativaAltDel;
	}

	public void setJustificativaAltDel(String justificativaAltDel) {
		this.justificativaAltDel = justificativaAltDel;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_PRIMEIRO_EVENTO", length = 7)
	public Date getDthrPrimeiroEvento() {
		return this.dthrPrimeiroEvento;
	}

	public void setDthrPrimeiroEvento(Date dthrPrimeiroEvento) {
		this.dthrPrimeiroEvento = dthrPrimeiroEvento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_ULTIMO_EVENTO", length = 7)
	public Date getDthrUltimoEvento() {
		return this.dthrUltimoEvento;
	}

	public void setDthrUltimoEvento(Date dthrUltimoEvento) {
		this.dthrUltimoEvento = dthrUltimoEvento;
	}

	@Column(name = "IPH_SEQ", precision = 8, scale = 0)
	public Integer getIphSeq() {
		return this.iphSeq;
	}

	public void setIphSeq(Integer iphSeq) {
		this.iphSeq = iphSeq;
	}

	@Column(name = "IPH_PHO_SEQ", precision = 4, scale = 0)
	public Short getIphPhoSeq() {
		return this.iphPhoSeq;
	}

	public void setIphPhoSeq(Short iphPhoSeq) {
		this.iphPhoSeq = iphPhoSeq;
	}

	@Column(name = "IND_ALTA_MANUAL", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndAltaManual() {
		return this.indAltaManual;
	}

	public void setIndAltaManual(DominioSimNao indAltaManual) {
		this.indAltaManual = indAltaManual;
	}

	@Column(name = "PRONTUARIO_LEGAL", length = 1)
	@Length(max = 1)
	public String getProntuarioLegal() {
		return this.prontuarioLegal;
	}

	public void setProntuarioLegal(String prontuarioLegal) {
		this.prontuarioLegal = prontuarioLegal;
	}

	@Column(name = "DOC_OBITO", precision = 9, scale = 0)
	public Integer getDocObito() {
		return this.docObito;
	}

	public void setDocObito(Integer docObito) {
		this.docObito = docObito;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PJQ_SEQ")
	public AelProjetoPesquisas getProjetoPesquisa() {
		return this.projetoPesquisa;
	}

	public void setProjetoPesquisa(AelProjetoPesquisas projetoPesquisa) {
		this.projetoPesquisa = projetoPesquisa;
	}

	@Column(name = "IND_CONS_MARCADA", length = 1)
	@Length(max = 1)
	public String getIndConsMarcada() {
		return this.indConsMarcada;
	}

	public void setIndConsMarcada(String indConsMarcada) {
		this.indConsMarcada = indConsMarcada;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "APO_SEQ")
	public AinObservacoesPacAlta getObservacaoPacienteAlta() {
		return this.observacaoPacienteAlta;
	}

	public void setObservacaoPacienteAlta(
			AinObservacoesPacAlta observacaoPacienteAlta) {
		this.observacaoPacienteAlta = observacaoPacienteAlta;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "internacao")
	public AghAtendimentos getAtendimento() {
		return this.atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@Column(name = "PAC_CODIGO", nullable = false, updatable = false, insertable = false, precision = 8, scale = 0)
	public Integer getPacCodigo() {
		return this.pacCodigo;
	}

	public void setPacCodigo(Integer pacCodigo) {
		this.pacCodigo = pacCodigo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "internacao")
	@Cascade({
		org.hibernate.annotations.CascadeType.MERGE
	})
	public List<AinDiariasAutorizadas> getDiariasAutorizadas() {
		return this.diariasAutorizadas;
	}

	public void setDiariasAutorizadas(
			List<AinDiariasAutorizadas> diariasAutorizadas) {
		this.diariasAutorizadas = diariasAutorizadas;
	} 

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "internacao")
	public List<AinResponsaveisPaciente> getResponsaveisPaciente() {
		return this.responsaveisPaciente;
	}

	public void setResponsaveisPaciente(
			List<AinResponsaveisPaciente> responsaveisPaciente) {
		this.responsaveisPaciente = responsaveisPaciente;
	}

//	@Transient
//	public List<AinResponsaveisPaciente> getResponsaveisPacienteExcluidos() {
//		return this.responsaveisPacienteExcluidos;
//	}
//
//	public void setResponsaveisPacienteExcluidos(
//			List<AinResponsaveisPaciente> responsaveisPacienteExcluidos) {
//		this.responsaveisPacienteExcluidos = responsaveisPacienteExcluidos;
//	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "internacao")
	public List<AinMovimentosInternacao> getMovimentosInternacao() {
		return this.movimentosInternacao;
	}

	public void setMovimentosInternacao(
			List<AinMovimentosInternacao> movimentosInternacao) {
		this.movimentosInternacao = movimentosInternacao;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "internacao")
	public Set<FatContasInternacao> getFatContasInternacao() {
		return this.fatContasInternacao;
	}

	public void setFatContasInternacao(Set<FatContasInternacao> fatContasInternacao) {
		this.fatContasInternacao = fatContasInternacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "internacao")
	@Cascade( {org.hibernate.annotations.CascadeType.MERGE})
	public List<AinAcompanhantesInternacao> getAcompanhantesInternacao() {
		return this.acompanhantesInternacao;
	}

	public void setAcompanhantesInternacao(
			List<AinAcompanhantesInternacao> acompanhantesInternacao) {
		this.acompanhantesInternacao = acompanhantesInternacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "internacao")
	public Set<AinDocsInternacao> getDocsInternacao() {
		return this.docsInternacao;
	}
	
	public void setDocsInternacao(Set<AinDocsInternacao> docsInternacao) {
		this.docsInternacao = docsInternacao;
	}	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "internacao")
	public Set<AinExtratoLeitos> getExtratosLeitos() {
		return extratosLeitos;
	}

	public void setExtratosLeitos(Set<AinExtratoLeitos> extratosLeitos) {
		this.extratosLeitos = extratosLeitos;
	}
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "internacao")
	public Set<AinSolicTransfPacientes> getSoliciTransfPacientes() {
		return soliciTransfPacientes;
	}

	public void setSoliciTransfPacientes(
			Set<AinSolicTransfPacientes> soliciTransfPacientes) {
		this.soliciTransfPacientes = soliciTransfPacientes;
	}
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "internacao")
	public Set<AinObservacoesPacInternado> getObservacoesPacInternados() {
		return observacoesPacInternados;
	}

	public void setObservacoesPacInternados(
			Set<AinObservacoesPacInternado> observacoesPacInternados) {
		this.observacoesPacInternados = observacoesPacInternados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "internacao")
	@Cascade( {org.hibernate.annotations.CascadeType.MERGE})
	public Set<AinCidsInternacao> getCidsInternacao() {
		return this.cidsInternacao;
	}

	public void setCidsInternacao(Set<AinCidsInternacao> cidsInternacao) {
		this.cidsInternacao = cidsInternacao;
	}

	//@PrePersist
	//@PreUpdate
	@SuppressWarnings({"PMD.NPathComplexity", "unused"})
	public void validarInternacao() {
		/*
		 * VALORES PADRÃO
		 */
		if (this.envProntUnidInt == null) {
			this.envProntUnidInt = false;
		}
		if (this.indSaidaPac == null) {
			this.indSaidaPac = false;
		}
		if (this.indDifClasse == null) {
			this.indDifClasse = false;
		}
		if (this.indPacienteInternado == null) {
			this.indPacienteInternado = true;
		}

		/*
		 * RESTRIÇÕES (CONSTRAINTS)
		 */
		// CONSTRAINT AIN_INT_CK12 --> CONSISTE INFORMAÇÕES HOSPITALARES E
		// ATENDIMENTOS DE URGÊNCIA
		if (this.instituicaoHospitalar != null
				&& this.instituicaoHospitalar.getSeq() != null
				&& this.atendimentoUrgencia != null
				&& this.atendimentoUrgencia.getSeq() != null) {
			throw new BaseRuntimeException(InternacaoExceptionCode.AIN_INT_CK12);
		}
		
		// CONSTRAINT AIN_INT_CK15 --> EAT18.1 A data da saida do paciente deve
		// ser maior que a data do último evento
//		if (!(this.dtSaidaPaciente == null || (this.dthrUltimoEvento != null && this.dtSaidaPaciente
//				.compareTo(this.dthrUltimoEvento) >= 0))) {
//			throw new BaseRuntimeException(InternacaoExceptionCode.AIN_INT_CK15);
//		}
		
		// CONSTRAINT AIN_INT_CK15 --> EAT18.1 A data da saida do paciente deve ser nula ou, caso não seja nula deve
		// ser maior que a data do último evento e tipo de alta não permite tranferencia sem alta médica.
		if (this.dtSaidaPaciente != null && this.dthrUltimoEvento != null && this.dtSaidaPaciente.before(this.dthrUltimoEvento)
				&& (this.tipoAltaMedica == null || !this.tipoAltaMedica.getpermitePermanenciaComAlta())) {
			throw new BaseRuntimeException(InternacaoExceptionCode.AIN_INT_CK15);
		}
		
		// CONSTRAINT AIN_INT_CK16 --> EAT20 Consisite a sequencia da
		// transferencia
		if (!((this.instituicaoHospitalarTransferencia == null || this.instituicaoHospitalarTransferencia.getSeq() == null) || 
				((this.instituicaoHospitalarTransferencia != null && this.instituicaoHospitalarTransferencia.getSeq() != null) &&
						(this.tipoAltaMedica != null && this.tipoAltaMedica.getCodigo() != null) && this.dthrAltaMedica != null))) {
			throw new BaseRuntimeException(InternacaoExceptionCode.AIN_INT_CK16);
		}
		
		// CONSTRAINT AIN_INT_CK17 --> Ou o primeiro evento é nulo ou ele é
		// maior ou igual a internação
		if (!(this.dthrPrimeiroEvento == null || (this.dthrInternacao != null && this.dthrPrimeiroEvento
				.compareTo(this.dthrInternacao) >= 0))) {
			throw new BaseRuntimeException(InternacaoExceptionCode.AIN_INT_CK17);
		}
		
		// CONSTRAINT AIN_INT_CK3
		if (!((this.unidadesFuncionais != null && this.quarto == null && this.leito == null)
				|| (this.unidadesFuncionais == null && this.quarto != null && this.leito == null) || (this.unidadesFuncionais == null
				&& this.quarto == null && this.leito != null))) {
			throw new BaseRuntimeException(InternacaoExceptionCode.AIN_INT_CK3);
		}
		
		// CONSTRAINT AIN_INT_CK4 --> CONSISTE A ALTA MÉDICA E A DATA DE
		// INTERNAÇÃO
		if (!(this.dthrAltaMedica == null || (this.dthrInternacao != null && this.dthrAltaMedica
				.compareTo(this.dthrInternacao) >= 0))) {
			throw new BaseRuntimeException(InternacaoExceptionCode.AIN_INT_CK4);
		}
		
		// CONSTRAINT AIN_INT_CK5 --> CONSISTE DATA PREVISÃO DE ALTA E DATA
		// INTERNAÇÃO
		if (this.dtPrevAlta != null && 
				(this.dthrInternacao == null || DateUtil.validaDataTruncadaMaior( this.dthrInternacao, this.dtPrevAlta))) {			
			throw new BaseRuntimeException(InternacaoExceptionCode.AIN_INT_CK5);
		}
		
		// CONSTRAINT AIN_INT_CK6 --> CONSISTE DATA DE SAÍDA DO PACIENTE E DATA
		// INTERNAÇÃO
		if (!(this.dtSaidaPaciente == null || this.dtSaidaPaciente
				.compareTo(this.dthrInternacao) >= 0)) {
			throw new BaseRuntimeException(InternacaoExceptionCode.AIN_INT_CK6);
		}
		
		// CONSTRAINT AIN_INT_CK7 --> Exige que data/hora e tipo de alta sejam
		// compatíveis
		if (!(((this.tipoAltaMedica == null || this.tipoAltaMedica.getCodigo() == null) && this.dthrAltaMedica == null) || (this.tipoAltaMedica != null
				&& this.tipoAltaMedica.getCodigo() != null && this.dthrAltaMedica != null))) {
			throw new BaseRuntimeException(InternacaoExceptionCode.AIN_INT_CK7);
		}
		
		// CONSTRAINT AIN_INT_CK8 --> Consiste se a data da saída é maior ou
		// igual a data da alta médica
		if (!(this.dtSaidaPaciente == null || (this.dthrAltaMedica != null && this.dtSaidaPaciente
				.compareTo(this.dthrAltaMedica) >= 0))) {
			throw new BaseRuntimeException(InternacaoExceptionCode.AIN_INT_CK8);
		}
		
	}

	public enum Fields {
	
		COD_PACIENTE("paciente.codigo"), 
		PRONTUARIO_PACIENTE("paciente.prontuario"), 
		DT_INTERNACAO("dthrInternacao"), 
		IND_PACIENTE_INTERNADO("indPacienteInternado"), 
		QRT_NUMERO("quarto.numero"), 
		QUARTO("quarto"), 
		SEQ("seq"), 
		PAC_CODIGO("pacCodigo"), 
		TAM_CODIGO("tipoAltaMedica.codigo"), 
		ATENDIMENTO("atendimento"), 
		ATENDIMENTO_SEQ("atendimento.seq"), 
		ATENDIMENTO_URGENCIA("atendimentoUrgencia"), 
		PACIENTE("paciente"), 
		ESPECIALIDADE("especialidade"), 
		ESP_SEQ("especialidade.seq"), 
		SERVIDOR_PROFESSOR("servidorProfessor"), 
		SERVIDOR_PROFESSOR_PESSOA_FISICA("servidorProfessor.pessoaFisica"),
		DT_SAIDA_PACIENTE("dtSaidaPaciente"), 
		CSP_CNV_CODIGO("convenioSaudePlano.id.cnvCodigo"), 
		CSP_SEQ("convenioSaudePlano.id.seq"), 
		IND_SAIDA_PACIENTE("indSaidaPac"), 
		CARATER_INTERNACAO("tipoCaracterInternacao"), 
		TCI_SEQ("tipoCaracterInternacao.codigo"), 
		UNIDADE_FUNCIONAL("unidadesFuncionais"), 
		UNF_SEQ("unidadesFuncionais.seq"), 
		LEITO_ID("leito.leitoID"), 
		LEITO("leito"),
		LEITO_QUARTO("leito.quarto"),
		DATA_HORA_ALTA_MEDICA("dthrAltaMedica"), 
		DATA_HORA_AVISO_SAMIS("dataHoraAvisoSamis"), 
		DATA_PREV_ALTA("dtPrevAlta"),
		DATA_HORA_PRONTUARIO_BUSCADO("dataHoraProntuarioBuscado"), 
		OBS_PACIENTE_ALTA("observacaoPacienteAlta"), // APO_SEQ
		CONVENIO("convenioSaude"),
		CONVENIO_CODIGO("convenioSaude.codigo"),
		CENTRO_CUSTO("especialidade.centroCusto"),
		CONVENIO_SAUDE_PLANO("convenioSaudePlano"),
		ORIGEM_EVENTO("origemEvento"),
		INSTITUICAO_HOSPITALAR("instituicaoHospitalar"),
		PROJETO_PESQUISA_SEQ("projetoPesquisa.seq"),
		IND_LOCAL_PACIENTE("indLocalPaciente"),
		TIPO_ALTA_MEDICA("tipoAltaMedica"),
		ITEM_PROCED_HOSPITALAR("itemProcedimentoHospitalar"),
		DATA_HORA_PRIMEIRO_EVENTO("dthrPrimeiroEvento"),
		DATA_HORA_ULTIMO_EVENTO("dthrUltimoEvento"),
		PROJETO_PESQUISA("projetoPesquisa"),
		IPH_SEQ("itemProcedimentoHospitalar.id.seq"),
		IPH_PHO_SEQ("itemProcedimentoHospitalar.id.phoSeq"),
		SERVIDOR_PROFESSOR_MATRICULA("servidorProfessor.id.matricula"),
		SERVIDOR_PROFESSOR_VIN_CODIGO("servidorProfessor.id.vinCodigo"),
		SERVIDOR_DIGITA_MATRICULA("servidorDigita.id.matricula"),
		SERVIDOR_DIGITA_VIN_CODIGO("servidorDigita.id.vinCodigo"),
		ENV_PRONT_UNID_INT("envProntUnidInt"),
		CODIGO_CARATER_INTERNACAO("tipoCaracterInternacao.codigo"),
		IND_DIF_CLASSE("indDifClasse"),
		ATENDIMENTO_URGENCIA_SEQ("atendimentoUrgencia.seq"),
		INSTITUICAO_HOSPITALAR_SEQ("instituicaoHospitalar.seq"),
		INSTITUICAO_HOSPITALAR_TRANSFERENCIA_SEQ("instituicaoHospitalarTransferencia.seq"),
		INSTITUICAO_HOSPITALAR_TRANSFERENCIA("instituicaoHospitalarTransferencia"),
		JUSTIFICATIVA_ALT_DEL("justificativaAltDel"),
		ORIGEM_EVENTO_SEQ("origemEvento.seq"),
		OBS_PACIENTE_ALTA_CODIGO("observacaoPacienteAlta.codigo"),
		IND_CONS_MARCADA("indConsMarcada"),
		DOC_OBITO("docObito"),
		IND_ALTA_MANUAL("indAltaManual"),
		PRONTUARIO_LEGAL("prontuarioLegal"),
		FAT_CONTAS_INTERNACAO("fatContasInternacao"),
		MOVIMENTOS_INTERNACAO("movimentosInternacao"),	
		OBSERVACOES_CENSO("observacoesCenso");	

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((this.seq == null) ? 0 : this.seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AinInternacao)) {
			return false;
		}
		AinInternacao other = (AinInternacao) obj;
		if (this.seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!this.seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_AVISO_SAMIS")
	public Date getDataHoraAvisoSamis() {
		return this.dataHoraAvisoSamis;
	}

	public void setDataHoraAvisoSamis(Date dataHoraAvisoSamis) {
		this.dataHoraAvisoSamis = dataHoraAvisoSamis;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_PRONTUARIO_BUSCADO")
	public Date getDataHoraProntuarioBuscado() {
		return this.dataHoraProntuarioBuscado;
	}

	public void setDataHoraProntuarioBuscado(Date dataHoraProntuarioBuscado) {
		this.dataHoraProntuarioBuscado = dataHoraProntuarioBuscado;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "IPH_PHO_SEQ", nullable=true, insertable = false, updatable = false),
			@JoinColumn(name = "IPH_SEQ", nullable=true, insertable = false, updatable = false) })
	public FatItensProcedHospitalar getItemProcedimentoHospitalar() {
		return this.itemProcedimentoHospitalar;
	}

	/**
	 * @param itemProcedimentoHospitalar the itemProcedimentoHospitalar to set
	 */
	public void setItemProcedimentoHospitalar(
			FatItensProcedHospitalar itemProcedimentoHospitalar) {
		this.itemProcedimentoHospitalar = itemProcedimentoHospitalar;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ainInternacao")
	public Set<AinObservacoesCenso> getObservacoesCenso() {
		return this.observacoesCenso;
	}

	public void setObservacoesCenso(Set<AinObservacoesCenso> observacoesCenso) {
		this.observacoesCenso = observacoesCenso;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	
	@Column(name = "SEQ_MEDICO_EXTERNO")
	public Integer getMedicoExterno() {
		return this.medicoExterno;
	}
	
	public void setMedicoExterno(Integer seqMedicoExterno) {
		this.medicoExterno = seqMedicoExterno;
	}

	@Transient
	public void addFatContaInternacao(FatContasInternacao contaInternacao) {
		getFatContasInternacao().add(contaInternacao);
	}
	
	@Transient
	public String getDataFormatadaDiaMesAno() {
		return DateUtil.obterDataFormatada(this.dthrInternacao, "dd/MM/yyyy");
	}
}
