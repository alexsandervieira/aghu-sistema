package br.gov.mec.aghu.model;

// Generated 14/10/2009 21:16:14 by Hibernate Tools 3.2.5.Beta

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.hibernate.annotations.Parameter;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioControleSumarioAltaPendente;
import br.gov.mec.aghu.dominio.DominioOrigemAtendimento;
import br.gov.mec.aghu.dominio.DominioPacAtendimento;
import br.gov.mec.aghu.dominio.DominioSituacaoSumarioAlta;
import br.gov.mec.aghu.dominio.DominioTipoLaminaLaringo;
import br.gov.mec.aghu.dominio.DominioTipoTratamentoAtendimento;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;
import br.gov.mec.aghu.core.utils.DateUtil;
import br.gov.mec.aghu.core.utils.DateValidator;

/**
 * AghAtendimentos generated by hbm2java
 */
@Entity
@SequenceGenerator(name="aghAtdSq1", sequenceName="AGH.AGH_ATD_SQ1", allocationSize = 1)
@Table(name = "AGH_ATENDIMENTOS", schema = "AGH")
@SuppressWarnings({"PMD.ExcessiveClassLength"})
public class AghAtendimentos extends BaseEntitySeq<Integer> implements java.io.Serializable {

	private static final long serialVersionUID = 8191708170321485992L;

	private Integer seq;
	private RapServidores servidor;
	private RapServidores servidorMovimento;
	private Date dthrInicio;
	private Boolean indPacPediatrico;
	private Boolean indPacPrematuro;
	private DominioPacAtendimento indPacAtendimento;
	private AhdHospitaisDia hospitalDia;
	private AinInternacao internacao;
	private AinAtendimentosUrgencia atendimentoUrgencia;
	private Date dthrFim;
	private Date dthrUltImprSumrPrescr;
	private DominioTipoLaminaLaringo tipoLaminaLaringo;
	private AinLeitos leito;
	private AinQuartos quarto;
	private AghUnidadesFuncionais unidadeFuncional;
	//private VAghUnidFuncional vUnidadeFuncional;
	private AghEspecialidades especialidade;
	private Integer prontuario;
	private Boolean indResultadoNaoConsultado;
	private DominioOrigemAtendimento origem;
	private Integer dcaBolNumero;
	private Short dcaBolBsaCodigo;
	private Date dcaBolData;
	

	private AghAtendimentosPacExtern atendimentoPacienteExterno;

	private Date dthrIngressoUnidade;
	private DominioTipoTratamentoAtendimento indTipoTratamento;
	
	private AghProfEspecialidades profissionalEspecialidade;
	private DominioSituacaoSumarioAlta indSitSumarioAlta;
	private DominioControleSumarioAltaPendente ctrlSumrAltaPendente;
	private Integer trpSeq;
	private MptTratamentoTerapeutico tratamentoTerapeutico;
	private AghAtendimentos atendimentoMae;
	private Integer tptSeq;
	private String indAcessoVascular;
	private Boolean indPacCpa;
	private Set<MpmPrescricaoMedica> mpmPrescricaoMedicases = new HashSet<MpmPrescricaoMedica>(
			0);
	
	private Set<MpmMotivoIngressoCti> mpmMotivoIngressoCti = new HashSet<MpmMotivoIngressoCti>(
			0);
	
	private Set<EpePrescricaoEnfermagem> prescricoesEnfermagem = new HashSet<EpePrescricaoEnfermagem>(
			0);
//	private McoGestacoes mcoGestacoes;

	private List<MpmAltaSumario> altasSumario;
	
	private List<SceReqMaterial> requisisoesMaterial;

	private List<MpmControlPrevAltas> controlPrevAltas;

	private Set<MpmCidAtendimento> cidAtendimentos = new HashSet<MpmCidAtendimento>(
			0);

	private AipPacientes paciente;
	private AacConsultas consulta;

	private Set<AacConsultas> consultas = new HashSet<AacConsultas>(0);

	private Set<MbcCirurgias> cirurgias = new HashSet<MbcCirurgias>(0);

	private Set<MpmSumarioAlta> sumariosAlta = new HashSet<MpmSumarioAlta>(0);

	private Set<AelSolicitacaoExames> aelSolicitacaoExames = new HashSet<AelSolicitacaoExames>();
	
	private Set<AelSolicitacaoExamesHist> aelSolicitacaoExamesHist = new HashSet<AelSolicitacaoExamesHist>();	

	private Set<AacAtendimentoApacs> atendimentosApac = new HashSet<AacAtendimentoApacs>();

	private Set<AipLocalizaPaciente> localizaPacientes = new HashSet<AipLocalizaPaciente>();
	
	private Set<MpmPim2> pims2 = new HashSet<MpmPim2>();

	private List<MamAltaSumario> mamAltasSumarios = new ArrayList<MamAltaSumario>();
	
	private Set<MptTratamentoTerapeutico> tratamentoTerapeuticoAtdSeq;

	private Integer gsoPacCodigo;
	private Short gsoSeqp;
	
	private Integer pacCodigo;
	
	// FatContaAtendimento

	//Atributo transient que pode ser utilizado para controle de iterações.
	private Boolean controleAtd;
	//private McoRecemNascidos mcoRecemNascidos;
	
	private Set<MptPrescricaoPaciente> prescricaoPacientes;
	
	private Set<SigCalculoAtdPaciente> listaSigCalculoAtdPaciente;
	
	private Integer intSeq;
	
	private Set<MptProcedimentoInternacao> listaMptProcedimentoInternacao = new HashSet<MptProcedimentoInternacao>();
	
	private List<AghAtendimentoPacientes> aghAtendimentoPacientes;
	
	private Set<MptPrescricaoCiclo> prescricaoCiclo;
	
	public AghAtendimentos() {
	}

	public AghAtendimentos(Integer seq) {
		this.seq = seq;
	}

	public AghAtendimentos(Integer seq, RapServidores servidorMovimento,
			AipPacientes paciente, Date dthrInicio, Boolean indPacPediatrico,
			Boolean indPacPrematuro, DominioPacAtendimento indPacAtendimento,
			AghUnidadesFuncionais unidadeFuncional,
			Boolean indResultadoNaoConsultado, DominioOrigemAtendimento origem) {
		this.seq = seq;
		this.servidorMovimento = servidorMovimento;
		this.paciente = paciente;
		this.dthrInicio = dthrInicio;
		this.indPacPediatrico = indPacPediatrico;
		this.indPacPrematuro = indPacPrematuro;
		this.indPacAtendimento = indPacAtendimento;
		this.unidadeFuncional = unidadeFuncional;
		this.indResultadoNaoConsultado = indResultadoNaoConsultado;
		this.origem = origem;
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public AghAtendimentos(Integer seq, RapServidores servidor,
			RapServidores servidorMovimento, AipPacientes paciente,
			Date dthrInicio, Boolean indPacPediatrico, Boolean indPacPrematuro,
			DominioPacAtendimento indPacAtendimento,
			AhdHospitaisDia hospitalDia, AinInternacao internacao,
			AinAtendimentosUrgencia atendimentoUrgencia, Date dthrFim,
			Date dthrUltImprSumrPrescr,
			DominioTipoLaminaLaringo tipoLaminaLaringo, AinLeitos leito,
			AinQuartos quarto, AghUnidadesFuncionais unidadeFuncional,
			AghEspecialidades especialidade, Integer prontuario,
			Boolean indResultadoNaoConsultado, DominioOrigemAtendimento origem,
			Integer dcaBolNumero, Short dcaBolBsaCodigo, Date dcaBolData,
			AghAtendimentosPacExtern atendimentoPacienteExterno,
			Date dthrIngressoUnidade, AacConsultas consulta,
			DominioTipoTratamentoAtendimento indTipoTratamento,
			Integer preSerMatricula, Short preSerVinCodigo, Short preEspSeq,
			DominioSituacaoSumarioAlta indSitSumarioAlta,
			DominioControleSumarioAltaPendente ctrlSumrAltaPendente,
			Integer trpSeq, MptTratamentoTerapeutico tratamentoTerapeutico,
			AghAtendimentos atendimentoMae, Integer tptSeq,
			String indAcessoVascular, Boolean indPacCpa,
			Set<MpmPrescricaoMedica> mpmPrescricaoMedicases) {
		this.seq = seq;
		this.servidor = servidor;
		this.servidorMovimento = servidorMovimento;
		this.paciente = paciente;
		this.dthrInicio = dthrInicio;
		this.indPacPediatrico = indPacPediatrico;
		this.indPacPrematuro = indPacPrematuro;
		this.indPacAtendimento = indPacAtendimento;
		this.hospitalDia = hospitalDia;
		this.internacao = internacao;
		this.atendimentoUrgencia = atendimentoUrgencia;
		this.dthrFim = dthrFim;
		this.dthrUltImprSumrPrescr = dthrUltImprSumrPrescr;
		this.tipoLaminaLaringo = tipoLaminaLaringo;
		this.leito = leito;
		this.quarto = quarto;
		this.unidadeFuncional = unidadeFuncional;
		this.especialidade = especialidade;
		this.prontuario = prontuario;
		this.indResultadoNaoConsultado = indResultadoNaoConsultado;
		this.origem = origem;
		this.dcaBolNumero = dcaBolNumero;
		this.dcaBolBsaCodigo = dcaBolBsaCodigo;
		this.dcaBolData = dcaBolData;
		this.atendimentoPacienteExterno = atendimentoPacienteExterno;
		this.dthrIngressoUnidade = dthrIngressoUnidade;
		this.consulta = consulta;
		this.indTipoTratamento = indTipoTratamento;
		//this.preSerMatricula = preSerMatricula;
		//this.preSerVinCodigo = preSerVinCodigo;
		//this.preEspSeq = preEspSeq;
		this.indSitSumarioAlta = indSitSumarioAlta;
		this.ctrlSumrAltaPendente = ctrlSumrAltaPendente;
		this.trpSeq = trpSeq;
		this.tratamentoTerapeutico = tratamentoTerapeutico;
		this.atendimentoMae = atendimentoMae;
		this.tptSeq = tptSeq;
		this.indAcessoVascular = indAcessoVascular;
		this.indPacCpa = indPacCpa;
		this.mpmPrescricaoMedicases = mpmPrescricaoMedicases;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aghAtdSq1")
	@Column(name = "SEQ", nullable = false, precision = 7, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	/**
	 * Professor responsável.
	 * 
	 * @return
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_MOVIMENTO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_MOVIMENTO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorMovimento() {
		return this.servidorMovimento;
	}

	public void setServidorMovimento(RapServidores servidorMovimento) {
		this.servidorMovimento = servidorMovimento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INICIO", nullable = false, length = 7)
	public Date getDthrInicio() {
		return this.dthrInicio;
	}

	public void setDthrInicio(Date dthrInicio) {
		this.dthrInicio = dthrInicio;
	}

	@Column(name = "IND_PAC_PEDIATRICO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndPacPediatrico() {
		return this.indPacPediatrico;
	}

	public void setIndPacPediatrico(Boolean indPacPediatrico) {
		this.indPacPediatrico = indPacPediatrico;
	}

	@Column(name = "IND_PAC_PREMATURO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndPacPrematuro() {
		return this.indPacPrematuro;
	}

	public void setIndPacPrematuro(Boolean indPacPrematuro) {
		this.indPacPrematuro = indPacPrematuro;
	}

	@Column(name = "IND_PAC_ATENDIMENTO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioPacAtendimento getIndPacAtendimento() {
		return this.indPacAtendimento;
	}

	public void setIndPacAtendimento(DominioPacAtendimento indPacAtendimento) {
		this.indPacAtendimento = indPacAtendimento;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "HOD_SEQ")
	public AhdHospitaisDia getHospitalDia() {
		return this.hospitalDia;
	}

	public void setHospitalDia(AhdHospitaisDia hospitalDia) {
		this.hospitalDia = hospitalDia;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INT_SEQ")
	public AinInternacao getInternacao() {
		return this.internacao;
	}

	public void setInternacao(AinInternacao internacao) {
		this.internacao = internacao;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATU_SEQ", updatable = true)
	public AinAtendimentosUrgencia getAtendimentoUrgencia() {
		return this.atendimentoUrgencia;
	}

	public void setAtendimentoUrgencia(
			AinAtendimentosUrgencia atendimentoUrgencia) {
		this.atendimentoUrgencia = atendimentoUrgencia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_FIM", length = 7)
	public Date getDthrFim() {
		return this.dthrFim;
	}

	public void setDthrFim(Date dthrFim) {
		this.dthrFim = dthrFim;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_ULT_IMPR_SUMR_PRESCR", length = 7)
	public Date getDthrUltImprSumrPrescr() {
		return this.dthrUltImprSumrPrescr;
	}

	public void setDthrUltImprSumrPrescr(Date dthrUltImprSumrPrescr) {
		this.dthrUltImprSumrPrescr = dthrUltImprSumrPrescr;
	}

	@Column(name = "TIPO_LAMINA_LARINGO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioTipoLaminaLaringo getTipoLaminaLaringo() {
		return this.tipoLaminaLaringo;
	}

	public void setTipoLaminaLaringo(DominioTipoLaminaLaringo tipoLaminaLaringo) {
		this.tipoLaminaLaringo = tipoLaminaLaringo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LTO_LTO_ID")
	public AinLeitos getLeito() {
		return this.leito;
	}

	public void setLeito(AinLeitos leito) {
		this.leito = leito;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QRT_NUMERO")
	public AinQuartos getQuarto() {
		return this.quarto;
	}

	public void setQuarto(AinQuartos quarto) {
		this.quarto = quarto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESP_SEQ")
	public AghEspecialidades getEspecialidade() {
		return this.especialidade;
	}

	public void setEspecialidade(AghEspecialidades especialidade) {
		this.especialidade = especialidade;
	}

	@Column(name = "PRONTUARIO", precision = 8, scale = 0)
	public Integer getProntuario() {
		return this.prontuario;
	}

	public void setProntuario(Integer prontuario) {
		this.prontuario = prontuario;
	}

	@Column(name = "IND_RESULTADO_NAO_CONSULTADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndResultadoNaoConsultado() {
		return this.indResultadoNaoConsultado;
	}

	public void setIndResultadoNaoConsultado(Boolean indResultadoNaoConsultado) {
		this.indResultadoNaoConsultado = indResultadoNaoConsultado;
	}

	@Column(name = "ORIGEM", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioOrigemAtendimento getOrigem() {
		return this.origem;
	}

	public void setOrigem(DominioOrigemAtendimento origem) {
		this.origem = origem;
	}

	@Column(name = "DCA_BOL_NUMERO", precision = 7, scale = 0)
	public Integer getDcaBolNumero() {
		return this.dcaBolNumero;
	}

	public void setDcaBolNumero(Integer dcaBolNumero) {
		this.dcaBolNumero = dcaBolNumero;
	}

	@Column(name = "DCA_BOL_BSA_CODIGO", precision = 3, scale = 0)
	public Short getDcaBolBsaCodigo() {
		return this.dcaBolBsaCodigo;
	}

	public void setDcaBolBsaCodigo(Short dcaBolBsaCodigo) {
		this.dcaBolBsaCodigo = dcaBolBsaCodigo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DCA_BOL_DATA", length = 7)
	public Date getDcaBolData() {
		return this.dcaBolData;
	}

	public void setDcaBolData(Date dcaBolData) {
		this.dcaBolData = dcaBolData;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INGRESSO_UNIDADE", length = 7)
	public Date getDthrIngressoUnidade() {
		return this.dthrIngressoUnidade;
	}

	public void setDthrIngressoUnidade(Date dthrIngressoUnidade) {
		this.dthrIngressoUnidade = dthrIngressoUnidade;
	}

	@Column(name = "IND_TIPO_TRATAMENTO", precision = 2, scale = 0)
	@org.hibernate.annotations.Type(parameters = { @Parameter(name = "enumClassName", value = "br.gov.mec.aghu.dominio.DominioTipoTratamentoAtendimento") }, type = "br.gov.mec.aghu.core.model.jpa.DominioUserType")
	public DominioTipoTratamentoAtendimento getIndTipoTratamento() {
		return this.indTipoTratamento;
	}

	public void setIndTipoTratamento(
			DominioTipoTratamentoAtendimento indTipoTratamento) {
		this.indTipoTratamento = indTipoTratamento;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PRE_SER_MATRICULA", referencedColumnName = "SER_MATRICULA"),
			@JoinColumn(name = "PRE_SER_VIN_CODIGO", referencedColumnName = "SER_VIN_CODIGO"),
			@JoinColumn(name = "PRE_ESP_SEQ", referencedColumnName = "ESP_SEQ") })
	public AghProfEspecialidades getProfissionalEspecialidade() {
		return profissionalEspecialidade;
	}
	
	public void setProfissionalEspecialidade(AghProfEspecialidades profissionalEspecialidade) {
		this.profissionalEspecialidade = profissionalEspecialidade;
	}

	@Column(name = "IND_SIT_SUMARIO_ALTA", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoSumarioAlta getIndSitSumarioAlta() {
		return this.indSitSumarioAlta;
	}

	public void setIndSitSumarioAlta(
			DominioSituacaoSumarioAlta indSitSumarioAlta) {
		this.indSitSumarioAlta = indSitSumarioAlta;
	}

	@Column(name = "CTRL_SUMR_ALTA_PENDENTE", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioControleSumarioAltaPendente getCtrlSumrAltaPendente() {
		return this.ctrlSumrAltaPendente;
	}

	public void setCtrlSumrAltaPendente(
			DominioControleSumarioAltaPendente ctrlSumrAltaPendente) {
		this.ctrlSumrAltaPendente = ctrlSumrAltaPendente;
	}

	@Column(name = "TRP_SEQ", precision = 8, scale = 0)
	public Integer getTrpSeq() {
		return this.trpSeq;
	}

	public void setTrpSeq(Integer trpSeq) {
		this.trpSeq = trpSeq;
	}

	@JoinColumn(name = "TRP_SEQ", referencedColumnName = "SEQ", insertable = false, updatable = false)
	@ManyToOne(fetch = FetchType.LAZY)
	public MptTratamentoTerapeutico getTratamentoTerapeutico() {
		return tratamentoTerapeutico;
	}

	public void setTratamentoTerapeutico(
			MptTratamentoTerapeutico tratamentoTerapeutico) {
		this.tratamentoTerapeutico = tratamentoTerapeutico;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<MptTratamentoTerapeutico> getTratamentoTerapeuticoAtdSeq() {
		return tratamentoTerapeuticoAtdSeq;
	}

	public void setTratamentoTerapeuticoAtdSeq(
			Set<MptTratamentoTerapeutico> tratamentoTerapeuticoAtdSeq) {
		this.tratamentoTerapeuticoAtdSeq = tratamentoTerapeuticoAtdSeq;
	}

	@Column(name = "TPT_SEQ", precision = 6, scale = 0)
	public Integer getTptSeq() {
		return this.tptSeq;
	}

	public void setTptSeq(Integer tptSeq) {
		this.tptSeq = tptSeq;
	}

	@Column(name = "IND_ACESSO_VASCULAR", length = 1)
	@Length(max = 1)
	public String getIndAcessoVascular() {
		return this.indAcessoVascular;
	}

	public void setIndAcessoVascular(String indAcessoVascular) {
		this.indAcessoVascular = indAcessoVascular;
	}

	@Column(name = "IND_PAC_CPA", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndPacCpa() {
		return this.indPacCpa;
	}

	public void setIndPacCpa(Boolean indPacCpa) {
		this.indPacCpa = indPacCpa;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<MpmMotivoIngressoCti> getMpmMotivoIngressoCti() {
		return this.mpmMotivoIngressoCti;
	}
	
	public void setMpmMotivoIngressoCti(
			Set<MpmMotivoIngressoCti> mpmMotivoIngressoCti) {
		this.mpmMotivoIngressoCti = mpmMotivoIngressoCti;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<MpmPrescricaoMedica> getMpmPrescricaoMedicases() {
		return this.mpmPrescricaoMedicases;
	}

	public void setMpmPrescricaoMedicases(
			Set<MpmPrescricaoMedica> mpmPrescricaoMedicases) {
		this.mpmPrescricaoMedicases = mpmPrescricaoMedicases;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<EpePrescricaoEnfermagem> getPrescricoesEnfermagem() {
		return prescricoesEnfermagem;
	}
	
	public void setPrescricoesEnfermagem(Set<EpePrescricaoEnfermagem> prescricoesEnfermagem) {
		this.prescricoesEnfermagem = prescricoesEnfermagem;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<MpmCidAtendimento> getCidAtendimentos() {
		return this.cidAtendimentos;
	}

	public void setCidAtendimentos(Set<MpmCidAtendimento> cidAtendimentos) {
		this.cidAtendimentos = cidAtendimentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aghAtendimento")
	public Set<MpmSumarioAlta> getSumariosAlta() {
		return this.sumariosAlta;
	}

	public void setSumariosAlta(Set<MpmSumarioAlta> sumariosAlta) {
		this.sumariosAlta = sumariosAlta;
	}

	/**
	 * @return the paciente
	 * 
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", referencedColumnName = "CODIGO", nullable = false)
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	/**
	 * @param paciente
	 *            the paciente to set
	 */
	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false)
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return this.unidadeFuncional;
	}

	public void setUnidadeFuncional(AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "UNF_SEQ", referencedColumnName = "SEQ",  nullable = false, insertable = false, updatable = false)
//	public VAghUnidFuncional getvUnidadeFuncional() {
//		return vUnidadeFuncional;
//	}
//
//	public void setvUnidadeFuncional(VAghUnidFuncional vUnidadeFuncional) {
//		this.vUnidadeFuncional = vUnidadeFuncional;
//	}

	@Column(name = "GSO_PAC_CODIGO", precision = 6, scale = 0)
	public Integer getGsoPacCodigo() {
		return gsoPacCodigo;
	}

	public void setGsoPacCodigo(Integer gsoPacCodigo) {
		this.gsoPacCodigo = gsoPacCodigo;
	}

	@Column(name = "GSO_SEQP", precision = 6, scale = 0)
	public Short getGsoSeqp() {
		return gsoSeqp;
	}

	public void setGsoSeqp(Short gsoSeqp) {
		this.gsoSeqp = gsoSeqp;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	@OrderBy("seq")
	public List<SceReqMaterial> getRequisicoesMaterial() {
		return this.requisisoesMaterial;
	}

	public void setRequisicoesMaterial(List<SceReqMaterial> requisisoesMaterial) {
		this.requisisoesMaterial = requisisoesMaterial;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public List<MpmControlPrevAltas> getControlPrevAltas() {
		return this.controlPrevAltas;
	}

	public void setControlPrevAltas(List<MpmControlPrevAltas> controlPrevAltas) {
		this.controlPrevAltas = controlPrevAltas;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	// @JoinColumn(name = "APA_ATD_SEQ", insertable = false, updatable = false)
	public List<MpmAltaSumario> getAltasSumario() {
		return this.altasSumario;
	}

	public void setAltasSumario(List<MpmAltaSumario> altasSumario) {
		this.altasSumario = altasSumario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_NUMERO")
	public AacConsultas getConsulta() {
		return this.consulta;
	}

	public void setConsulta(AacConsultas consulta) {
		this.consulta = consulta;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<AacConsultas> getConsultas() {
		return this.consultas;
	}

	public void setConsultas(Set<AacConsultas> consultas) {
		this.consultas = consultas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<MbcCirurgias> getCirurgias() {
		return this.cirurgias;
	}

	public void setCirurgias(Set<MbcCirurgias> cirurgias) {
		this.cirurgias = cirurgias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<MpmPim2> getPims2() {
		return pims2;
	}

	public void setPims2(Set<MpmPim2> pims2) {
		this.pims2 = pims2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<AelSolicitacaoExames> getAelSolicitacaoExames() {
		return this.aelSolicitacaoExames;
	}

	public void setAelSolicitacaoExames(
			Set<AelSolicitacaoExames> aelSolicitacaoExames) {
		this.aelSolicitacaoExames = aelSolicitacaoExames;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<AelSolicitacaoExamesHist> getAelSolicitacaoExamesHist() {
		return this.aelSolicitacaoExamesHist;
	}

	public void setAelSolicitacaoExamesHist(
			Set<AelSolicitacaoExamesHist> aelSolicitacaoExamesHist) {
		this.aelSolicitacaoExamesHist = aelSolicitacaoExamesHist;
	}
	

	// Inclui cascade delete pois não há triggers de delete na tabela de
	// AacAtendimentoApacs. por Geraldo Maciel em 20/05/2011
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<AacAtendimentoApacs> getAtendimentosApac() {
		return atendimentosApac;
	}

	public void setAtendimentosApac(Set<AacAtendimentoApacs> atendimentosApac) {
		this.atendimentosApac = atendimentosApac;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public List<AghAtendimentoPacientes> getAghAtendimentoPacientes() {
		return aghAtendimentoPacientes;
	}
	
	public void setAghAtendimentoPacientes(List<AghAtendimentoPacientes> aghAtendimentoPacientes){
		this.aghAtendimentoPacientes = aghAtendimentoPacientes;
	}

	/**
	 * Busca uma PrescricaoMedica associada ao Atendimento<br>
	 * que possua data de inicio <b>dthrInicio</b><br>
	 * igual ao inicio do tratamento <b>dthrInicioTratamento</b><br>
	 * informada no parametro.<br>
	 * Se o parametro for null retorna null.
	 * 
	 * @param dthrInicioTratamento
	 * @return
	 */
	@Transient
	public MpmPrescricaoMedica getPrescricaoMedicaInicioAtendimento(
			Date dthrInicioTratamento) {
		MpmPrescricaoMedica p = null;
		if (dthrInicioTratamento != null) {
			for (MpmPrescricaoMedica prescricaoMedica : this
					.getMpmPrescricaoMedicases()) {
				if (DateValidator.validarMesmoDia(prescricaoMedica.getDthrInicio(),
						dthrInicioTratamento)) {
					p = prescricaoMedica;
					break;
				}
			}
		}
		return p;
	}

	@Transient
	public MpmPrescricaoMedica getPrescricaoMedicaMenorAtendimento(
			Date dataAtendimento) {
		if (dataAtendimento == null) {
			return null;
		}
		for (MpmPrescricaoMedica prescricaoMedica : this
				.getMpmPrescricaoMedicases()) {
			if (DateValidator.validaDataMenor(
					DateUtil.truncaData(prescricaoMedica.getDtReferencia()),
					dataAtendimento)) {
				return prescricaoMedica;
			}
		}
		return null;
	}

	/**
	 * Retorna descrição para a localização.<br>
	 * Retorna uma descrição de acordo com os argumentos fornecidos.
	 * 
	 * @see ListaPacientesInternadosON.getDescricaoLocalizacao(AinLeitos leito,
	 *      AinQuartos quarto,AghUnidadesFuncionais unidade)
	 * @return
	 */
	@Transient
	@SuppressWarnings({"PMD.NPathComplexity"})
	public String getDescricaoLocalizacao(boolean descCompleta) {
		if (getLeito() == null && getQuarto() == null
				&& getUnidadeFuncional() == null) {
			throw new IllegalArgumentException(
					"Pelo menos uma das associacoes deveria existir. (AinLeitos, AinQuartos ou AghUnidadesFuncionais)");
		}

		if (getLeito() != null) {
			return String.format("L:%s", getLeito().getLeitoID());
		}
		if (getQuarto() != null) {
			return String.format("Q:%s", getQuarto().getDescricao());
		}

		String string = String.format("%s %s - %s", getUnidadeFuncional().getAndar() != null ? getUnidadeFuncional().getAndar() : "", 
									                getUnidadeFuncional().getIndAla() != null ? getUnidadeFuncional().getIndAla() : "", 
									                getUnidadeFuncional().getDescricao() != null ? getUnidadeFuncional().getDescricao() : "");

		if (descCompleta){
			return string;
		} else {
		   return StringUtils.substring(string, 0, 8);
		}
	}
	
	/**
	 * ORADB function AINC_LOCAL_INT
	 */
	@Transient
	public String getAincLocalInt() {
		
		String string;
		if (getLeito() != null) {
			return String.format(getLeito().getLeitoID());
		}else{
			if (getQuarto() != null) {
				return String.format("Q:%s", getQuarto().getDescricao());
			}else{
				
				if (getUnidadeFuncional() != null){
				
					string = String.format("U:%s %s", 
							getUnidadeFuncional().getAndar() != null ? getUnidadeFuncional().getAndar() : "", 
							getUnidadeFuncional().getIndAla() != null ? getUnidadeFuncional().getIndAla() : ""); 
							//getUnidadeFuncional().getSigla() != null ? getUnidadeFuncional().getSigla() : "");
				}else{
					string = "__________";
				}
			}
		}	
		
		return string;
	}

	/**
	 * ORADB Package aelk_ael_rn.rn_aelp_busca_conv nao esta exatamente igual.
	 * Mas faz a mesma regra. ORADB function AELC_GET_CONVENIO nao esta
	 * exatamente igual. Mas faz a mesma regra.
	 * 
	 * @return
	 */
	@Transient
	public FatConvenioSaudePlano getConvenioSaudePlano() {
		FatConvenioSaudePlano convSaudePlano = null;
		
		/*
		 * 
		 * ATENÇÃO: NÃO UTILIZAR ESTE MÉTODO!
		 * CORRETO: UTILIZAR O MÉTODO +obterConvenioSaudePlanoAtendimento(seq : Integer) : FatConvenioSaudePlano em br.gov.mec.aghu.paciente.business.AtendimentosRN
		 * 
		 */
		
		if (DominioOrigemAtendimento.N == this.getOrigem()) {
			// Qdo o paciente for um RN(Recém Nascido), buscar o convênio da mãe
			// para popular o campo convênio.
			//McoGestacoes atdMae = this.getMcoGestacoes();
					
			if (this.getAtendimentoMae() != null) {
				
				convSaudePlano = this.obterFatConvenioSaudePlano(this.getAtendimentoMae());
				
			}
			
		} else {
			
			convSaudePlano = this.obterFatConvenioSaudePlano(this);
			
		}
		
		/*
		 * Pra visualizar os dados da navegacao atendimento -> gestacao ->
		 * atendimento. select atd.seq, atd.dthr_inicio, gestacao.pac_codigo,
		 * gestacao.seqp, atdo.seq gso_atd_seq, atdo.pac_codigo gso_pac_codigo
		 * from agh.agh_atendimentos atd inner join agh.mco_gestacoes gestacao
		 * on gestacao.pac_codigo = atd.gso_pac_codigo and gestacao.seqp =
		 * atd.gso_seqp left outer join agh.agh_atendimentos atdo on
		 * atdo.gso_pac_codigo = gestacao.pac_codigo AND atdo.gso_seqp =
		 * gestacao.seqp --AND pac_codigo = gso_pac_codigo; where atd.seq in
		 * (9288185, 742469, 1765986, 2062732, 2117581, 2109945, 2117634) order
		 * by dthr_inicio desc
		 */
		return convSaudePlano;
	}

	@Transient
	private FatConvenioSaudePlano obterFatConvenioSaudePlano(AghAtendimentos atd) {
		
		/*
		 * 
		 * ATENÇÃO: NÃO UTILIZAR ESTE MÉTODO! 
		 * CORRETO: UTILIZAR O MÉTODO -obterFatConvenioSaudePlano(atd : AghAtendimentos) : FatConvenioSaudePlano em br.gov.mec.aghu.paciente.business.AtendimentosRN
		 * 
		 */
		
		FatConvenioSaudePlano convenioPlano = null;

		if (DominioOrigemAtendimento.I == atd.getOrigem()
				&& atd.getInternacao() != null) {
			convenioPlano = atd.getInternacao().getConvenioSaudePlano();
		}

		if (DominioOrigemAtendimento.U == atd.getOrigem()
				&& atd.getAtendimentoUrgencia() != null) {
			convenioPlano = atd.getAtendimentoUrgencia()
					.getConvenioSaudePlano();
		}

		if (DominioOrigemAtendimento.H == atd.getOrigem()
				&& atd.getHospitalDia() != null) {
			convenioPlano = atd.getHospitalDia().getConvenioSaudePlano();
		}

		if (DominioOrigemAtendimento.X == atd.getOrigem()
				&& atd.getAtendimentoPacienteExterno() != null) {
			convenioPlano = atd.getAtendimentoPacienteExterno()
					.getConvenioSaudePlano();
		}

		if (DominioOrigemAtendimento.A == atd.getOrigem()
				&& atd.getConsulta() != null) {
			convenioPlano = atd.getConsulta().getConvenioSaudePlano();
		}

		if (DominioOrigemAtendimento.C == atd.getOrigem()
				&& atd.getCirurgias() != null && !atd.getCirurgias().isEmpty()) {
			Iterator<MbcCirurgias> it = atd.getCirurgias().iterator();
			convenioPlano = it.next().getConvenioSaudePlano();
		}

		return convenioPlano;
	}

	@Transient
	public Date getDthrInicioTruncada() {
		return DateUtil.truncaData(this.getDthrInicio());
	}
	
	@Transient
	public AghEspecialidades getEspecialidadeAtendimento() {
		if(this.getEspecialidade() != null && this.getEspecialidade().getEspecialidade() != null) {
			return this.getEspecialidade().getEspecialidade();
		}
		else {
			return this.getEspecialidade();
		}
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarAtendimento() {
		if (this.indResultadoNaoConsultado == null) {
			this.indResultadoNaoConsultado = false;
		}

		if (this.indPacPediatrico == null) {
			this.indPacPediatrico = false;
		}

		if (this.indPacPrematuro == null) {
			this.indPacPrematuro = false;
		}

		if (this.indPacAtendimento == null) {
			this.indPacAtendimento = DominioPacAtendimento.S;
		}
	}

	public enum Fields {
	    SEQUENCE("seq")
		, SEQ("seq") // Optei por duplicar o field pois o refactory para mudar seria muito grande para ser
					 // executado na 4.0, o ideal seria sempre usar o padrão NOME FIELD == NOME_COLUNA_DATABASE.
					 // Necessario pois se usa Field.name QUE DEVE RETORNAR SEQ E NÃO SEQUENCE.
		, ORIGEM("origem")
		, COD_PACIENTE("paciente.codigo")
		, PACIENTE("paciente")
		, CODIGO_PACIENTE("paciente.codigo")
		, PRONTUARIO_PACIENTE("paciente.prontuario")
		, PAC_CODIGO("paciente.codigo")
		, DATA_HORA_INICIO("dthrInicio")
		, INTERNACAO("internacao")
		, ATENDIMENTO_URGENCIA("atendimentoUrgencia")
		, CONSULTA("consulta")
		, CON_NUMERO("consulta.numero")
		, CIRURGIAS("cirurgias")
		, NUMERO_CONSULTA("consulta.numero")
//		, MCO_GESTACOES("mcoGestacoes")
		, DTHR_INICIO("dthrInicio")
		, DTHR_FIM("dthrFim")
		, IND_PAC_ATENDIMENTO("indPacAtendimento")
		, UNIDADE_FUNCIONAL("unidadeFuncional")
		, UNF_SEQ("unidadeFuncional.seq")
		, UNF_CARACTERISTICA("caracteristicas")
		, INT_SEQ("internacao.seq")
		, ATU_SEQ("atendimentoUrgencia.seq")
		, LTO_LTO_ID("leito.leitoID")
		, LTO_LTO("leito")
		, HOD_SEQ("hospitalDia.seq")
		, HOD("hospitalDia")
		, QUARTO("quarto")
		, QRT_NUMERO("quarto.numero")
		, PRONTUARIO("prontuario")
		, SERVIDOR("servidor")
		, SER_MATRICULA("servidor.id.matricula")
		, SER_VIN_CODIGO("servidor.id.vinCodigo")
		, ESPECIALIDADE("especialidade")
		, HOSPITAL_DIA("hospitalDia")
		, HOSPITAL_DIA_SEQ("hospitalDia.seq")
		, DTHR_INGRESSO_UNIDADE("dthrIngressoUnidade")
		, GSO_PAC_CODIGO("gsoPacCodigo")
		, GSO_SEQP("gsoSeqp")
		, ATD_SEQ_MAE("atendimentoMae")
		, SOLICITACAO_EXAMES("aelSolicitacaoExames")
		, SOLICITACAO_EXAMES_HIST("aelSolicitacaoExamesHist")		
		, IND_TIPO_TRATAMENTO("indTipoTratamento")
		, ALTA_SUMARIO("altasSumario")
		, IND_SIT_SUMARIO_ALTA("indSitSumarioAlta")
		, IND_PAC_CPA("indPacCpa")
		, LEITO("leito"), TRP_SEQ("trpSeq")
		, TRATAMENTO_TERAPEUTICO("tratamentoTerapeutico")
		, TRATAMENTO_TERAPEUTICO_ATD_SEQ("tratamentoTerapeuticoAtdSeq")
		//, GESTACAO("mcoGestacoes")
		, SERVIDOR_MOVIMENTO("servidorMovimento")
		, IND_PAC_PEDIATRICO("indPacPediatrico")
		, IND_PAC_PREMATURO("indPacPrematuro")//   
		, DTHR_ULT_IMPR_SUMR_PRESCR("dthrUltImprSumrPrescr")// 
		, TIPO_LAMINA_LARINGO("tipoLaminaLaringo")
		, CTRLSUMRALTAPENDENTE("ctrlSumrAltaPendente")
		, ATENDIMENTOS_APAC("atendimentosApac")
		, PRESCRICOES_MEDICAS("mpmPrescricaoMedicases")
		, PRESCRICOES_ENFERMAGEM("prescricoesEnfermagem")
		, ATENDIMENTO_PACIENTE_EXTERNO("atendimentoPacienteExterno")
		, APE_SEQ("atendimentoPacienteExterno.seq")
		, DCA_BOL_NUMERO("dcaBolNumero")
		, ESPECIALIDADE_SEQ("especialidade.seq")
		, LOCALIZA_PACIENTES("localizaPacientes")
		, TIPO_TRATAMENTO("tptSeq")
		, MPT_PRESCRICAO_PACIENTES("prescricaoPacientes")
		, SIG_CALCULO_ATD_PACIENTE("listaSigCalculoAtdPaciente")
		, PROFISSIONAL_ESPECIALIDADE("profissionalEspecialidade")
		, CID_ATENDIMENTOS("cidAtendimentos")
		, PIM2("pims2")
		, CONTROLE_PREVIA_ALTAS("controlPrevAltas")
		, MPM_MOTIVO_INGRESSO_CTI("mpmMotivoIngressoCti")
		,AGH_ATENDIMENTO_PACIENTES("aghAtendimentoPacientes")
		, V_UNIDADE_FUNCIONAL("vUnidadeFuncional")
		, PAC_COD("pacCodigo")
		, INTSEQ("intSeq")
	    , LISTA_MPT_PROCED_INTERNACAO("listaMptProcedimentoInternacao")
	    ,PESCRICAO_CICLO("prescricaoCiclo");
	    

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

    @Override
	public int hashCode() {
		return new HashCodeBuilder().append(this.seq).toHashCode();
	}

	@Override
	public boolean equals(Object other) {
		if (!(other instanceof AghAtendimentos)) {
			return false;
		}
		AghAtendimentos castOther = (AghAtendimentos) other;
		return new EqualsBuilder().append(this.seq, castOther.getSeq())
				.isEquals();
	}

	@Override
	public String toString() {
		return new ToStringBuilder(this).append("seq", this.seq).toString();
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "APE_SEQ")
	public AghAtendimentosPacExtern getAtendimentoPacienteExterno() {
		return this.atendimentoPacienteExterno;
	}

	public void setAtendimentoPacienteExterno(
			AghAtendimentosPacExtern atendimentoPacienteExterno) {
		this.atendimentoPacienteExterno = atendimentoPacienteExterno;
	}

	@JoinColumn(name = "ATD_SEQ_MAE", referencedColumnName = "SEQ")
	@ManyToOne(fetch = FetchType.LAZY)
	public AghAtendimentos getAtendimentoMae() {
		return atendimentoMae;
	}

	public void setAtendimentoMae(AghAtendimentos atendimentoMae) {
		this.atendimentoMae = atendimentoMae;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento", cascade = { CascadeType.REMOVE })
	public Set<AipLocalizaPaciente> getLocalizaPacientes() {
		return localizaPacientes;
	}

	public void setLocalizaPacientes(Set<AipLocalizaPaciente> localizaPacientes) {
		this.localizaPacientes = localizaPacientes;
	}

	@Transient
	public Boolean getControleAtd() {
		return controleAtd;
	}

	public void setControleAtd(Boolean controleAtd) {
		this.controleAtd = controleAtd;
	}	
	
/*
 * Esta associacao nao deve ser mapeada, pois:
 * - Nao eh uma associacao valida entre entidades;
 * - esta causando problemas de performance.
 * Buscas que usavam este relacionamento devem usar a navegacao: mcoRecemNascidos-aipPacientes-aghAtendimentos.
 * Ou fazer a Query filtrando direto pela PK do AipPaciente para fazer o Join entre mcoRecemNascidos-aghAtendimentos.
 */
//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "PAC_CODIGO", referencedColumnName = "PAC_CODIGO", nullable = false, insertable = false, updatable = false)
//	public McoRecemNascidos getMcoRecemNascidos() {
//		return this.mcoRecemNascidos;
//	}
//	
//	public void setMcoRecemNascidos(McoRecemNascidos mcoRecemNascidos) {
//		this.mcoRecemNascidos = mcoRecemNascidos;
//	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<MptPrescricaoPaciente> getPrescricaoPacientes() {
		return prescricaoPacientes;
	}

	public void setPrescricaoPacientes(
			Set<MptPrescricaoPaciente> prescricaoPacientes) {
		this.prescricaoPacientes = prescricaoPacientes;
	}
	
	@Transient
	public List<MamAltaSumario> getMamAltasSumarios() {
		return mamAltasSumarios;
	}

	public void setMamAltasSumarios(List<MamAltaSumario> mamAltasSumarios) {
		this.mamAltasSumarios = mamAltasSumarios;
	}

	public void setListaSigCalculoAtdPaciente(Set<SigCalculoAtdPaciente> listaSigCalculoAtdPaciente) {
		this.listaSigCalculoAtdPaciente = listaSigCalculoAtdPaciente;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<SigCalculoAtdPaciente> getListaSigCalculoAtdPaciente() {
		return listaSigCalculoAtdPaciente;
	}
	
	@Column(name="PAC_CODIGO", insertable=false, updatable=false)
	public Integer getPacCodigo() {
		return pacCodigo;
	}

	public void setPacCodigo(Integer pacCodigo) {
		this.pacCodigo = pacCodigo;
	}

	@Column(name = "INT_SEQ", nullable = false, precision = 8, scale = 0, insertable = false, updatable = false)
	public Integer getIntSeq() {
		return intSeq;
}

	public void setIntSeq(Integer intSeq) {
		this.intSeq = intSeq;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimento")
	public Set<MptProcedimentoInternacao> getListaMptProcedimentoInternacao() {
		return listaMptProcedimentoInternacao;
	}

	public void setListaMptProcedimentoInternacao(Set<MptProcedimentoInternacao> listaMptProcedimentoInternacao) {
		this.listaMptProcedimentoInternacao = listaMptProcedimentoInternacao;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aghAtendimentos")
	public Set<MptPrescricaoCiclo> getPrescricaoCiclo() {
		return prescricaoCiclo;
	}

	public void setPrescricaoCiclo(Set<MptPrescricaoCiclo> prescricaoCiclo) {
		this.prescricaoCiclo = prescricaoCiclo;
	}
	
}
