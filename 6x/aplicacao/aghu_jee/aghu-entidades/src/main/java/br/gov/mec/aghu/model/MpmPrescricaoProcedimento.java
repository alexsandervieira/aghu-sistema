package br.gov.mec.aghu.model;

// Generated 10/08/2010 17:33:16 by Hibernate Tools 3.3.0.GA

import java.util.Date;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.apache.commons.lang3.StringUtils;

import br.gov.mec.aghu.dominio.DominioIndPendenteItemPrescricao;
import br.gov.mec.aghu.core.commons.CoreUtil;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;

/**
 * MpmPrescricaoProcedimento generated by hbm2java
 */
@Entity
@Table(name = "MPM_PRESCRICAO_PROCEDIMENTOS", schema = "AGH")

public class MpmPrescricaoProcedimento extends ItemPrescricaoMedica<MpmPrescricaoProcedimentoId> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6369494703942792417L;
	private MpmPrescricaoProcedimentoId id;
	private RapServidores servidor;
	private MpmPrescricaoProcedimento prescricaoProcedimento;
	private MbcProcedimentoCirurgicos procedimentoCirurgico;
	private ScoMaterial matCodigo;
	private MpmProcedEspecialDiversos procedimentoEspecialDiverso;
	private Date dthrInicio;
	private String justificativa;
	private Short quantidade;
	private String informacaoComplementar;
	private Boolean digitacaoSolicitante;
	private Short duracaoTratamentoSolicitado;
	private Integer version;
	private Set<FatItemContaHospitalar> itensContasHospitalares = new HashSet<FatItemContaHospitalar>(0);
	private Set<MpmPrescricaoProcedimento> prescricoesProcedimentos = new HashSet<MpmPrescricaoProcedimento>(0);
	private Set<MpmLaudo> laudos = new HashSet<MpmLaudo>(0);
	private List<MpmModoUsoPrescProced> modoUsoPrescricaoProcedimentos = new LinkedList<MpmModoUsoPrescProced>();
	private Integer pprAtdSeqPrcrAnt;
	private Long pprSeqPrcrAnt;
	private Integer ordem;
	
	public MpmPrescricaoProcedimento() {
	}

	public MpmPrescricaoProcedimento(MpmPrescricaoProcedimentoId id,
			RapServidores servidor, Date dthrInicio, DominioIndPendenteItemPrescricao pendente,
			Date criadoEm) {
		this.id = id;
		this.servidor = servidor;
		this.dthrInicio = dthrInicio;
		this.indPendente = pendente;
		this.criadoEm = criadoEm;
	}

	public MpmPrescricaoProcedimento(MpmPrescricaoProcedimentoId id,
			RapServidores servidorMovimentoValido, RapServidores servidor,
			MpmPrescricaoProcedimento prescricaoProcedimento,
			RapServidores servidorValido,
			RapServidores servidorMovimentado, MbcProcedimentoCirurgicos procedimentoCirurgico,
			ScoMaterial matCodigo, MpmProcedEspecialDiversos procedimentoEspecialDiverso, Date dthrInicio,
			DominioIndPendenteItemPrescricao pendente, Date criadoEm,
			String justificativa, Date dthrFim, Short quantidade,
			String informacaoComplementar, Date alteradoEm,
			Boolean digitacaoSolicitante, Short duracaoTratamentoSolicitado,
			Set<FatItemContaHospitalar> itensContasHospitalares,
			Set<MpmPrescricaoProcedimento> prescricoesProcedimentos,
			Set<MpmLaudo> laudos) {
		this.id = id;
		this.servidorValidaMovimentacao= servidorMovimentoValido;
		this.servidor = servidor;
		this.prescricaoProcedimento = prescricaoProcedimento;
		this.servidorValidacao = servidorValido;
		this.servidorMovimentado = servidorMovimentado;
		this.procedimentoCirurgico = procedimentoCirurgico;
		this.matCodigo = matCodigo;
		this.procedimentoEspecialDiverso = procedimentoEspecialDiverso;
		this.dthrInicio = dthrInicio;
		this.indPendente = pendente;
		this.criadoEm = criadoEm;
		this.justificativa = justificativa;
		this.dthrFim = dthrFim;
		this.quantidade = quantidade;
		this.informacaoComplementar = informacaoComplementar;
		this.alteradoEm = alteradoEm;
		this.digitacaoSolicitante = digitacaoSolicitante;
		this.duracaoTratamentoSolicitado = duracaoTratamentoSolicitado;
		this.itensContasHospitalares = itensContasHospitalares;
		this.prescricoesProcedimentos = prescricoesProcedimentos;
		this.laudos = laudos;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "atdSeq", column = @Column(name = "ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 8, scale = 0)) })
	public MpmPrescricaoProcedimentoId getId() {
		return this.id;
	}

	public void setId(MpmPrescricaoProcedimentoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PPR_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PPR_SEQ", referencedColumnName = "SEQ") })
	public MpmPrescricaoProcedimento getPrescricaoProcedimento() {
		return this.prescricaoProcedimento;
	}

	public void setPrescricaoProcedimento(
			MpmPrescricaoProcedimento prescricaoProcedimento) {
		this.prescricaoProcedimento = prescricaoProcedimento;
	}





	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PCI_SEQ", nullable = true)	
	public MbcProcedimentoCirurgicos getProcedimentoCirurgico() {
		return this.procedimentoCirurgico;
	}

	public void setProcedimentoCirurgico(MbcProcedimentoCirurgicos procedimentoCirurgico) {
		this.procedimentoCirurgico = procedimentoCirurgico;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MAT_CODIGO", nullable = true)	
	public ScoMaterial getMatCodigo() {
		return this.matCodigo;
	}

	public void setMatCodigo(ScoMaterial matCodigo) {
		this.matCodigo = matCodigo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PED_SEQ", nullable = true)	
	public MpmProcedEspecialDiversos getProcedimentoEspecialDiverso() {
		return this.procedimentoEspecialDiverso;
	}

	public void setProcedimentoEspecialDiverso(MpmProcedEspecialDiversos procedimentoEspecialDiverso) {
		this.procedimentoEspecialDiverso = procedimentoEspecialDiverso;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INICIO", nullable = false, length = 7)
	public Date getDthrInicio() {
		return this.dthrInicio;
	}

	public void setDthrInicio(Date dthrInicio) {
		this.dthrInicio = dthrInicio;
	}

	@Column(name = "JUSTIFICATIVA", length = 240)
	public String getJustificativa() {
		return this.justificativa;
	}

	public void setJustificativa(String justificativa) {
		this.justificativa = justificativa;
	}

	@Column(name = "QUANTIDADE", precision = 4, scale = 0)
	public Short getQuantidade() {
		return this.quantidade;
	}

	public void setQuantidade(Short quantidade) {
		this.quantidade = quantidade;
	}

	@Column(name = "INF_COMPLEMENTARES", length = 240)
	public String getInformacaoComplementar() {
		return this.informacaoComplementar;
	}

	public void setInformacaoComplementar(String informacaoComplementar) {
		this.informacaoComplementar = informacaoComplementar;
	}



	@Column(name = "IND_DIGITACAO_SOLICITANTE", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getDigitacaoSolicitante() {
		return this.digitacaoSolicitante;
	}

	public void setDigitacaoSolicitante(Boolean digitacaoSolicitante) {
		this.digitacaoSolicitante = digitacaoSolicitante;
	}

	@Column(name = "DURACAO_TRAT_SOLICITADO", precision = 3, scale = 0)
	public Short getDuracaoTratamentoSolicitado() {
		return this.duracaoTratamentoSolicitado;
	}

	public void setDuracaoTratamentoSolicitado(Short duracaoTratamentoSolicitado) {
		this.duracaoTratamentoSolicitado = duracaoTratamentoSolicitado;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prescricaoProcedimento")
	public Set<FatItemContaHospitalar> getItensContasHospitalares() {
		return this.itensContasHospitalares;
	}

	public void setItensContasHospitalares(
			Set<FatItemContaHospitalar> itensContasHospitalares) {
		this.itensContasHospitalares = itensContasHospitalares;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prescricaoProcedimento")
	public Set<MpmPrescricaoProcedimento> getPrescricoesProcedimentos() {
		return this.prescricoesProcedimentos;
	}

	public void setPrescricoesProcedimentos(
			Set<MpmPrescricaoProcedimento> prescricoesProcedimentos) {
		this.prescricoesProcedimentos = prescricoesProcedimentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prescricaoProcedimento")
	public Set<MpmLaudo> getLaudos() {
		return this.laudos;
	}

	public void setLaudos(Set<MpmLaudo> laudos) {
		this.laudos = laudos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy="prescricaoProcedimento")
	public List<MpmModoUsoPrescProced> getModoUsoPrescricaoProcedimentos() {
		return this.modoUsoPrescricaoProcedimentos;
	}
	
	public void setModoUsoPrescricaoProcedimentos(
			List<MpmModoUsoPrescProced> modoUsoPrescricaoProcedimentos) {
		this.modoUsoPrescricaoProcedimentos = modoUsoPrescricaoProcedimentos;
	}
	
	@Column(name = "PPR_ATD_SEQ_PRCR_ANT", length = 9)
	public Integer getPprAtdSeqPrcrAnt() {
		return pprAtdSeqPrcrAnt;
	}

	public void setPprAtdSeqPrcrAnt(Integer pprAtdSeqPrcrAnt) {
		this.pprAtdSeqPrcrAnt = pprAtdSeqPrcrAnt;
	}
	
	@Column(name = "PPR_SEQ_PRCR_ANT", length = 14)
	public Long getPprSeqPrcrAnt() {
		return pprSeqPrcrAnt;
	}

	public void setPprSeqPrcrAnt(Long pprSeqPrcrAnt) {
		this.pprSeqPrcrAnt = pprSeqPrcrAnt;
	}
	
	@Column(name = "ORDEM", nullable = false)
	public Integer getOrdem() {
		return this.ordem;
	}
	public void setOrdem(Integer ordem) {
		this.ordem = ordem;
	}

	public enum Fields {
			ID("id"), 
			ATD_SEQ("id.atdSeq"), 
			SEQ("id.seq"),
			SERVIDOR("servidor"),
			PED_SEQ("procedimentoEspecialDiverso"),
			PCI_SEQ("procedimentoCirurgico"),
			CRIADO_EM("criadoEm"),
			ALTERADO_EM("alteradoEm"),
			DTHR_INICIO("dthrInicio"),
			DTHR_FIM("dthrFim"),
			IND_PENDENTE("indPendente"),
			QUANTIDADE("quantidade"),
			PRESCRICAOMEDICA("prescricaoMedica"),
			PRESCRICAO_MEDICA("prescricaoMedica.id"),
			PME_SEQ("prescricaoMedica.id.seq"),
			PME_ATD_SEQ("prescricaoMedica.id.atdSeq"),
			MAT_CODIGO("matCodigo.codigo"),
			MATERIAL("matCodigo"),
			PCI_SEQ_SEQ("procedimentoCirurgico.seq"),
			PED_SEQ_SEQ("procedimentoEspecialDiverso.seq"),
			PCI_SEQ_DESCRICAO("procedimentoCirurgico.descricao"),
			PED_SEQ_DESCRICAO("procedimentoEspecialDiverso.descricao"),
			MATERIAL_NOME("matCodigo.nome"),
			SERVIDOR_VALIDACAO("servidorValidacao"),
			PRESCRICAO_PROCEDIMENTO("prescricaoProcedimento"),
			PRESCRICAO_PROCEDIMENTO_SEQ("prescricaoProcedimento.id.seq"),
			PRESCRICAO_PROCEDIMENTO_ATD_SEQ("prescricaoProcedimento.id.atdSeq")
			, INF_COMPLEMENTARES("informacaoComplementar")
			, DURACAO_TRAT_SOLICITADO("duracaoTratamentoSolicitado")
			, JUSTIFICATIVA("justificativa"),
			SERVIDOR_VALIDACAO_MATRICULA("servidorValidacao.id.matricula"),
			SERVIDOR_VIN_CODIGO("servidor.id.vinCodigo"),
			ORDEM("ordem");
			
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
	

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MpmPrescricaoProcedimento other = (MpmPrescricaoProcedimento) obj;
		if (this.id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!this.id.equals(other.id)) {
			return false;
		}
		return true;
	}

	private enum PrescricaoProcedimentosExceptionCode implements
			BusinessExceptionCode {
		MPM_PPR_CK2, MPM_PPR_CK3, MPM_PPR_CK4
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarConstraints() {

		// dthr_fim is null or dthr_fim >= dthr_inicio
		if (!(this.dthrFim == null || CoreUtil.isMaiorOuIgualDatas(
				this.dthrFim, this.dthrInicio))) {
			throw new BaseRuntimeException(
					PrescricaoProcedimentosExceptionCode.MPM_PPR_CK2);
		}

		// (mat_codigo is null and quantidade is null )
		// or (mat_codigo is not null and quantidade is not null and quantidade
		// > 0)
		boolean condicao1 = this.matCodigo == null && this.quantidade == null;
		boolean condicao2 = this.matCodigo != null && this.quantidade != null
				&& this.quantidade > 0;
		if (!(condicao1 || condicao2)) {
			throw new BaseRuntimeException(
					PrescricaoProcedimentosExceptionCode.MPM_PPR_CK3);
		}

		// (PCI_SEQ IS NOT NULL AND PED_SEQ IS NULL AND MAT_CODIGO IS NULL)
		// OR (PCI_SEQ IS NULL AND PED_SEQ IS NOT NULL AND MAT_CODIGO IS NULL)
		// OR (PCI_SEQ IS NULL AND PED_SEQ IS NULL AND MAT_CODIGO IS NOT NULL)
		condicao1 = this.procedimentoCirurgico != null && this.procedimentoEspecialDiverso == null
				&& this.matCodigo == null;
		condicao2 = this.procedimentoCirurgico == null && this.procedimentoEspecialDiverso != null
				&& this.matCodigo == null;
		boolean condicao3 = this.procedimentoCirurgico == null && this.procedimentoEspecialDiverso == null
				&& this.matCodigo != null;
		if (!(condicao1 || condicao2 || condicao3)) {
			throw new BaseRuntimeException(
					PrescricaoProcedimentosExceptionCode.MPM_PPR_CK4);
		}
	}

	/**
	 * ORADB procedure forms MPMP_POPULA_PROCEDIMENTO  
	 * @see br.gov.mec.aghu.model.interfaces.PrescricaoMedicaDescricao#getDescricaoFormatada()
	 */
	@Override
	@Transient
	public String getDescricaoFormatada() {
		StringBuilder descricao = new StringBuilder("");
		
		if(this.getProcedimentoEspecialDiverso() != null) {
			descricao.append(this.getProcedimentoEspecialDiverso().getDescricao());
		}
		if(this.getProcedimentoCirurgico() != null) {
			descricao.append(' ').append(this.getProcedimentoCirurgico().getDescricao());
		}
		if(this.getMatCodigo() != null) {
			descricao.append(' ').append(this.getMatCodigo().getNome()); 
		}
		descricao.append("; ");
		
		if(this.getQuantidade() != null && this.getQuantidade() > 0) {
			descricao.append(' ').append(this.quantidade.toString());
			if(this.getMatCodigo() != null) {
				descricao.append(' ').append(this.getMatCodigo().getUmdCodigo());
			}
			descricao.append("; ");
		}
		
		// Monta string dos filhos.
		for (MpmModoUsoPrescProced modoUsoProceds : this.getModoUsoPrescricaoProcedimentos()) {
			descricao.append(modoUsoProceds.getDescricaoFormatada());
		}
		
		if (StringUtils.isNotBlank(this.getInformacaoComplementar())) {
			descricao.append("  Inf. Complementares=").append(this.getInformacaoComplementar()).append("; ");
		}
		
		return descricao.toString().trim();
	}

	@Override
	@Transient
	public ItemPrescricaoMedica getAnterior() {
		return this.getPrescricaoProcedimento();
	}
	
	@Transient
	public void addModoUso(MpmModoUsoPrescProced modoUso) {
		if (modoUso != null) {
			modoUso.setId(null);
			modoUso.setPrescricaoProcedimento(this);
			this.getModoUsoPrescricaoProcedimentos().add(modoUso);
		}
	}

	@Override
	public boolean possuiFilhos() {
		return getPrescricoesProcedimentos().size() > 0;
	}
	
	@Transient
	public void removerModoUso(MpmModoUsoPrescProced modoUso) {
		this.getModoUsoPrescricaoProcedimentos().remove(modoUso);
	}
	
}
