package br.gov.mec.aghu.model;

// Generated 08/02/2010 17:25:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSexo;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AghAtendimentoPacientes generated by hbm2java
 */
@Entity
@Table(name = "AGH_ATENDIMENTO_PACIENTES", schema = "AGH", uniqueConstraints = @UniqueConstraint(columnNames = "ATD_SEQ"))
public class AghAtendimentoPacientes extends BaseEntityId<AghAtendimentoPacientesId> implements java.io.Serializable {

	private static final long serialVersionUID = 8036105991340507606L;
	
	private AghAtendimentoPacientesId id;
	private RapServidores servidor;
	private Date criadoEm;
	private Date dtRotinaMedica;
	private Date dtRotinaEnfermagem;
	private String nome;
	private Short numeroRn;
	private Boolean indRn;
	private RapServidores servidorFazParte;
	private AghEspecialidades especialidade;
	private AipPacientes paciente;
	private AinLeitos leito;
	private AinQuartos quarto;
	private AghUnidadesFuncionais unidade;
	private Date dtNascimento;
	private DominioSexo sexo;
	private Date dthrInicio;
	private Date dthrFim;
	private Integer version;
	private Set<MpmAltaSumario> mpmAltaSumarioses = new HashSet<MpmAltaSumario>(0);
	private AghAtendimentos atendimento;
	private FatConvenioSaudePlano convenioSaudePlano;

	public AghAtendimentoPacientes() {
	}

	public AghAtendimentoPacientes(AghAtendimentoPacientesId id,
			RapServidores servidor, Date criadoEm, Short numeroRn,
			Boolean indRn) {
		this.id = id;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
		this.numeroRn = numeroRn;
		this.indRn = indRn;
	}

	public AghAtendimentoPacientes(AghAtendimentoPacientesId id,
			RapServidores servidor, Date criadoEm, String nome,
			Short numeroRn, Boolean indRn, RapServidores servidorFazParte,
			FatConvenioSaudePlano convenioSaudePlano,
			AghEspecialidades especialidade, AipPacientes paciente, AinLeitos leito, AinQuartos quarto,
			AghUnidadesFuncionais unidade, Date dtNascimento, DominioSexo sexo, Date dthrInicio,
			Date dthrFim, Set<MpmAltaSumario> mpmAltaSumarioses) {
		this.id = id;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
		this.nome = nome;
		this.numeroRn = numeroRn;
		this.indRn = indRn;
		this.setServidorFazParte(servidorFazParte);
		this.convenioSaudePlano = convenioSaudePlano;
		this.especialidade = especialidade;
		this.paciente = paciente;
		this.leito = leito;
		this.setQuarto(quarto);
		this.setUnidade(unidade);
		this.dtNascimento = dtNascimento;
		this.sexo = sexo;
		this.dthrInicio = dthrInicio;
		this.dthrFim = dthrFim;
		this.mpmAltaSumarioses = mpmAltaSumarioses;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "atdSeq", column = @Column(name = "ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 8, scale = 0)) })
	public AghAtendimentoPacientesId getId() {
		return this.id;
	}

	public void setId(AghAtendimentoPacientesId id) {
		this.id = id;
	}

	/**
	 * Professor respons√°vel.
	 * 
	 * @return
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_ROTINA_MEDICA", nullable = true, length = 7)
	public Date getDtRotinaMedica() {
		return dtRotinaMedica;
	}

	public void setDtRotinaMedica(Date dtRotinaMedica) {
		this.dtRotinaMedica = dtRotinaMedica;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_ROTINA_ENFERMAGEM", nullable = true, length = 7)
	public Date getDtRotinaEnfermagem() {
		return dtRotinaEnfermagem;
	}

	public void setDtRotinaEnfermagem(Date dtRotinaEnfermagem) {
		this.dtRotinaEnfermagem = dtRotinaEnfermagem;
	}

	@Column(name = "NOME", length = 50)
	@Length(max = 50)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "NUMERO_RN", nullable = false, precision = 2, scale = 0)
	public Short getNumeroRn() {
		return this.numeroRn;
	}

	public void setNumeroRn(Short numeroRn) {
		this.numeroRn = numeroRn;
	}

	@Column(name = "IND_RN", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndRn() {
		return this.indRn;
	}

	public void setIndRn(Boolean indRn) {
		this.indRn = indRn;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", referencedColumnName = "CODIGO")
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_NASCIMENTO", length = 7)
	public Date getDtNascimento() {
		return this.dtNascimento;
	}

	public void setDtNascimento(Date dtNascimento) {
		this.dtNascimento = dtNascimento;
	}

	@Column(name = "SEXO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSexo getSexo() {
		return this.sexo;
	}

	public void setSexo(DominioSexo sexo) {
		this.sexo = sexo;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTHR_INICIO", length = 7)
	public Date getDthrInicio() {
		return this.dthrInicio;
	}

	public void setDthrInicio(Date dthrInicio) {
		this.dthrInicio = dthrInicio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTHR_FIM", length = 7)
	public Date getDthrFim() {
		return this.dthrFim;
	}

	public void setDthrFim(Date dthrFim) {
		this.dthrFim = dthrFim;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimentoPaciente")
	public Set<MpmAltaSumario> getMpmAltaSumarioses() {
		return this.mpmAltaSumarioses;
	}

	public void setMpmAltaSumarioses(Set<MpmAltaSumario> mpmAltaSumarioses) {
		this.mpmAltaSumarioses = mpmAltaSumarioses;
	}

	public enum Fields {
		COD_PACIENTE("paciente.codigo"),
		ATENDIMENTO_SEQ("id.atdSeq"),
		SEQ("id.seq"),
		ATENDIMENTO("atendimento")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AghAtendimentoPacientes)) {
			return false;
		}
		AghAtendimentoPacientes other = (AghAtendimentoPacientes) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ", referencedColumnName = "SEQ", updatable=false, insertable=false)
	public AghAtendimentos getAtendimento() {
		return atendimento;
	}

	public void setConvenioSaudePlano(FatConvenioSaudePlano convenioSaudePlano) {
		this.convenioSaudePlano = convenioSaudePlano;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "csp_cnv_codigo", referencedColumnName = "cnv_codigo"),
			@JoinColumn(name = "csp_seq", referencedColumnName = "seq") })
	public FatConvenioSaudePlano getConvenioSaudePlano() {
		return convenioSaudePlano;
	}

	public void setEspecialidade(AghEspecialidades especialidade) {
		this.especialidade = especialidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "esp_seq", referencedColumnName = "seq")
	public AghEspecialidades getEspecialidade() {
		return especialidade;
	}

	public void setLeito(AinLeitos leito) {
		this.leito = leito;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "lto_lto_id", referencedColumnName = "lto_id")
	public AinLeitos getLeito() {
		return leito;
	}

	public void setQuarto(AinQuartos quarto) {
		this.quarto = quarto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "qrt_numero", referencedColumnName = "numero")
	public AinQuartos getQuarto() {
		return quarto;
	}

	public void setServidorFazParte(RapServidores servidorFazParte) {
		this.servidorFazParte = servidorFazParte;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "ser_matricula_faz_parte", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "ser_vin_codigo_faz_parte", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorFazParte() {
		return servidorFazParte;
	}

	public void setUnidade(AghUnidadesFuncionais unidade) {
		this.unidade = unidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "unf_seq", referencedColumnName = "seq")
	public AghUnidadesFuncionais getUnidade() {
		return unidade;
	}

}
