package br.gov.mec.aghu.model;

// Generated 08/04/2010 19:03:53 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.Max;




import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioTipoResponsabilidade;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;
import br.gov.mec.aghu.core.validation.CPF;

/**
 * AinResponsaveisPaciente generated by hbm2java
 */
@Entity
@Table(name = "AIN_RESPONSAVEIS_PACIENTE", schema = "AGH")
@SequenceGenerator(name="ainRepSq1", sequenceName="AGH.AIN_REP_SQ1", allocationSize = 1)
public class AinResponsaveisPaciente extends BaseEntitySeq<Integer> implements java.io.Serializable {

	private static final long serialVersionUID = -4635355404305388926L;
	
	private Integer seq;
	private AinInternacao internacao;
	private RapServidores servidor;
	private String nome;
	private Long cpf;
	private DominioTipoResponsabilidade tipoResponsabilidade;
	private Date criadoEm;
	private String logradouro;
	private String cidade;
	private AipUfs uf;
	private Integer cep;
	private Short dddFone;
	private Long fone;
	private Long regNascimento;
	private Long nroCartaoSaude;
	private Long rg;
	private String orgaoEmisRg;
	private String nomeMae;
	private AghAtendimentos atendimento;
	private CntaConv cntaConv;
	private String email;
	private String emailPaciente;
	private Date dtNascimento;
	private AghResponsavel responsavelConta;
	
	public AinResponsaveisPaciente() {
	}

	public AinResponsaveisPaciente(Integer seq, RapServidores servidor, String nome, DominioTipoResponsabilidade tipoResponsabilidade,
			Date criadoEm) {
		this.seq = seq;
		this.servidor = servidor;
		this.nome = nome;
		this.tipoResponsabilidade = tipoResponsabilidade;
		this.criadoEm = criadoEm;
	}

	public AinResponsaveisPaciente(Integer seq, AinInternacao internacao, RapServidores servidor, String nome, Long cpf,
			DominioTipoResponsabilidade tipoResponsabilidade, Date criadoEm, String logradouro,
			String cidade, AipUfs uf, Integer cep, Short dddFone,
			Long fone, Long regNascimento, Long nroCartaoSaude, Long rg,
			String orgaoEmisRg, String nomeMae, AghAtendimentos atendimento, CntaConv cntaConv,
			String email, String emailPaciente) {
		this.seq = seq;
		this.internacao = internacao;
		this.servidor = servidor;
		this.nome = nome;
		this.cpf = cpf;
		this.tipoResponsabilidade = tipoResponsabilidade;
		this.criadoEm = criadoEm;
		this.logradouro = logradouro;
		this.cidade = cidade;
		this.uf = uf;
		this.cep = cep;
		this.dddFone = dddFone;
		this.fone = fone;
		this.regNascimento = regNascimento;
		this.nroCartaoSaude = nroCartaoSaude;
		this.rg = rg;
		this.orgaoEmisRg = orgaoEmisRg;
		this.nomeMae = nomeMae;
		this.atendimento = atendimento;
		this.cntaConv = cntaConv;
		this.email = email;
		this.emailPaciente = emailPaciente;
	}

	@Id
	@Column(name = "SEQ", nullable = false, precision = 8, scale = 0)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "ainRepSq1")
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INT_SEQ")
	public AinInternacao getInternacao() {
		return this.internacao;
	}

	public void setInternacao(AinInternacao internacao) {
		this.internacao = internacao;
	}

	@Column(name = "NOME", nullable = false)
	@Length(max = 100, message="Nome deve ter no máximo 100 caracteres.")
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "CPF", precision = 11, scale = 0)
	@CPF
	public Long getCpf() {
		return this.cpf;
	}

	public void setCpf(Long cpf) {
		this.cpf = cpf;
	}

	@Column(name = "TIPO_RESPONSABILIDADE", nullable = false, length = 2)
	@Enumerated(EnumType.STRING)
	public DominioTipoResponsabilidade getTipoResponsabilidade() {
		return this.tipoResponsabilidade;
	}

	public void setTipoResponsabilidade(DominioTipoResponsabilidade tipoResponsabilidade) {
		this.tipoResponsabilidade = tipoResponsabilidade;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "LOGRADOURO", length = 60)
	@Length(max = 60, message="Logradouro deve ter no máximo 60 caracteres.")
	public String getLogradouro() {
		return this.logradouro;
	}

	public void setLogradouro(String logradouro) {
		this.logradouro = logradouro;
	}

	@Column(name = "CIDADE", length = 35)
	@Length(max = 35, message="Cidade deve ter no máximo 35 caracteres.")
	public String getCidade() {
		return this.cidade;
	}

	public void setCidade(String cidade) {
		this.cidade = cidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UF_SIGLA")
	public AipUfs getUf() {
		return this.uf;
	}

	public void setUf(AipUfs uf) {
		this.uf = uf;
	}

	@Column(name = "CEP", precision = 8, scale = 0)
	public Integer getCep() {
		return this.cep;
	}

	public void setCep(Integer cep) {
		this.cep = cep;
	}

	@Column(name = "DDD_FONE", precision = 4, scale = 0)
	public Short getDddFone() {
		return this.dddFone;
	}

	public void setDddFone(Short dddFone) {
		this.dddFone = dddFone;
	}

	@Column(name = "FONE", length = 10)
	@Max(value = 9999999999L, message = "Valor máximo permitido: 999 999 9999")
	public Long getFone() {
		return this.fone;
	}

	public void setFone(Long fone) {
		this.fone = fone;
	}

	@Column(name = "REG_NASCIMENTO", length = 10)
	@Max(value = 9999999999L, message = "Valor máximo permitido: 9999999999")
	public Long getRegNascimento() {
		return this.regNascimento;
	}

	public void setRegNascimento(Long regNascimento) {
		this.regNascimento = regNascimento;
	}

	@Column(name = "NRO_CARTAO_SAUDE", length = 11)
	@Max(value = 99999999999L, message = "Valor máximo permitido: 99999999999")
	public Long getNroCartaoSaude() {
		return this.nroCartaoSaude;
	}

	public void setNroCartaoSaude(Long nroCartaoSaude) {
		this.nroCartaoSaude = nroCartaoSaude;
	}

	@Column(name = "RG", length = 10)
	@Max(value = 9999999999L, message = "Valor máximo permitido: 9999999999")
	public Long getRg() {
		return this.rg;
	}

	public void setRg(Long rg) {
		this.rg = rg;
	}

	@Column(name = "ORGAO_EMIS_RG", length = 10)
	@Length(max = 10, message="Órgão emissor deve ter no máximo 10 caracteres.")
	public String getOrgaoEmisRg() {
		return this.orgaoEmisRg;
	}

	public void setOrgaoEmisRg(String orgaoEmisRg) {
		this.orgaoEmisRg = orgaoEmisRg;
	}

	@Column(name = "NOME_MAE", length = 50)
	@Length(max = 50, message="Nome da mãe deve ter no máximo 50 caracteres.")
	public String getNomeMae() {
		return this.nomeMae;
	}

	public void setNomeMae(String nomeMae) {
		this.nomeMae = nomeMae;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ")
	public AghAtendimentos getAtendimento() {
		return this.atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CTA_NRO")
	public CntaConv getCntaConv() {
		return this.cntaConv;
	}

	public void setCntaConv(CntaConv cntaConv) {
		this.cntaConv = cntaConv;
	}

	@Column(name = "EMAIL", length = 50)
	@Length(max = 50, message="Email deve ter no máximo 50 caracteres.")
	@Email
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "EMAIL_PACIENTE", length = 50)
	@Length(max = 50, message="Email do paciente deve ter no máximo 50 caracteres.")
	@Email
	public String getEmailPaciente() {
		return this.emailPaciente;
	}

	public void setEmailPaciente(String emailPaciente) {
		this.emailPaciente = emailPaciente;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA",nullable=false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO",nullable=false) })
	public RapServidores getServidor() {
		return servidor;
	}
	
	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA_NASCIMENTO")
	public Date getDtNascimento() {
		return this.dtNascimento;
	}

	public void setDtNascimento(Date dtNascimento) {
		this.dtNascimento = dtNascimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RES_SEQ")
	public AghResponsavel getResponsavelConta() {
		return responsavelConta;
	}

	public void setResponsavelConta(AghResponsavel responsavelConta) {
		this.responsavelConta = responsavelConta;
	}
	
	public enum Fields {
		SEQ("seq"), INTERNACAO_SEQ("internacao.seq"), 
		NRO_CONTA("cntaConv.nro"), TIPO_RESPONSABILIDADE("tipoResponsabilidade"),
		NOME("nome"), LOGRADOURO("logradouro"), CIDADE("cidade"),
		UF("uf.sigla"), CEP("cep"), FONE("fone"), DATA_NASCIMENTO("dtNascimento"),
		INTERNACAO("internacao"), RESPONSAVEL_CONTA("responsavelConta");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (!super.equals(obj)) {
			return false;
		}
		if (!(obj instanceof AinResponsaveisPaciente)) {
			return false;
		}
		AinResponsaveisPaciente other = (AinResponsaveisPaciente) obj;

		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}
	
	
}
